
RGB_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e0  00800100  000014a0  00001534  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  008001e0  008001e0  00001614  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001614  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001644  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001beb  00000000  00000000  0000176c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000901  00000000  00000000  00003357  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ce8  00000000  00000000  00003c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00004940  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000739  00000000  00000000  00004bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010b6  00000000  00000000  00005315  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  000063cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__ctors_end>
       4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
       8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
       c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      10:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      14:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      18:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      1c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      20:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      24:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      28:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      2c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      30:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      34:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      38:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      3c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      40:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      44:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      48:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      4c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      50:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      54:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      58:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      5c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      60:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      64:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      68:	56 01       	movw	r10, r12
      6a:	70 01       	movw	r14, r0
      6c:	70 01       	movw	r14, r0
      6e:	70 01       	movw	r14, r0
      70:	54 01       	movw	r10, r8
      72:	70 01       	movw	r14, r0
      74:	72 01       	movw	r14, r4
      76:	52 01       	movw	r10, r4
      78:	70 01       	movw	r14, r0
      7a:	70 01       	movw	r14, r0
      7c:	70 01       	movw	r14, r0
      7e:	70 01       	movw	r14, r0
      80:	70 01       	movw	r14, r0
      82:	70 01       	movw	r14, r0
      84:	70 01       	movw	r14, r0
      86:	70 01       	movw	r14, r0
      88:	70 01       	movw	r14, r0
      8a:	70 01       	movw	r14, r0
      8c:	70 01       	movw	r14, r0
      8e:	70 01       	movw	r14, r0
      90:	70 01       	movw	r14, r0
      92:	70 01       	movw	r14, r0
      94:	70 01       	movw	r14, r0
      96:	70 01       	movw	r14, r0
      98:	70 01       	movw	r14, r0
      9a:	70 01       	movw	r14, r0
      9c:	70 01       	movw	r14, r0
      9e:	70 01       	movw	r14, r0
      a0:	70 01       	movw	r14, r0
      a2:	70 01       	movw	r14, r0
      a4:	70 01       	movw	r14, r0
      a6:	70 01       	movw	r14, r0
      a8:	70 01       	movw	r14, r0
      aa:	70 01       	movw	r14, r0
      ac:	70 01       	movw	r14, r0
      ae:	70 01       	movw	r14, r0
      b0:	70 01       	movw	r14, r0
      b2:	70 01       	movw	r14, r0
      b4:	70 01       	movw	r14, r0
      b6:	70 01       	movw	r14, r0
      b8:	70 01       	movw	r14, r0
      ba:	70 01       	movw	r14, r0
      bc:	70 01       	movw	r14, r0
      be:	70 01       	movw	r14, r0
      c0:	70 01       	movw	r14, r0
      c2:	70 01       	movw	r14, r0
      c4:	70 01       	movw	r14, r0
      c6:	70 01       	movw	r14, r0
      c8:	70 01       	movw	r14, r0
      ca:	70 01       	movw	r14, r0
      cc:	70 01       	movw	r14, r0
      ce:	70 01       	movw	r14, r0
      d0:	70 01       	movw	r14, r0
      d2:	70 01       	movw	r14, r0
      d4:	70 01       	movw	r14, r0
      d6:	70 01       	movw	r14, r0
      d8:	70 01       	movw	r14, r0
      da:	70 01       	movw	r14, r0
      dc:	70 01       	movw	r14, r0
      de:	70 01       	movw	r14, r0
      e0:	70 01       	movw	r14, r0
      e2:	70 01       	movw	r14, r0
      e4:	70 01       	movw	r14, r0
      e6:	70 01       	movw	r14, r0
      e8:	5e 01       	movw	r10, r28
      ea:	70 01       	movw	r14, r0
      ec:	70 01       	movw	r14, r0
      ee:	70 01       	movw	r14, r0
      f0:	5c 01       	movw	r10, r24
      f2:	70 01       	movw	r14, r0
      f4:	5a 01       	movw	r10, r20
      f6:	58 01       	movw	r10, r16
      f8:	70 01       	movw	r14, r0
      fa:	70 01       	movw	r14, r0
      fc:	70 01       	movw	r14, r0
      fe:	70 01       	movw	r14, r0
     100:	70 01       	movw	r14, r0
     102:	70 01       	movw	r14, r0
     104:	70 01       	movw	r14, r0
     106:	70 01       	movw	r14, r0
     108:	70 01       	movw	r14, r0
     10a:	70 01       	movw	r14, r0
     10c:	70 01       	movw	r14, r0
     10e:	70 01       	movw	r14, r0
     110:	70 01       	movw	r14, r0
     112:	70 01       	movw	r14, r0
     114:	70 01       	movw	r14, r0
     116:	70 01       	movw	r14, r0
     118:	70 01       	movw	r14, r0
     11a:	70 01       	movw	r14, r0
     11c:	70 01       	movw	r14, r0
     11e:	70 01       	movw	r14, r0
     120:	70 01       	movw	r14, r0
     122:	70 01       	movw	r14, r0
     124:	70 01       	movw	r14, r0
     126:	70 01       	movw	r14, r0
     128:	66 01       	movw	r12, r12
     12a:	70 01       	movw	r14, r0
     12c:	70 01       	movw	r14, r0
     12e:	70 01       	movw	r14, r0
     130:	64 01       	movw	r12, r8
     132:	70 01       	movw	r14, r0
     134:	62 01       	movw	r12, r4
     136:	60 01       	movw	r12, r0
     138:	70 01       	movw	r14, r0
     13a:	70 01       	movw	r14, r0
     13c:	70 01       	movw	r14, r0
     13e:	70 01       	movw	r14, r0
     140:	70 01       	movw	r14, r0
     142:	70 01       	movw	r14, r0
     144:	70 01       	movw	r14, r0
     146:	70 01       	movw	r14, r0
     148:	6e 01       	movw	r12, r28
     14a:	70 01       	movw	r14, r0
     14c:	70 01       	movw	r14, r0
     14e:	70 01       	movw	r14, r0
     150:	6c 01       	movw	r12, r24
     152:	70 01       	movw	r14, r0
     154:	6a 01       	movw	r12, r20
     156:	68 01       	movw	r12, r16
     158:	07 63       	ori	r16, 0x37	; 55
     15a:	42 36       	cpi	r20, 0x62	; 98
     15c:	b7 9b       	sbis	0x16, 7	; 22
     15e:	d8 a7       	std	Y+40, r29	; 0x28
     160:	1a 39       	cpi	r17, 0x9A	; 154
     162:	68 56       	subi	r22, 0x68	; 104
     164:	18 ae       	std	Y+56, r1	; 0x38
     166:	ba ab       	std	Y+50, r27	; 0x32
     168:	55 8c       	ldd	r5, Z+29	; 0x1d
     16a:	1d 3c       	cpi	r17, 0xCD	; 205
     16c:	b7 cc       	rjmp	.-1682   	; 0xfffffadc <__eeprom_end+0xff7efadc>
     16e:	57 63       	ori	r21, 0x37	; 55
     170:	bd 6d       	ori	r27, 0xDD	; 221
     172:	ed fd       	.word	0xfded	; ????
     174:	75 3e       	cpi	r23, 0xE5	; 229
     176:	f6 17       	cp	r31, r22
     178:	72 31       	cpi	r23, 0x12	; 18
     17a:	bf 00       	.word	0x00bf	; ????
     17c:	00 00       	nop
     17e:	80 3f       	cpi	r24, 0xF0	; 240
     180:	08 00       	.word	0x0008	; ????
     182:	00 00       	nop
     184:	be 92       	st	-X, r11
     186:	24 49       	sbci	r18, 0x94	; 148
     188:	12 3e       	cpi	r17, 0xE2	; 226
     18a:	ab aa       	std	Y+51, r10	; 0x33
     18c:	aa 2a       	or	r10, r26
     18e:	be cd       	rjmp	.-1156   	; 0xfffffd0c <__eeprom_end+0xff7efd0c>
     190:	cc cc       	rjmp	.-1640   	; 0xfffffb2a <__eeprom_end+0xff7efb2a>
     192:	4c 3e       	cpi	r20, 0xEC	; 236
     194:	00 00       	nop
     196:	00 80       	ld	r0, Z
     198:	be ab       	std	Y+54, r27	; 0x36
     19a:	aa aa       	std	Y+50, r10	; 0x32
     19c:	aa 3e       	cpi	r26, 0xEA	; 234
     19e:	00 00       	nop
     1a0:	00 00       	nop
     1a2:	bf 00       	.word	0x00bf	; ????
     1a4:	00 00       	nop
     1a6:	80 3f       	cpi	r24, 0xF0	; 240
     1a8:	00 00       	nop
     1aa:	00 00       	nop
     1ac:	00 08       	sbc	r0, r0
     1ae:	41 78       	andi	r20, 0x81	; 129
     1b0:	d3 bb       	out	0x13, r29	; 19
     1b2:	43 87       	std	Z+11, r20	; 0x0b
     1b4:	d1 13       	cpse	r29, r17
     1b6:	3d 19       	sub	r19, r13
     1b8:	0e 3c       	cpi	r16, 0xCE	; 206
     1ba:	c3 bd       	out	0x23, r28	; 35
     1bc:	42 82       	std	Z+2, r4	; 0x02
     1be:	ad 2b       	or	r26, r29
     1c0:	3e 68       	ori	r19, 0x8E	; 142
     1c2:	ec 82       	std	Y+4, r14	; 0x04
     1c4:	76 be       	out	0x36, r7	; 54
     1c6:	d9 8f       	std	Y+25, r29	; 0x19
     1c8:	e1 a9       	ldd	r30, Z+49	; 0x31
     1ca:	3e 4c       	sbci	r19, 0xCE	; 206
     1cc:	80 ef       	ldi	r24, 0xF0	; 240
     1ce:	ff be       	out	0x3f, r15	; 63
     1d0:	01 c4       	rjmp	.+2050   	; 0x9d4 <_Z8RGBcalibv+0x78>
     1d2:	ff 7f       	andi	r31, 0xFF	; 255
     1d4:	3f 00       	.word	0x003f	; ????
     1d6:	00 00       	nop
	...

000001da <__ctors_end>:
     1da:	11 24       	eor	r1, r1
     1dc:	1f be       	out	0x3f, r1	; 63
     1de:	cf ef       	ldi	r28, 0xFF	; 255
     1e0:	d8 e0       	ldi	r29, 0x08	; 8
     1e2:	de bf       	out	0x3e, r29	; 62
     1e4:	cd bf       	out	0x3d, r28	; 61

000001e6 <__do_copy_data>:
     1e6:	11 e0       	ldi	r17, 0x01	; 1
     1e8:	a0 e0       	ldi	r26, 0x00	; 0
     1ea:	b1 e0       	ldi	r27, 0x01	; 1
     1ec:	e0 ea       	ldi	r30, 0xA0	; 160
     1ee:	f4 e1       	ldi	r31, 0x14	; 20
     1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <__do_copy_data+0x10>
     1f2:	05 90       	lpm	r0, Z+
     1f4:	0d 92       	st	X+, r0
     1f6:	a0 3e       	cpi	r26, 0xE0	; 224
     1f8:	b1 07       	cpc	r27, r17
     1fa:	d9 f7       	brne	.-10     	; 0x1f2 <__do_copy_data+0xc>

000001fc <__do_clear_bss>:
     1fc:	21 e0       	ldi	r18, 0x01	; 1
     1fe:	a0 ee       	ldi	r26, 0xE0	; 224
     200:	b1 e0       	ldi	r27, 0x01	; 1
     202:	01 c0       	rjmp	.+2      	; 0x206 <.do_clear_bss_start>

00000204 <.do_clear_bss_loop>:
     204:	1d 92       	st	X+, r1

00000206 <.do_clear_bss_start>:
     206:	ad 3e       	cpi	r26, 0xED	; 237
     208:	b2 07       	cpc	r27, r18
     20a:	e1 f7       	brne	.-8      	; 0x204 <.do_clear_bss_loop>
     20c:	0e 94 4b 05 	call	0xa96	; 0xa96 <main>
     210:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <_exit>

00000214 <__bad_interrupt>:
     214:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000218 <_Z24KEYPAD_WaitForKeyReleasev>:
		}
	
	}	
	return 0;
		
}
     218:	8f e0       	ldi	r24, 0x0F	; 15
     21a:	8b b9       	out	0x0b, r24	; 11
     21c:	89 b1       	in	r24, 0x09	; 9
     21e:	8f 70       	andi	r24, 0x0F	; 15
     220:	8f 30       	cpi	r24, 0x0F	; 15
     222:	d1 f7       	brne	.-12     	; 0x218 <_Z24KEYPAD_WaitForKeyReleasev>
     224:	08 95       	ret

00000226 <_Z22KEYPAD_WaitForKeyPressv>:
     226:	8f e0       	ldi	r24, 0x0F	; 15
     228:	8b b9       	out	0x0b, r24	; 11
     22a:	89 b1       	in	r24, 0x09	; 9
     22c:	8f 70       	andi	r24, 0x0F	; 15
     22e:	8f 30       	cpi	r24, 0x0F	; 15
     230:	d1 f3       	breq	.-12     	; 0x226 <_Z22KEYPAD_WaitForKeyPressv>
     232:	8f ec       	ldi	r24, 0xCF	; 207
     234:	97 e0       	ldi	r25, 0x07	; 7
     236:	01 97       	sbiw	r24, 0x01	; 1
     238:	f1 f7       	brne	.-4      	; 0x236 <_Z22KEYPAD_WaitForKeyPressv+0x10>
     23a:	00 c0       	rjmp	.+0      	; 0x23c <_Z22KEYPAD_WaitForKeyPressv+0x16>
     23c:	00 00       	nop
     23e:	8f e0       	ldi	r24, 0x0F	; 15
     240:	8b b9       	out	0x0b, r24	; 11
     242:	89 b1       	in	r24, 0x09	; 9
     244:	8f 70       	andi	r24, 0x0F	; 15
     246:	8f 30       	cpi	r24, 0x0F	; 15
     248:	71 f3       	breq	.-36     	; 0x226 <_Z22KEYPAD_WaitForKeyPressv>
     24a:	08 95       	ret

0000024c <_Z14KEYPAD_ScanKeyv>:
     24c:	20 e0       	ldi	r18, 0x00	; 0
     24e:	90 ee       	ldi	r25, 0xE0	; 224
     250:	24 30       	cpi	r18, 0x04	; 4
     252:	58 f4       	brcc	.+22     	; 0x26a <_Z14KEYPAD_ScanKeyv+0x1e>
     254:	8f e0       	ldi	r24, 0x0F	; 15
     256:	89 0f       	add	r24, r25
     258:	8b b9       	out	0x0b, r24	; 11
     25a:	89 b1       	in	r24, 0x09	; 9
     25c:	8f 70       	andi	r24, 0x0F	; 15
     25e:	8f 30       	cpi	r24, 0x0F	; 15
     260:	21 f4       	brne	.+8      	; 0x26a <_Z14KEYPAD_ScanKeyv+0x1e>
     262:	99 0f       	add	r25, r25
     264:	90 5f       	subi	r25, 0xF0	; 240
     266:	2f 5f       	subi	r18, 0xFF	; 255
     268:	f3 cf       	rjmp	.-26     	; 0x250 <_Z14KEYPAD_ScanKeyv+0x4>
     26a:	90 7f       	andi	r25, 0xF0	; 240
     26c:	89 0f       	add	r24, r25
     26e:	08 95       	ret

00000270 <_Z11KEYPAD_Initv>:
     270:	80 ef       	ldi	r24, 0xF0	; 240
     272:	8a b9       	out	0x0a, r24	; 10
     274:	08 95       	ret

00000276 <_Z13KEYPAD_GetKeyv>:
     276:	0e 94 0c 01 	call	0x218	; 0x218 <_Z24KEYPAD_WaitForKeyReleasev>
     27a:	8f e3       	ldi	r24, 0x3F	; 63
     27c:	9c e9       	ldi	r25, 0x9C	; 156
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	f1 f7       	brne	.-4      	; 0x27e <_Z13KEYPAD_GetKeyv+0x8>
     282:	00 c0       	rjmp	.+0      	; 0x284 <_Z13KEYPAD_GetKeyv+0xe>
     284:	00 00       	nop
     286:	0e 94 13 01 	call	0x226	; 0x226 <_Z22KEYPAD_WaitForKeyPressv>
     28a:	0e 94 26 01 	call	0x24c	; 0x24c <_Z14KEYPAD_ScanKeyv>
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	fc 01       	movw	r30, r24
     292:	e7 57       	subi	r30, 0x77	; 119
     294:	f1 09       	sbc	r31, r1
     296:	e8 37       	cpi	r30, 0x78	; 120
     298:	f1 05       	cpc	r31, r1
     29a:	10 f5       	brcc	.+68     	; 0x2e0 <_Z13KEYPAD_GetKeyv+0x6a>
     29c:	ec 5c       	subi	r30, 0xCC	; 204
     29e:	ff 4f       	sbci	r31, 0xFF	; 255
     2a0:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__tablejump2__>
     2a4:	87 e0       	ldi	r24, 0x07	; 7
     2a6:	08 95       	ret
     2a8:	89 e0       	ldi	r24, 0x09	; 9
     2aa:	08 95       	ret
     2ac:	81 e4       	ldi	r24, 0x41	; 65
     2ae:	08 95       	ret
     2b0:	84 e0       	ldi	r24, 0x04	; 4
     2b2:	08 95       	ret
     2b4:	85 e0       	ldi	r24, 0x05	; 5
     2b6:	08 95       	ret
     2b8:	86 e0       	ldi	r24, 0x06	; 6
     2ba:	08 95       	ret
     2bc:	82 e4       	ldi	r24, 0x42	; 66
     2be:	08 95       	ret
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	08 95       	ret
     2c4:	82 e0       	ldi	r24, 0x02	; 2
     2c6:	08 95       	ret
     2c8:	83 e0       	ldi	r24, 0x03	; 3
     2ca:	08 95       	ret
     2cc:	83 e4       	ldi	r24, 0x43	; 67
     2ce:	08 95       	ret
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	08 95       	ret
     2d4:	86 e4       	ldi	r24, 0x46	; 70
     2d6:	08 95       	ret
     2d8:	85 e4       	ldi	r24, 0x45	; 69
     2da:	08 95       	ret
     2dc:	84 e4       	ldi	r24, 0x44	; 68
     2de:	08 95       	ret
     2e0:	88 e4       	ldi	r24, 0x48	; 72
     2e2:	08 95       	ret
     2e4:	88 e0       	ldi	r24, 0x08	; 8
     2e6:	08 95       	ret

000002e8 <_Z9I2C_Startv>:
     2e8:	84 ea       	ldi	r24, 0xA4	; 164
     2ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2ee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2f2:	88 23       	and	r24, r24
     2f4:	e4 f7       	brge	.-8      	; 0x2ee <_Z9I2C_Startv+0x6>
     2f6:	08 95       	ret

000002f8 <_Z8I2C_Stopv>:
     2f8:	84 e9       	ldi	r24, 0x94	; 148
     2fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2fe:	8a e1       	ldi	r24, 0x1A	; 26
     300:	8a 95       	dec	r24
     302:	f1 f7       	brne	.-4      	; 0x300 <_Z8I2C_Stopv+0x8>
     304:	00 c0       	rjmp	.+0      	; 0x306 <_Z8I2C_Stopv+0xe>
     306:	08 95       	ret

00000308 <_Z9I2C_Writeh>:
     308:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     30c:	84 e8       	ldi	r24, 0x84	; 132
     30e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     312:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     316:	88 23       	and	r24, r24
     318:	e4 f7       	brge	.-8      	; 0x312 <_Z9I2C_Writeh+0xa>
     31a:	08 95       	ret

0000031c <_Z8I2C_Initv>:
     31c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     320:	86 e4       	ldi	r24, 0x46	; 70
     322:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     326:	84 e0       	ldi	r24, 0x04	; 4
     328:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     32c:	08 95       	ret

0000032e <_Z12LCD_CmdWritec>:
     32e:	98 2f       	mov	r25, r24
     330:	90 7f       	andi	r25, 0xF0	; 240
     332:	95 b9       	out	0x05, r25	; 5
     334:	98 b1       	in	r25, 0x08	; 8
     336:	9d 7f       	andi	r25, 0xFD	; 253
     338:	98 b9       	out	0x08, r25	; 8
     33a:	98 b1       	in	r25, 0x08	; 8
     33c:	94 60       	ori	r25, 0x04	; 4
     33e:	98 b9       	out	0x08, r25	; 8
     340:	22 e0       	ldi	r18, 0x02	; 2
     342:	2a 95       	dec	r18
     344:	f1 f7       	brne	.-4      	; 0x342 <_Z12LCD_CmdWritec+0x14>
     346:	00 c0       	rjmp	.+0      	; 0x348 <_Z12LCD_CmdWritec+0x1a>
     348:	98 b1       	in	r25, 0x08	; 8
     34a:	9b 7f       	andi	r25, 0xFB	; 251
     34c:	98 b9       	out	0x08, r25	; 8
     34e:	9a e1       	ldi	r25, 0x1A	; 26
     350:	9a 95       	dec	r25
     352:	f1 f7       	brne	.-4      	; 0x350 <_Z12LCD_CmdWritec+0x22>
     354:	00 c0       	rjmp	.+0      	; 0x356 <_Z12LCD_CmdWritec+0x28>
     356:	20 e1       	ldi	r18, 0x10	; 16
     358:	82 9f       	mul	r24, r18
     35a:	c0 01       	movw	r24, r0
     35c:	11 24       	eor	r1, r1
     35e:	85 b9       	out	0x05, r24	; 5
     360:	88 b1       	in	r24, 0x08	; 8
     362:	8d 7f       	andi	r24, 0xFD	; 253
     364:	88 b9       	out	0x08, r24	; 8
     366:	88 b1       	in	r24, 0x08	; 8
     368:	84 60       	ori	r24, 0x04	; 4
     36a:	88 b9       	out	0x08, r24	; 8
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	8a 95       	dec	r24
     370:	f1 f7       	brne	.-4      	; 0x36e <_Z12LCD_CmdWritec+0x40>
     372:	00 c0       	rjmp	.+0      	; 0x374 <_Z12LCD_CmdWritec+0x46>
     374:	88 b1       	in	r24, 0x08	; 8
     376:	8b 7f       	andi	r24, 0xFB	; 251
     378:	88 b9       	out	0x08, r24	; 8
     37a:	8f ec       	ldi	r24, 0xCF	; 207
     37c:	97 e0       	ldi	r25, 0x07	; 7
     37e:	01 97       	sbiw	r24, 0x01	; 1
     380:	f1 f7       	brne	.-4      	; 0x37e <_Z12LCD_CmdWritec+0x50>
     382:	00 c0       	rjmp	.+0      	; 0x384 <_Z12LCD_CmdWritec+0x56>
     384:	00 00       	nop
     386:	08 95       	ret

00000388 <_Z13LCD_DataWritec>:
     388:	98 2f       	mov	r25, r24
     38a:	90 7f       	andi	r25, 0xF0	; 240
     38c:	95 b9       	out	0x05, r25	; 5
     38e:	98 b1       	in	r25, 0x08	; 8
     390:	92 60       	ori	r25, 0x02	; 2
     392:	98 b9       	out	0x08, r25	; 8
     394:	98 b1       	in	r25, 0x08	; 8
     396:	94 60       	ori	r25, 0x04	; 4
     398:	98 b9       	out	0x08, r25	; 8
     39a:	22 e0       	ldi	r18, 0x02	; 2
     39c:	2a 95       	dec	r18
     39e:	f1 f7       	brne	.-4      	; 0x39c <_Z13LCD_DataWritec+0x14>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <_Z13LCD_DataWritec+0x1a>
     3a2:	98 b1       	in	r25, 0x08	; 8
     3a4:	9b 7f       	andi	r25, 0xFB	; 251
     3a6:	98 b9       	out	0x08, r25	; 8
     3a8:	9a e1       	ldi	r25, 0x1A	; 26
     3aa:	9a 95       	dec	r25
     3ac:	f1 f7       	brne	.-4      	; 0x3aa <_Z13LCD_DataWritec+0x22>
     3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <_Z13LCD_DataWritec+0x28>
     3b0:	20 e1       	ldi	r18, 0x10	; 16
     3b2:	82 9f       	mul	r24, r18
     3b4:	c0 01       	movw	r24, r0
     3b6:	11 24       	eor	r1, r1
     3b8:	85 b9       	out	0x05, r24	; 5
     3ba:	88 b1       	in	r24, 0x08	; 8
     3bc:	82 60       	ori	r24, 0x02	; 2
     3be:	88 b9       	out	0x08, r24	; 8
     3c0:	88 b1       	in	r24, 0x08	; 8
     3c2:	84 60       	ori	r24, 0x04	; 4
     3c4:	88 b9       	out	0x08, r24	; 8
     3c6:	82 e0       	ldi	r24, 0x02	; 2
     3c8:	8a 95       	dec	r24
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <_Z13LCD_DataWritec+0x40>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <_Z13LCD_DataWritec+0x46>
     3ce:	88 b1       	in	r24, 0x08	; 8
     3d0:	8b 7f       	andi	r24, 0xFB	; 251
     3d2:	88 b9       	out	0x08, r24	; 8
     3d4:	8f ec       	ldi	r24, 0xCF	; 207
     3d6:	97 e0       	ldi	r25, 0x07	; 7
     3d8:	01 97       	sbiw	r24, 0x01	; 1
     3da:	f1 f7       	brne	.-4      	; 0x3d8 <_Z13LCD_DataWritec+0x50>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <_Z13LCD_DataWritec+0x56>
     3de:	00 00       	nop
     3e0:	08 95       	ret

000003e2 <_Z8LCD_Initv>:
     3e2:	2f e7       	ldi	r18, 0x7F	; 127
     3e4:	88 e3       	ldi	r24, 0x38	; 56
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	21 50       	subi	r18, 0x01	; 1
     3ea:	80 40       	sbci	r24, 0x00	; 0
     3ec:	90 40       	sbci	r25, 0x00	; 0
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <_Z8LCD_Initv+0x6>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <_Z8LCD_Initv+0x10>
     3f2:	00 00       	nop
     3f4:	80 ef       	ldi	r24, 0xF0	; 240
     3f6:	84 b9       	out	0x04, r24	; 4
     3f8:	86 e0       	ldi	r24, 0x06	; 6
     3fa:	87 b9       	out	0x07, r24	; 7
     3fc:	82 e0       	ldi	r24, 0x02	; 2
     3fe:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     402:	88 e2       	ldi	r24, 0x28	; 40
     404:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     408:	8e e0       	ldi	r24, 0x0E	; 14
     40a:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     40e:	81 e0       	ldi	r24, 0x01	; 1
     410:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     414:	80 e8       	ldi	r24, 0x80	; 128
     416:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     41a:	08 95       	ret

0000041c <_Z9LCD_Clearv>:
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     422:	80 e8       	ldi	r24, 0x80	; 128
     424:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     428:	08 95       	ret

0000042a <_Z17LCD_DisplayStringPc>:
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
     42e:	ec 01       	movw	r28, r24
     430:	88 81       	ld	r24, Y
     432:	88 23       	and	r24, r24
     434:	21 f0       	breq	.+8      	; 0x43e <_Z17LCD_DisplayStringPc+0x14>
     436:	21 96       	adiw	r28, 0x01	; 1
     438:	0e 94 c4 01 	call	0x388	; 0x388 <_Z13LCD_DataWritec>
     43c:	f9 cf       	rjmp	.-14     	; 0x430 <_Z17LCD_DisplayStringPc+0x6>
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	08 95       	ret

00000444 <_Z10LCD_GoToXYcc>:
     444:	81 11       	cpse	r24, r1
     446:	08 c0       	rjmp	.+16     	; 0x458 <_Z10LCD_GoToXYcc+0x14>
     448:	60 31       	cpi	r22, 0x10	; 16
     44a:	30 f4       	brcc	.+12     	; 0x458 <_Z10LCD_GoToXYcc+0x14>
     44c:	86 2f       	mov	r24, r22
     44e:	8f 70       	andi	r24, 0x0F	; 15
     450:	80 68       	ori	r24, 0x80	; 128
     452:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     456:	1d c0       	rjmp	.+58     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     458:	81 30       	cpi	r24, 0x01	; 1
     45a:	41 f4       	brne	.+16     	; 0x46c <_Z10LCD_GoToXYcc+0x28>
     45c:	60 31       	cpi	r22, 0x10	; 16
     45e:	30 f4       	brcc	.+12     	; 0x46c <_Z10LCD_GoToXYcc+0x28>
     460:	86 2f       	mov	r24, r22
     462:	8f 70       	andi	r24, 0x0F	; 15
     464:	80 6c       	ori	r24, 0xC0	; 192
     466:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     46a:	13 c0       	rjmp	.+38     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     46c:	82 30       	cpi	r24, 0x02	; 2
     46e:	41 f4       	brne	.+16     	; 0x480 <_Z10LCD_GoToXYcc+0x3c>
     470:	60 31       	cpi	r22, 0x10	; 16
     472:	30 f4       	brcc	.+12     	; 0x480 <_Z10LCD_GoToXYcc+0x3c>
     474:	86 2f       	mov	r24, r22
     476:	8f 70       	andi	r24, 0x0F	; 15
     478:	80 69       	ori	r24, 0x90	; 144
     47a:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     47e:	09 c0       	rjmp	.+18     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     480:	83 30       	cpi	r24, 0x03	; 3
     482:	39 f4       	brne	.+14     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     484:	60 31       	cpi	r22, 0x10	; 16
     486:	28 f4       	brcc	.+10     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     488:	86 2f       	mov	r24, r22
     48a:	8f 70       	andi	r24, 0x0F	; 15
     48c:	80 6d       	ori	r24, 0xD0	; 208
     48e:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     492:	8e e0       	ldi	r24, 0x0E	; 14
     494:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     498:	08 95       	ret

0000049a <_Z8adc_readh>:
     49a:	87 70       	andi	r24, 0x07	; 7
     49c:	ec e7       	ldi	r30, 0x7C	; 124
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	90 81       	ld	r25, Z
     4a2:	98 7f       	andi	r25, 0xF8	; 248
     4a4:	89 2b       	or	r24, r25
     4a6:	80 83       	st	Z, r24
     4a8:	ea e7       	ldi	r30, 0x7A	; 122
     4aa:	f0 e0       	ldi	r31, 0x00	; 0
     4ac:	80 81       	ld	r24, Z
     4ae:	80 64       	ori	r24, 0x40	; 64
     4b0:	80 83       	st	Z, r24
     4b2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     4b6:	86 fd       	sbrc	r24, 6
     4b8:	fc cf       	rjmp	.-8      	; 0x4b2 <_Z8adc_readh+0x18>
     4ba:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     4be:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     4c2:	08 95       	ret

000004c4 <_Z8adc_initv>:
     4c4:	80 e4       	ldi	r24, 0x40	; 64
     4c6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     4ca:	87 e8       	ldi	r24, 0x87	; 135
     4cc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     4d0:	08 95       	ret

000004d2 <_Z10updateMenuv>:
     4d2:	cf 93       	push	r28
     4d4:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <posCount>
     4d8:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <menusize>
     4dc:	86 17       	cp	r24, r22
     4de:	20 f0       	brcs	.+8      	; 0x4e8 <_Z10updateMenuv+0x16>
     4e0:	0e 94 df 09 	call	0x13be	; 0x13be <__udivmodqi4>
     4e4:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <posCount>
     4e8:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <prev>
     4ec:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <posCount>
     4f0:	98 17       	cp	r25, r24
     4f2:	41 f1       	breq	.+80     	; 0x544 <_Z10updateMenuv+0x72>
     4f4:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
     4f8:	c0 e0       	ldi	r28, 0x00	; 0
     4fa:	c4 30       	cpi	r28, 0x04	; 4
     4fc:	18 f5       	brcc	.+70     	; 0x544 <_Z10updateMenuv+0x72>
     4fe:	60 e0       	ldi	r22, 0x00	; 0
     500:	8c 2f       	mov	r24, r28
     502:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     506:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <posCount>
     50a:	c8 13       	cpse	r28, r24
     50c:	11 c0       	rjmp	.+34     	; 0x530 <_Z10updateMenuv+0x5e>
     50e:	20 e1       	ldi	r18, 0x10	; 16
     510:	c2 9f       	mul	r28, r18
     512:	c0 01       	movw	r24, r0
     514:	11 24       	eor	r1, r1
     516:	81 5f       	subi	r24, 0xF1	; 241
     518:	9e 4f       	sbci	r25, 0xFE	; 254
     51a:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     51e:	6e e0       	ldi	r22, 0x0E	; 14
     520:	8c 2f       	mov	r24, r28
     522:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     526:	8d ed       	ldi	r24, 0xDD	; 221
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     52e:	08 c0       	rjmp	.+16     	; 0x540 <_Z10updateMenuv+0x6e>
     530:	20 e1       	ldi	r18, 0x10	; 16
     532:	c2 9f       	mul	r28, r18
     534:	c0 01       	movw	r24, r0
     536:	11 24       	eor	r1, r1
     538:	81 5f       	subi	r24, 0xF1	; 241
     53a:	9e 4f       	sbci	r25, 0xFE	; 254
     53c:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     540:	cf 5f       	subi	r28, 0xFF	; 255
     542:	db cf       	rjmp	.-74     	; 0x4fa <_Z10updateMenuv+0x28>
     544:	cf 91       	pop	r28
     546:	08 95       	ret

00000548 <_Z16checkButtonPressv>:
     548:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     54c:	81 34       	cpi	r24, 0x41	; 65
     54e:	91 f0       	breq	.+36     	; 0x574 <_Z16checkButtonPressv+0x2c>
     550:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     554:	82 34       	cpi	r24, 0x42	; 66
     556:	81 f0       	breq	.+32     	; 0x578 <_Z16checkButtonPressv+0x30>
     558:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     55c:	83 34       	cpi	r24, 0x43	; 67
     55e:	71 f0       	breq	.+28     	; 0x57c <_Z16checkButtonPressv+0x34>
     560:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     564:	84 34       	cpi	r24, 0x44	; 68
     566:	61 f0       	breq	.+24     	; 0x580 <_Z16checkButtonPressv+0x38>
     568:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     56c:	85 34       	cpi	r24, 0x45	; 69
     56e:	51 f4       	brne	.+20     	; 0x584 <_Z16checkButtonPressv+0x3c>
     570:	85 e0       	ldi	r24, 0x05	; 5
     572:	08 95       	ret
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	08 95       	ret
     578:	82 e0       	ldi	r24, 0x02	; 2
     57a:	08 95       	ret
     57c:	83 e0       	ldi	r24, 0x03	; 3
     57e:	08 95       	ret
     580:	84 e0       	ldi	r24, 0x04	; 4
     582:	08 95       	ret
     584:	86 e0       	ldi	r24, 0x06	; 6
     586:	08 95       	ret

00000588 <_Z9RGBupdatec>:
void RGBupdate(char t){  //not completed have to done more
     588:	df 92       	push	r13
     58a:	ef 92       	push	r14
     58c:	ff 92       	push	r15
     58e:	0f 93       	push	r16
     590:	1f 93       	push	r17
     592:	cf 93       	push	r28
     594:	df 93       	push	r29
     596:	cd b7       	in	r28, 0x3d	; 61
     598:	de b7       	in	r29, 0x3e	; 62
     59a:	27 97       	sbiw	r28, 0x07	; 7
     59c:	0f b6       	in	r0, 0x3f	; 63
     59e:	f8 94       	cli
     5a0:	de bf       	out	0x3e, r29	; 62
     5a2:	0f be       	out	0x3f, r0	; 63
     5a4:	cd bf       	out	0x3d, r28	; 61
     5a6:	d8 2e       	mov	r13, r24
	LCD_Clear();
     5a8:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	LCD_DisplayString("R   G   B");
     5ac:	8f e6       	ldi	r24, 0x6F	; 111
     5ae:	91 e0       	ldi	r25, 0x01	; 1
     5b0:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	for (char i=0;i<3;i++){ //not completed interface part only
     5b4:	10 e0       	ldi	r17, 0x00	; 0
     5b6:	13 30       	cpi	r17, 0x03	; 3
     5b8:	68 f5       	brcc	.+90     	; 0x614 <_Z9RGBupdatec+0x8c>
		LCD_GoToXY(1,i*4);
     5ba:	01 2f       	mov	r16, r17
     5bc:	00 0f       	add	r16, r16
     5be:	00 0f       	add	r16, r16
     5c0:	60 2f       	mov	r22, r16
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
		char num_char[7];
		itoa(RGBval[i], num_char, 10);
     5c8:	e1 2e       	mov	r14, r17
     5ca:	f1 2c       	mov	r15, r1
     5cc:	f7 01       	movw	r30, r14
     5ce:	ee 0f       	add	r30, r30
     5d0:	ff 1f       	adc	r31, r31
     5d2:	e0 52       	subi	r30, 0x20	; 32
     5d4:	fe 4f       	sbci	r31, 0xFE	; 254
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     5d6:	4a e0       	ldi	r20, 0x0A	; 10
     5d8:	be 01       	movw	r22, r28
     5da:	6f 5f       	subi	r22, 0xFF	; 255
     5dc:	7f 4f       	sbci	r23, 0xFF	; 255
     5de:	80 81       	ld	r24, Z
     5e0:	91 81       	ldd	r25, Z+1	; 0x01
     5e2:	0e 94 19 0a 	call	0x1432	; 0x1432 <__itoa_ncheck>
		LCD_DisplayString(num_char);
     5e6:	ce 01       	movw	r24, r28
     5e8:	01 96       	adiw	r24, 0x01	; 1
     5ea:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
		if (t==i+menusize){
     5ee:	8d 2d       	mov	r24, r13
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <menusize>
     5f6:	e2 0e       	add	r14, r18
     5f8:	f1 1c       	adc	r15, r1
     5fa:	8e 15       	cp	r24, r14
     5fc:	9f 05       	cpc	r25, r15
     5fe:	41 f4       	brne	.+16     	; 0x610 <_Z9RGBupdatec+0x88>
			LCD_GoToXY(2,i*4);LCD_DisplayString("___");
     600:	60 2f       	mov	r22, r16
     602:	82 e0       	ldi	r24, 0x02	; 2
     604:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     608:	89 e7       	ldi	r24, 0x79	; 121
     60a:	91 e0       	ldi	r25, 0x01	; 1
     60c:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
		
}
void RGBupdate(char t){  //not completed have to done more
	LCD_Clear();
	LCD_DisplayString("R   G   B");
	for (char i=0;i<3;i++){ //not completed interface part only
     610:	1f 5f       	subi	r17, 0xFF	; 255
     612:	d1 cf       	rjmp	.-94     	; 0x5b6 <_Z9RGBupdatec+0x2e>
		LCD_DisplayString(num_char);
		if (t==i+menusize){
			LCD_GoToXY(2,i*4);LCD_DisplayString("___");
		}
	}
}
     614:	27 96       	adiw	r28, 0x07	; 7
     616:	0f b6       	in	r0, 0x3f	; 63
     618:	f8 94       	cli
     61a:	de bf       	out	0x3e, r29	; 62
     61c:	0f be       	out	0x3f, r0	; 63
     61e:	cd bf       	out	0x3d, r28	; 61
     620:	df 91       	pop	r29
     622:	cf 91       	pop	r28
     624:	1f 91       	pop	r17
     626:	0f 91       	pop	r16
     628:	ff 90       	pop	r15
     62a:	ef 90       	pop	r14
     62c:	df 90       	pop	r13
     62e:	08 95       	ret

00000630 <_Z14RGBupdate_mechc>:
void RGBupdate_mech(char t){
     630:	8f 92       	push	r8
     632:	9f 92       	push	r9
     634:	af 92       	push	r10
     636:	bf 92       	push	r11
     638:	df 92       	push	r13
     63a:	ef 92       	push	r14
     63c:	ff 92       	push	r15
     63e:	0f 93       	push	r16
     640:	1f 93       	push	r17
     642:	cf 93       	push	r28
     644:	df 93       	push	r29
     646:	d8 2e       	mov	r13, r24
	RGBupdate(t);
     648:	0e 94 c4 02 	call	0x588	; 0x588 <_Z9RGBupdatec>
	RGBval[t-4]=0;
     64c:	ed 2c       	mov	r14, r13
     64e:	f1 2c       	mov	r15, r1
     650:	24 e0       	ldi	r18, 0x04	; 4
     652:	e2 1a       	sub	r14, r18
     654:	f1 08       	sbc	r15, r1
     656:	f7 01       	movw	r30, r14
     658:	ee 0f       	add	r30, r30
     65a:	ff 1f       	adc	r31, r31
     65c:	e0 52       	subi	r30, 0x20	; 32
     65e:	fe 4f       	sbci	r31, 0xFE	; 254
     660:	11 82       	std	Z+1, r1	; 0x01
     662:	10 82       	st	Z, r1
	char turns=3;
	int total=0;
     664:	00 e0       	ldi	r16, 0x00	; 0
     666:	10 e0       	ldi	r17, 0x00	; 0
	}
}
void RGBupdate_mech(char t){
	RGBupdate(t);
	RGBval[t-4]=0;
	char turns=3;
     668:	d3 e0       	ldi	r29, 0x03	; 3
     66a:	01 c0       	rjmp	.+2      	; 0x66e <_Z14RGBupdate_mechc+0x3e>
			}
			RGBupdate(t);
		
		}
		else if (c=='A'){
			turns=0;}
     66c:	d0 e0       	ldi	r29, 0x00	; 0
void RGBupdate_mech(char t){
	RGBupdate(t);
	RGBval[t-4]=0;
	char turns=3;
	int total=0;
	while (turns>0){
     66e:	dd 23       	and	r29, r29
     670:	09 f4       	brne	.+2      	; 0x674 <_Z14RGBupdate_mechc+0x44>
     672:	ce c0       	rjmp	.+412    	; 0x810 <__DATA_REGION_LENGTH__+0x10>
		char c=KEYPAD_GetKey();
     674:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     678:	c8 2f       	mov	r28, r24
		if (c!='A'& c!='B' & c!='C' & c!='D' & c!='E'& c!='F' & c!='H'){
     67a:	8f eb       	ldi	r24, 0xBF	; 191
     67c:	8c 0f       	add	r24, r28
     67e:	41 e0       	ldi	r20, 0x01	; 1
     680:	82 30       	cpi	r24, 0x02	; 2
     682:	08 f4       	brcc	.+2      	; 0x686 <_Z14RGBupdate_mechc+0x56>
     684:	40 e0       	ldi	r20, 0x00	; 0
     686:	31 e0       	ldi	r19, 0x01	; 1
     688:	c3 34       	cpi	r28, 0x43	; 67
     68a:	09 f4       	brne	.+2      	; 0x68e <_Z14RGBupdate_mechc+0x5e>
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	21 e0       	ldi	r18, 0x01	; 1
     690:	c4 34       	cpi	r28, 0x44	; 68
     692:	09 f4       	brne	.+2      	; 0x696 <_Z14RGBupdate_mechc+0x66>
     694:	20 e0       	ldi	r18, 0x00	; 0
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	c5 34       	cpi	r28, 0x45	; 69
     69a:	09 f4       	brne	.+2      	; 0x69e <_Z14RGBupdate_mechc+0x6e>
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	c6 34       	cpi	r28, 0x46	; 70
     6a2:	09 f4       	brne	.+2      	; 0x6a6 <_Z14RGBupdate_mechc+0x76>
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	51 e0       	ldi	r21, 0x01	; 1
     6a8:	c8 34       	cpi	r28, 0x48	; 72
     6aa:	09 f4       	brne	.+2      	; 0x6ae <_Z14RGBupdate_mechc+0x7e>
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	34 23       	and	r19, r20
     6b0:	23 23       	and	r18, r19
     6b2:	92 23       	and	r25, r18
     6b4:	89 23       	and	r24, r25
     6b6:	09 f4       	brne	.+2      	; 0x6ba <_Z14RGBupdate_mechc+0x8a>
     6b8:	9f c0       	rjmp	.+318    	; 0x7f8 <_Z14RGBupdate_mechc+0x1c8>
     6ba:	55 23       	and	r21, r21
     6bc:	09 f4       	brne	.+2      	; 0x6c0 <_Z14RGBupdate_mechc+0x90>
     6be:	9c c0       	rjmp	.+312    	; 0x7f8 <_Z14RGBupdate_mechc+0x1c8>
			if (turns==3 && c!=0){
     6c0:	d3 30       	cpi	r29, 0x03	; 3
     6c2:	b1 f5       	brne	.+108    	; 0x730 <_Z14RGBupdate_mechc+0x100>
     6c4:	cc 23       	and	r28, r28
     6c6:	a1 f1       	breq	.+104    	; 0x730 <_Z14RGBupdate_mechc+0x100>
			total=c*pow(10,turns-1)+total+1;}
     6c8:	6d 2f       	mov	r22, r29
     6ca:	70 e0       	ldi	r23, 0x00	; 0
     6cc:	61 50       	subi	r22, 0x01	; 1
     6ce:	71 09       	sbc	r23, r1
     6d0:	07 2e       	mov	r0, r23
     6d2:	00 0c       	add	r0, r0
     6d4:	88 0b       	sbc	r24, r24
     6d6:	99 0b       	sbc	r25, r25
     6d8:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatsisf>
     6dc:	9b 01       	movw	r18, r22
     6de:	ac 01       	movw	r20, r24
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	80 e2       	ldi	r24, 0x20	; 32
     6e6:	91 e4       	ldi	r25, 0x41	; 65
     6e8:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <pow>
     6ec:	4b 01       	movw	r8, r22
     6ee:	5c 01       	movw	r10, r24
     6f0:	6c 2f       	mov	r22, r28
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatsisf>
     6fc:	a5 01       	movw	r20, r10
     6fe:	94 01       	movw	r18, r8
     700:	0e 94 7b 07 	call	0xef6	; 0xef6 <__mulsf3>
     704:	4b 01       	movw	r8, r22
     706:	5c 01       	movw	r10, r24
     708:	b8 01       	movw	r22, r16
     70a:	11 0f       	add	r17, r17
     70c:	88 0b       	sbc	r24, r24
     70e:	99 0b       	sbc	r25, r25
     710:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatsisf>
     714:	a5 01       	movw	r20, r10
     716:	94 01       	movw	r18, r8
     718:	0e 94 4b 06 	call	0xc96	; 0xc96 <__addsf3>
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	40 e8       	ldi	r20, 0x80	; 128
     722:	5f e3       	ldi	r21, 0x3F	; 63
     724:	0e 94 4b 06 	call	0xc96	; 0xc96 <__addsf3>
     728:	0e 94 b7 06 	call	0xd6e	; 0xd6e <__fixsfsi>
     72c:	8b 01       	movw	r16, r22
     72e:	35 c0       	rjmp	.+106    	; 0x79a <_Z14RGBupdate_mechc+0x16a>
			else if( turns==2 || turns==1 || (turns==3 && c==0)){total=c*pow(10,turns-1)+total;}
     730:	8f ef       	ldi	r24, 0xFF	; 255
     732:	8d 0f       	add	r24, r29
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	20 f0       	brcs	.+8      	; 0x740 <_Z14RGBupdate_mechc+0x110>
     738:	d3 30       	cpi	r29, 0x03	; 3
     73a:	79 f5       	brne	.+94     	; 0x79a <_Z14RGBupdate_mechc+0x16a>
     73c:	c1 11       	cpse	r28, r1
     73e:	2d c0       	rjmp	.+90     	; 0x79a <_Z14RGBupdate_mechc+0x16a>
     740:	6d 2f       	mov	r22, r29
     742:	70 e0       	ldi	r23, 0x00	; 0
     744:	61 50       	subi	r22, 0x01	; 1
     746:	71 09       	sbc	r23, r1
     748:	07 2e       	mov	r0, r23
     74a:	00 0c       	add	r0, r0
     74c:	88 0b       	sbc	r24, r24
     74e:	99 0b       	sbc	r25, r25
     750:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatsisf>
     754:	9b 01       	movw	r18, r22
     756:	ac 01       	movw	r20, r24
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	80 e2       	ldi	r24, 0x20	; 32
     75e:	91 e4       	ldi	r25, 0x41	; 65
     760:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <pow>
     764:	4b 01       	movw	r8, r22
     766:	5c 01       	movw	r10, r24
     768:	6c 2f       	mov	r22, r28
     76a:	70 e0       	ldi	r23, 0x00	; 0
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatsisf>
     774:	a5 01       	movw	r20, r10
     776:	94 01       	movw	r18, r8
     778:	0e 94 7b 07 	call	0xef6	; 0xef6 <__mulsf3>
     77c:	4b 01       	movw	r8, r22
     77e:	5c 01       	movw	r10, r24
     780:	b8 01       	movw	r22, r16
     782:	11 0f       	add	r17, r17
     784:	88 0b       	sbc	r24, r24
     786:	99 0b       	sbc	r25, r25
     788:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatsisf>
     78c:	a5 01       	movw	r20, r10
     78e:	94 01       	movw	r18, r8
     790:	0e 94 4b 06 	call	0xc96	; 0xc96 <__addsf3>
     794:	0e 94 b7 06 	call	0xd6e	; 0xd6e <__fixsfsi>
     798:	8b 01       	movw	r16, r22
			
			
			if (total<256){
     79a:	0f 3f       	cpi	r16, 0xFF	; 255
     79c:	11 05       	cpc	r17, r1
     79e:	09 f0       	breq	.+2      	; 0x7a2 <_Z14RGBupdate_mechc+0x172>
     7a0:	4c f4       	brge	.+18     	; 0x7b4 <_Z14RGBupdate_mechc+0x184>
			RGBval[t-4]=total;
     7a2:	f7 01       	movw	r30, r14
     7a4:	ee 0f       	add	r30, r30
     7a6:	ff 1f       	adc	r31, r31
     7a8:	e0 52       	subi	r30, 0x20	; 32
     7aa:	fe 4f       	sbci	r31, 0xFE	; 254
     7ac:	11 83       	std	Z+1, r17	; 0x01
     7ae:	00 83       	st	Z, r16
			turns=turns-1;
     7b0:	d1 50       	subi	r29, 0x01	; 1
     7b2:	1e c0       	rjmp	.+60     	; 0x7f0 <_Z14RGBupdate_mechc+0x1c0>
			}
			else{
				total=RGBval[t-4];
     7b4:	f7 01       	movw	r30, r14
     7b6:	ee 0f       	add	r30, r30
     7b8:	ff 1f       	adc	r31, r31
     7ba:	e0 52       	subi	r30, 0x20	; 32
     7bc:	fe 4f       	sbci	r31, 0xFE	; 254
     7be:	00 81       	ld	r16, Z
     7c0:	11 81       	ldd	r17, Z+1	; 0x01
				LCD_Clear();
     7c2:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
				LCD_DisplayString("Include Values");
     7c6:	8d e7       	ldi	r24, 0x7D	; 125
     7c8:	91 e0       	ldi	r25, 0x01	; 1
     7ca:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
				LCD_GoToXY(1,0);
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
				LCD_DisplayString("Less than 255");
     7d6:	8c e8       	ldi	r24, 0x8C	; 140
     7d8:	91 e0       	ldi	r25, 0x01	; 1
     7da:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7de:	8f ef       	ldi	r24, 0xFF	; 255
     7e0:	94 e3       	ldi	r25, 0x34	; 52
     7e2:	2c e0       	ldi	r18, 0x0C	; 12
     7e4:	81 50       	subi	r24, 0x01	; 1
     7e6:	90 40       	sbci	r25, 0x00	; 0
     7e8:	20 40       	sbci	r18, 0x00	; 0
     7ea:	e1 f7       	brne	.-8      	; 0x7e4 <_Z14RGBupdate_mechc+0x1b4>
     7ec:	00 c0       	rjmp	.+0      	; 0x7ee <_Z14RGBupdate_mechc+0x1be>
     7ee:	00 00       	nop
				_delay_ms(500);
				
			}
			RGBupdate(t);
     7f0:	8d 2d       	mov	r24, r13
     7f2:	0e 94 c4 02 	call	0x588	; 0x588 <_Z9RGBupdatec>
     7f6:	3b cf       	rjmp	.-394    	; 0x66e <_Z14RGBupdate_mechc+0x3e>
		
		}
		else if (c=='A'){
     7f8:	c1 34       	cpi	r28, 0x41	; 65
     7fa:	09 f4       	brne	.+2      	; 0x7fe <_Z14RGBupdate_mechc+0x1ce>
     7fc:	37 cf       	rjmp	.-402    	; 0x66c <_Z14RGBupdate_mechc+0x3c>
			turns=0;}
		else if (c=='E'){
     7fe:	c5 34       	cpi	r28, 0x45	; 69
     800:	09 f0       	breq	.+2      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     802:	35 cf       	rjmp	.-406    	; 0x66e <_Z14RGBupdate_mechc+0x3e>
			posCount=2;
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <posCount>
			updateMenu();
     80a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z10updateMenuv>
     80e:	2f cf       	rjmp	.-418    	; 0x66e <_Z14RGBupdate_mechc+0x3e>
		}	
		
		
	}
	
}
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	ff 90       	pop	r15
     81a:	ef 90       	pop	r14
     81c:	df 90       	pop	r13
     81e:	bf 90       	pop	r11
     820:	af 90       	pop	r10
     822:	9f 90       	pop	r9
     824:	8f 90       	pop	r8
     826:	08 95       	ret

00000828 <_Z6senscev>:


void sensce(){//not complete
     828:	ef 92       	push	r14
     82a:	ff 92       	push	r15
     82c:	0f 93       	push	r16
     82e:	1f 93       	push	r17
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
	unsigned char run=1;
	LCD_Clear();
     834:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	LCD_DisplayString("Hold the Color");
     838:	8a e9       	ldi	r24, 0x9A	; 154
     83a:	91 e0       	ldi	r25, 0x01	; 1
     83c:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     840:	2f ef       	ldi	r18, 0xFF	; 255
     842:	89 e6       	ldi	r24, 0x69	; 105
     844:	98 e1       	ldi	r25, 0x18	; 24
     846:	21 50       	subi	r18, 0x01	; 1
     848:	80 40       	sbci	r24, 0x00	; 0
     84a:	90 40       	sbci	r25, 0x00	; 0
     84c:	e1 f7       	brne	.-8      	; 0x846 <_Z6senscev+0x1e>
     84e:	00 c0       	rjmp	.+0      	; 0x850 <_Z6senscev+0x28>
     850:	00 00       	nop
	_delay_ms(1000);
	LCD_GoToXY(2,0);
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	82 e0       	ldi	r24, 0x02	; 2
     856:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
	LCD_DisplayString("Sensing start now");
     85a:	89 ea       	ldi	r24, 0xA9	; 169
     85c:	91 e0       	ldi	r25, 0x01	; 1
     85e:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     862:	2f ef       	ldi	r18, 0xFF	; 255
     864:	84 e3       	ldi	r24, 0x34	; 52
     866:	9c e0       	ldi	r25, 0x0C	; 12
     868:	21 50       	subi	r18, 0x01	; 1
     86a:	80 40       	sbci	r24, 0x00	; 0
     86c:	90 40       	sbci	r25, 0x00	; 0
     86e:	e1 f7       	brne	.-8      	; 0x868 <_Z6senscev+0x40>
     870:	00 c0       	rjmp	.+0      	; 0x872 <_Z6senscev+0x4a>
     872:	00 00       	nop
	_delay_ms(500);
	LCD_Clear();
     874:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	LCD_DisplayString("Hold the Color");
     878:	8a e9       	ldi	r24, 0x9A	; 154
     87a:	91 e0       	ldi	r25, 0x01	; 1
     87c:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	for (int i=0;i<3;i++){
     880:	e1 2c       	mov	r14, r1
     882:	f1 2c       	mov	r15, r1
	
}


void sensce(){//not complete
	unsigned char run=1;
     884:	d1 e0       	ldi	r29, 0x01	; 1
	LCD_GoToXY(2,0);
	LCD_DisplayString("Sensing start now");
	_delay_ms(500);
	LCD_Clear();
	LCD_DisplayString("Hold the Color");
	for (int i=0;i<3;i++){
     886:	23 e0       	ldi	r18, 0x03	; 3
     888:	e2 16       	cp	r14, r18
     88a:	f1 04       	cpc	r15, r1
     88c:	0c f0       	brlt	.+2      	; 0x890 <_Z6senscev+0x68>
     88e:	5f c0       	rjmp	.+190    	; 0x94e <__stack+0x4f>
		I2C_Start();            // Start I2C communication
     890:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
		I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     894:	80 e4       	ldi	r24, 0x40	; 64
     896:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     89a:	8f e0       	ldi	r24, 0x0F	; 15
     89c:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
     8a0:	8d 2f       	mov	r24, r29
     8a2:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Stop();
     8a6:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
     8aa:	8f ef       	ldi	r24, 0xFF	; 255
     8ac:	94 e3       	ldi	r25, 0x34	; 52
     8ae:	2c e0       	ldi	r18, 0x0C	; 12
     8b0:	81 50       	subi	r24, 0x01	; 1
     8b2:	90 40       	sbci	r25, 0x00	; 0
     8b4:	20 40       	sbci	r18, 0x00	; 0
     8b6:	e1 f7       	brne	.-8      	; 0x8b0 <_Z6senscev+0x88>
     8b8:	00 c0       	rjmp	.+0      	; 0x8ba <_Z6senscev+0x92>
     8ba:	00 00       	nop
	
		_delay_ms(500);
		int tot=0;
		for (char j=0; j<50;j++){
     8bc:	c0 e0       	ldi	r28, 0x00	; 0
		I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
		I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
		I2C_Stop();
	
		_delay_ms(500);
		int tot=0;
     8be:	00 e0       	ldi	r16, 0x00	; 0
     8c0:	10 e0       	ldi	r17, 0x00	; 0
		for (char j=0; j<50;j++){
     8c2:	c2 33       	cpi	r28, 0x32	; 50
     8c4:	68 f4       	brcc	.+26     	; 0x8e0 <_Z6senscev+0xb8>
			tot+=adc_read(0);
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	0e 94 4d 02 	call	0x49a	; 0x49a <_Z8adc_readh>
     8cc:	08 0f       	add	r16, r24
     8ce:	19 1f       	adc	r17, r25
     8d0:	8f e4       	ldi	r24, 0x4F	; 79
     8d2:	93 ec       	ldi	r25, 0xC3	; 195
     8d4:	01 97       	sbiw	r24, 0x01	; 1
     8d6:	f1 f7       	brne	.-4      	; 0x8d4 <_Z6senscev+0xac>
     8d8:	00 c0       	rjmp	.+0      	; 0x8da <_Z6senscev+0xb2>
     8da:	00 00       	nop
		I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
		I2C_Stop();
	
		_delay_ms(500);
		int tot=0;
		for (char j=0; j<50;j++){
     8dc:	cf 5f       	subi	r28, 0xFF	; 255
     8de:	f1 cf       	rjmp	.-30     	; 0x8c2 <_Z6senscev+0x9a>
			tot+=adc_read(0);
			_delay_ms(25);
		}
		senRGB[i]=255*tot/((calibRGB[i+3]-calibRGB[i])*50);
     8e0:	2f ef       	ldi	r18, 0xFF	; 255
     8e2:	20 9f       	mul	r18, r16
     8e4:	c0 01       	movw	r24, r0
     8e6:	21 9f       	mul	r18, r17
     8e8:	90 0d       	add	r25, r0
     8ea:	11 24       	eor	r1, r1
     8ec:	f7 01       	movw	r30, r14
     8ee:	33 96       	adiw	r30, 0x03	; 3
     8f0:	ee 0f       	add	r30, r30
     8f2:	ff 1f       	adc	r31, r31
     8f4:	e0 50       	subi	r30, 0x00	; 0
     8f6:	ff 4f       	sbci	r31, 0xFF	; 255
     8f8:	40 81       	ld	r20, Z
     8fa:	51 81       	ldd	r21, Z+1	; 0x01
     8fc:	97 01       	movw	r18, r14
     8fe:	22 0f       	add	r18, r18
     900:	33 1f       	adc	r19, r19
     902:	f9 01       	movw	r30, r18
     904:	e0 50       	subi	r30, 0x00	; 0
     906:	ff 4f       	sbci	r31, 0xFF	; 255
     908:	60 81       	ld	r22, Z
     90a:	71 81       	ldd	r23, Z+1	; 0x01
     90c:	46 1b       	sub	r20, r22
     90e:	57 0b       	sbc	r21, r23
     910:	e2 e3       	ldi	r30, 0x32	; 50
     912:	e4 9f       	mul	r30, r20
     914:	b0 01       	movw	r22, r0
     916:	e5 9f       	mul	r30, r21
     918:	70 0d       	add	r23, r0
     91a:	11 24       	eor	r1, r1
     91c:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__divmodhi4>
     920:	f9 01       	movw	r30, r18
     922:	ea 51       	subi	r30, 0x1A	; 26
     924:	fe 4f       	sbci	r31, 0xFE	; 254
     926:	71 83       	std	Z+1, r23	; 0x01
     928:	60 83       	st	Z, r22
		
		I2C_Start();            // Start I2C communication
     92a:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
		I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     92e:	80 e4       	ldi	r24, 0x40	; 64
     930:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     934:	8f e0       	ldi	r24, 0x0F	; 15
     936:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(0x00);        // Write 0x00 to Control register to disable SQW-Out
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Stop();
     940:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
		
		
		run=run<<1;
     944:	dd 0f       	add	r29, r29
	LCD_GoToXY(2,0);
	LCD_DisplayString("Sensing start now");
	_delay_ms(500);
	LCD_Clear();
	LCD_DisplayString("Hold the Color");
	for (int i=0;i<3;i++){
     946:	9f ef       	ldi	r25, 0xFF	; 255
     948:	e9 1a       	sub	r14, r25
     94a:	f9 0a       	sbc	r15, r25
     94c:	9c cf       	rjmp	.-200    	; 0x886 <_Z6senscev+0x5e>
		
		
		run=run<<1;
	}
	
}
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	1f 91       	pop	r17
     954:	0f 91       	pop	r16
     956:	ff 90       	pop	r15
     958:	ef 90       	pop	r14
     95a:	08 95       	ret

0000095c <_Z8RGBcalibv>:

void RGBcalib(){
     95c:	9f 92       	push	r9
     95e:	af 92       	push	r10
     960:	bf 92       	push	r11
     962:	cf 92       	push	r12
     964:	df 92       	push	r13
     966:	ef 92       	push	r14
     968:	ff 92       	push	r15
     96a:	0f 93       	push	r16
     96c:	1f 93       	push	r17
     96e:	cf 93       	push	r28
     970:	df 93       	push	r29
     972:	cd b7       	in	r28, 0x3d	; 61
     974:	de b7       	in	r29, 0x3e	; 62
     976:	a0 97       	sbiw	r28, 0x20	; 32
     978:	0f b6       	in	r0, 0x3f	; 63
     97a:	f8 94       	cli
     97c:	de bf       	out	0x3e, r29	; 62
     97e:	0f be       	out	0x3f, r0	; 63
     980:	cd bf       	out	0x3d, r28	; 61
	char calibmenu[2][16]={"Hold White","Hold Black"};
     982:	80 e2       	ldi	r24, 0x20	; 32
     984:	ef e4       	ldi	r30, 0x4F	; 79
     986:	f1 e0       	ldi	r31, 0x01	; 1
     988:	de 01       	movw	r26, r28
     98a:	11 96       	adiw	r26, 0x01	; 1
     98c:	01 90       	ld	r0, Z+
     98e:	0d 92       	st	X+, r0
     990:	8a 95       	dec	r24
     992:	e1 f7       	brne	.-8      	; 0x98c <_Z8RGBcalibv+0x30>
	for (char j=0;j<2;j++){
     994:	91 2c       	mov	r9, r1
     996:	21 e0       	ldi	r18, 0x01	; 1
     998:	29 15       	cp	r18, r9
     99a:	08 f4       	brcc	.+2      	; 0x99e <_Z8RGBcalibv+0x42>
     99c:	6a c0       	rjmp	.+212    	; 0xa72 <_Z8RGBcalibv+0x116>
		unsigned char run=1;
		LCD_Clear();
     99e:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
		LCD_DisplayString(calibmenu[j]);
     9a2:	a9 2c       	mov	r10, r9
     9a4:	b1 2c       	mov	r11, r1
     9a6:	c5 01       	movw	r24, r10
     9a8:	82 95       	swap	r24
     9aa:	92 95       	swap	r25
     9ac:	90 7f       	andi	r25, 0xF0	; 240
     9ae:	98 27       	eor	r25, r24
     9b0:	80 7f       	andi	r24, 0xF0	; 240
     9b2:	98 27       	eor	r25, r24
     9b4:	21 e0       	ldi	r18, 0x01	; 1
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	2c 0f       	add	r18, r28
     9ba:	3d 1f       	adc	r19, r29
     9bc:	82 0f       	add	r24, r18
     9be:	93 1f       	adc	r25, r19
     9c0:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
		for (int i=0;i<3;i++){
     9c4:	c1 2c       	mov	r12, r1
     9c6:	d1 2c       	mov	r13, r1
}

void RGBcalib(){
	char calibmenu[2][16]={"Hold White","Hold Black"};
	for (char j=0;j<2;j++){
		unsigned char run=1;
     9c8:	01 e0       	ldi	r16, 0x01	; 1
		LCD_Clear();
		LCD_DisplayString(calibmenu[j]);
		for (int i=0;i<3;i++){
     9ca:	33 e0       	ldi	r19, 0x03	; 3
     9cc:	c3 16       	cp	r12, r19
     9ce:	d1 04       	cpc	r13, r1
     9d0:	0c f0       	brlt	.+2      	; 0x9d4 <_Z8RGBcalibv+0x78>
     9d2:	4d c0       	rjmp	.+154    	; 0xa6e <_Z8RGBcalibv+0x112>
			I2C_Start();            // Start I2C communication
     9d4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
			I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     9d8:	80 e4       	ldi	r24, 0x40	; 64
     9da:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     9de:	8f e0       	ldi	r24, 0x0F	; 15
     9e0:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
     9e4:	80 2f       	mov	r24, r16
     9e6:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Stop();
     9ea:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
     9ee:	8f ef       	ldi	r24, 0xFF	; 255
     9f0:	94 e3       	ldi	r25, 0x34	; 52
     9f2:	2c e0       	ldi	r18, 0x0C	; 12
     9f4:	81 50       	subi	r24, 0x01	; 1
     9f6:	90 40       	sbci	r25, 0x00	; 0
     9f8:	20 40       	sbci	r18, 0x00	; 0
     9fa:	e1 f7       	brne	.-8      	; 0x9f4 <_Z8RGBcalibv+0x98>
     9fc:	00 c0       	rjmp	.+0      	; 0x9fe <_Z8RGBcalibv+0xa2>
     9fe:	00 00       	nop
			
			_delay_ms(500);
			int tot=0;
			for (char b=0;b<50;b++){
     a00:	10 e0       	ldi	r17, 0x00	; 0
			I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
			I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
			I2C_Stop();
			
			_delay_ms(500);
			int tot=0;
     a02:	e1 2c       	mov	r14, r1
     a04:	f1 2c       	mov	r15, r1
			for (char b=0;b<50;b++){
     a06:	12 33       	cpi	r17, 0x32	; 50
     a08:	68 f4       	brcc	.+26     	; 0xa24 <_Z8RGBcalibv+0xc8>
				tot+=adc_read(0);
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	0e 94 4d 02 	call	0x49a	; 0x49a <_Z8adc_readh>
     a10:	e8 0e       	add	r14, r24
     a12:	f9 1e       	adc	r15, r25
     a14:	8f e4       	ldi	r24, 0x4F	; 79
     a16:	93 ec       	ldi	r25, 0xC3	; 195
     a18:	01 97       	sbiw	r24, 0x01	; 1
     a1a:	f1 f7       	brne	.-4      	; 0xa18 <_Z8RGBcalibv+0xbc>
     a1c:	00 c0       	rjmp	.+0      	; 0xa1e <_Z8RGBcalibv+0xc2>
     a1e:	00 00       	nop
			I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
			I2C_Stop();
			
			_delay_ms(500);
			int tot=0;
			for (char b=0;b<50;b++){
     a20:	1f 5f       	subi	r17, 0xFF	; 255
     a22:	f1 cf       	rjmp	.-30     	; 0xa06 <_Z8RGBcalibv+0xaa>
				tot+=adc_read(0);
				_delay_ms(25);
			}
			calibRGB[j*3+i]=tot/50;
     a24:	95 01       	movw	r18, r10
     a26:	22 0f       	add	r18, r18
     a28:	33 1f       	adc	r19, r19
     a2a:	2a 0d       	add	r18, r10
     a2c:	3b 1d       	adc	r19, r11
     a2e:	2c 0d       	add	r18, r12
     a30:	3d 1d       	adc	r19, r13
     a32:	c7 01       	movw	r24, r14
     a34:	62 e3       	ldi	r22, 0x32	; 50
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__divmodhi4>
     a3c:	22 0f       	add	r18, r18
     a3e:	33 1f       	adc	r19, r19
     a40:	f9 01       	movw	r30, r18
     a42:	e0 50       	subi	r30, 0x00	; 0
     a44:	ff 4f       	sbci	r31, 0xFF	; 255
     a46:	71 83       	std	Z+1, r23	; 0x01
     a48:	60 83       	st	Z, r22
			
			LCD_DisplayString(num_char);
			_delay_ms(1000);*/
			
			
			I2C_Start();            // Start I2C communication
     a4a:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
			I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     a4e:	80 e4       	ldi	r24, 0x40	; 64
     a50:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     a54:	8f e0       	ldi	r24, 0x0F	; 15
     a56:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(0x00);        // Write 0x00 to Control register to disable SQW-Out
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Stop();
     a60:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
			run=run<<1;
     a64:	00 0f       	add	r16, r16
	char calibmenu[2][16]={"Hold White","Hold Black"};
	for (char j=0;j<2;j++){
		unsigned char run=1;
		LCD_Clear();
		LCD_DisplayString(calibmenu[j]);
		for (int i=0;i<3;i++){
     a66:	9f ef       	ldi	r25, 0xFF	; 255
     a68:	c9 1a       	sub	r12, r25
     a6a:	d9 0a       	sbc	r13, r25
     a6c:	ae cf       	rjmp	.-164    	; 0x9ca <_Z8RGBcalibv+0x6e>
	
}

void RGBcalib(){
	char calibmenu[2][16]={"Hold White","Hold Black"};
	for (char j=0;j<2;j++){
     a6e:	93 94       	inc	r9
     a70:	92 cf       	rjmp	.-220    	; 0x996 <_Z8RGBcalibv+0x3a>
			I2C_Stop();
			run=run<<1;
		}
			
	}
}
     a72:	a0 96       	adiw	r28, 0x20	; 32
     a74:	0f b6       	in	r0, 0x3f	; 63
     a76:	f8 94       	cli
     a78:	de bf       	out	0x3e, r29	; 62
     a7a:	0f be       	out	0x3f, r0	; 63
     a7c:	cd bf       	out	0x3d, r28	; 61
     a7e:	df 91       	pop	r29
     a80:	cf 91       	pop	r28
     a82:	1f 91       	pop	r17
     a84:	0f 91       	pop	r16
     a86:	ff 90       	pop	r15
     a88:	ef 90       	pop	r14
     a8a:	df 90       	pop	r13
     a8c:	cf 90       	pop	r12
     a8e:	bf 90       	pop	r11
     a90:	af 90       	pop	r10
     a92:	9f 90       	pop	r9
     a94:	08 95       	ret

00000a96 <main>:
int main(void)
{
     a96:	cf 93       	push	r28
     a98:	df 93       	push	r29
     a9a:	cd b7       	in	r28, 0x3d	; 61
     a9c:	de b7       	in	r29, 0x3e	; 62
     a9e:	27 97       	sbiw	r28, 0x07	; 7
     aa0:	0f b6       	in	r0, 0x3f	; 63
     aa2:	f8 94       	cli
     aa4:	de bf       	out	0x3e, r29	; 62
     aa6:	0f be       	out	0x3f, r0	; 63
     aa8:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
     aaa:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <_Z8LCD_Initv>
	KEYPAD_Init();
     aae:	0e 94 38 01 	call	0x270	; 0x270 <_Z11KEYPAD_Initv>
	adc_init();
     ab2:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z8adc_initv>
	char aa=0;
	int a=adc_read(aa);
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	0e 94 4d 02 	call	0x49a	; 0x49a <_Z8adc_readh>
     abc:	4a e0       	ldi	r20, 0x0A	; 10
     abe:	be 01       	movw	r22, r28
     ac0:	6f 5f       	subi	r22, 0xFF	; 255
     ac2:	7f 4f       	sbci	r23, 0xFF	; 255
     ac4:	0e 94 19 0a 	call	0x1432	; 0x1432 <__itoa_ncheck>
	char num_char[7];
	itoa(a, num_char, 10);
	
	LCD_DisplayString(num_char);
     ac8:	ce 01       	movw	r24, r28
     aca:	01 96       	adiw	r24, 0x01	; 1
     acc:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     ad0:	2f ef       	ldi	r18, 0xFF	; 255
     ad2:	89 e6       	ldi	r24, 0x69	; 105
     ad4:	98 e1       	ldi	r25, 0x18	; 24
     ad6:	21 50       	subi	r18, 0x01	; 1
     ad8:	80 40       	sbci	r24, 0x00	; 0
     ada:	90 40       	sbci	r25, 0x00	; 0
     adc:	e1 f7       	brne	.-8      	; 0xad6 <main+0x40>
     ade:	00 c0       	rjmp	.+0      	; 0xae0 <main+0x4a>
     ae0:	00 00       	nop
	_delay_ms(1000);

	//I2C_Init();
	//LCD_DisplayString(menu[1]);
	
	I2C_Init();             // Initilize the I2c module.
     ae2:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z8I2C_Initv>
	I2C_Start();            // Start I2C communication
     ae6:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
	I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     aea:	80 e4       	ldi	r24, 0x40	; 64
     aec:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
	I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     af0:	8f e0       	ldi	r24, 0x0F	; 15
     af2:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
	I2C_Write(0x00);        // Write 0x00 to Control register to disable SQW-Out
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
	
	I2C_Stop();
     afc:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
	LCD_GoToXY(1,3);LCD_DisplayString("RGB Color");
     b00:	63 e0       	ldi	r22, 0x03	; 3
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     b08:	8b eb       	ldi	r24, 0xBB	; 187
     b0a:	91 e0       	ldi	r25, 0x01	; 1
     b0c:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	LCD_GoToXY(2,5);LCD_DisplayString("Sensor");
     b10:	65 e0       	ldi	r22, 0x05	; 5
     b12:	82 e0       	ldi	r24, 0x02	; 2
     b14:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     b18:	85 ec       	ldi	r24, 0xC5	; 197
     b1a:	91 e0       	ldi	r25, 0x01	; 1
     b1c:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     b20:	2f ef       	ldi	r18, 0xFF	; 255
     b22:	89 e6       	ldi	r24, 0x69	; 105
     b24:	98 e1       	ldi	r25, 0x18	; 24
     b26:	21 50       	subi	r18, 0x01	; 1
     b28:	80 40       	sbci	r24, 0x00	; 0
     b2a:	90 40       	sbci	r25, 0x00	; 0
     b2c:	e1 f7       	brne	.-8      	; 0xb26 <main+0x90>
     b2e:	00 c0       	rjmp	.+0      	; 0xb30 <main+0x9a>
     b30:	00 00       	nop
	_delay_ms(1000);
	LCD_Clear();
     b32:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	updateMenu();
     b36:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z10updateMenuv>
	
    /* Replace with your application code */
    while (1) 
    {
		switch (checkButtonPress()){
     b3a:	0e 94 a4 02 	call	0x548	; 0x548 <_Z16checkButtonPressv>
     b3e:	82 30       	cpi	r24, 0x02	; 2
     b40:	c1 f1       	breq	.+112    	; 0xbb2 <main+0x11c>
     b42:	85 30       	cpi	r24, 0x05	; 5
     b44:	09 f4       	brne	.+2      	; 0xb48 <main+0xb2>
     b46:	95 c0       	rjmp	.+298    	; 0xc72 <main+0x1dc>
     b48:	81 30       	cpi	r24, 0x01	; 1
     b4a:	b9 f7       	brne	.-18     	; 0xb3a <main+0xa4>
			case 1://Selection
				posCount=posCount+1;
     b4c:	20 91 ec 01 	lds	r18, 0x01EC	; 0x8001ec <posCount>
     b50:	2f 5f       	subi	r18, 0xFF	; 255
     b52:	20 93 ec 01 	sts	0x01EC, r18	; 0x8001ec <posCount>
				if (posCount<menusize){
     b56:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <menusize>
     b5a:	28 17       	cp	r18, r24
     b5c:	18 f4       	brcc	.+6      	; 0xb64 <main+0xce>
					updateMenu();
     b5e:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z10updateMenuv>
					break;
     b62:	eb cf       	rjmp	.-42     	; 0xb3a <main+0xa4>
				}
				else if(menusize<=posCount && posCount<menusize+3 && p!=20){
     b64:	28 17       	cp	r18, r24
     b66:	88 f0       	brcs	.+34     	; 0xb8a <main+0xf4>
     b68:	62 2f       	mov	r22, r18
     b6a:	70 e0       	ldi	r23, 0x00	; 0
     b6c:	48 2f       	mov	r20, r24
     b6e:	50 e0       	ldi	r21, 0x00	; 0
     b70:	4d 5f       	subi	r20, 0xFD	; 253
     b72:	5f 4f       	sbci	r21, 0xFF	; 255
     b74:	64 17       	cp	r22, r20
     b76:	75 07       	cpc	r23, r21
     b78:	44 f4       	brge	.+16     	; 0xb8a <main+0xf4>
     b7a:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <p>
     b7e:	94 31       	cpi	r25, 0x14	; 20
     b80:	21 f0       	breq	.+8      	; 0xb8a <main+0xf4>
					//if (p==-1){LCD_DisplayString("wrong");_delay_ms(1000);}
					RGBupdate(posCount);
     b82:	82 2f       	mov	r24, r18
     b84:	0e 94 c4 02 	call	0x588	; 0x588 <_Z9RGBupdatec>
					break;
     b88:	d8 cf       	rjmp	.-80     	; 0xb3a <main+0xa4>
				}
				else if (posCount>=menusize+3 && p!=20){
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	48 2f       	mov	r20, r24
     b8e:	50 e0       	ldi	r21, 0x00	; 0
     b90:	4d 5f       	subi	r20, 0xFD	; 253
     b92:	5f 4f       	sbci	r21, 0xFF	; 255
     b94:	24 17       	cp	r18, r20
     b96:	35 07       	cpc	r19, r21
     b98:	4c f0       	brlt	.+18     	; 0xbac <main+0x116>
     b9a:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <p>
     b9e:	94 31       	cpi	r25, 0x14	; 20
     ba0:	29 f0       	breq	.+10     	; 0xbac <main+0x116>
					posCount=menusize;
     ba2:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <posCount>
					RGBupdate(posCount);
     ba6:	0e 94 c4 02 	call	0x588	; 0x588 <_Z9RGBupdatec>
					break;
     baa:	c7 cf       	rjmp	.-114    	; 0xb3a <main+0xa4>
				}
				else{
					updateMenu();
     bac:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z10updateMenuv>
					break;
     bb0:	c4 cf       	rjmp	.-120    	; 0xb3a <main+0xa4>
				}
			case 2://0k
				if (posCount==0){//Caliberation Mode
     bb2:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <posCount>
     bb6:	81 11       	cpse	r24, r1
     bb8:	10 c0       	rjmp	.+32     	; 0xbda <main+0x144>
					LCD_Clear();
     bba:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
					RGBcalib();
     bbe:	0e 94 ae 04 	call	0x95c	; 0x95c <_Z8RGBcalibv>
     bc2:	2f ef       	ldi	r18, 0xFF	; 255
     bc4:	89 e6       	ldi	r24, 0x69	; 105
     bc6:	98 e1       	ldi	r25, 0x18	; 24
     bc8:	21 50       	subi	r18, 0x01	; 1
     bca:	80 40       	sbci	r24, 0x00	; 0
     bcc:	90 40       	sbci	r25, 0x00	; 0
     bce:	e1 f7       	brne	.-8      	; 0xbc8 <main+0x132>
     bd0:	00 c0       	rjmp	.+0      	; 0xbd2 <main+0x13c>
     bd2:	00 00       	nop
					_delay_ms(1000);
					updateMenu();//not complete
     bd4:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z10updateMenuv>
     bd8:	b0 cf       	rjmp	.-160    	; 0xb3a <main+0xa4>
				}
				else if (posCount==1){// Sensor Mode
     bda:	81 30       	cpi	r24, 0x01	; 1
     bdc:	31 f5       	brne	.+76     	; 0xc2a <main+0x194>
					LCD_Clear();
     bde:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
					if (calibRGB[0]!=-1){
     be2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     be6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     bea:	01 96       	adiw	r24, 0x01	; 1
     bec:	61 f0       	breq	.+24     	; 0xc06 <main+0x170>
						sensce();
     bee:	0e 94 14 04 	call	0x828	; 0x828 <_Z6senscev>
     bf2:	8f e7       	ldi	r24, 0x7F	; 127
     bf4:	9a e1       	ldi	r25, 0x1A	; 26
     bf6:	26 e0       	ldi	r18, 0x06	; 6
     bf8:	81 50       	subi	r24, 0x01	; 1
     bfa:	90 40       	sbci	r25, 0x00	; 0
     bfc:	20 40       	sbci	r18, 0x00	; 0
     bfe:	e1 f7       	brne	.-8      	; 0xbf8 <main+0x162>
     c00:	00 c0       	rjmp	.+0      	; 0xc02 <main+0x16c>
     c02:	00 00       	nop
     c04:	0f c0       	rjmp	.+30     	; 0xc24 <main+0x18e>
						_delay_ms(250);
					}
					else{
						LCD_DisplayString("Calibrate First");
     c06:	8c ec       	ldi	r24, 0xCC	; 204
     c08:	91 e0       	ldi	r25, 0x01	; 1
     c0a:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     c0e:	8f ef       	ldi	r24, 0xFF	; 255
     c10:	94 e3       	ldi	r25, 0x34	; 52
     c12:	2c e0       	ldi	r18, 0x0C	; 12
     c14:	81 50       	subi	r24, 0x01	; 1
     c16:	90 40       	sbci	r25, 0x00	; 0
     c18:	20 40       	sbci	r18, 0x00	; 0
     c1a:	e1 f7       	brne	.-8      	; 0xc14 <main+0x17e>
     c1c:	00 c0       	rjmp	.+0      	; 0xc1e <main+0x188>
     c1e:	00 00       	nop
						_delay_ms(500);
						posCount=0; //Might give an error "HERE"
     c20:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <posCount>
					}
					updateMenu();
     c24:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z10updateMenuv>
     c28:	88 cf       	rjmp	.-240    	; 0xb3a <main+0xa4>
				}
				else if (posCount==2){//RGB mode selection
     c2a:	82 30       	cpi	r24, 0x02	; 2
     c2c:	49 f4       	brne	.+18     	; 0xc40 <main+0x1aa>
					p=posCount;
     c2e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <p>
					posCount=menusize;
     c32:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <menusize>
     c36:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <posCount>
					RGBupdate(posCount);
     c3a:	0e 94 c4 02 	call	0x588	; 0x588 <_Z9RGBupdatec>
     c3e:	7d cf       	rjmp	.-262    	; 0xb3a <main+0xa4>
				}
				else if (posCount>=4){//Shifting inside RGB Mode
     c40:	84 30       	cpi	r24, 0x04	; 4
     c42:	08 f4       	brcc	.+2      	; 0xc46 <main+0x1b0>
     c44:	7a cf       	rjmp	.-268    	; 0xb3a <main+0xa4>
					LCD_GoToXY(3,10);
     c46:	6a e0       	ldi	r22, 0x0A	; 10
     c48:	83 e0       	ldi	r24, 0x03	; 3
     c4a:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
					LCD_DisplayString("**");
     c4e:	8c ed       	ldi	r24, 0xDC	; 220
     c50:	91 e0       	ldi	r25, 0x01	; 1
     c52:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     c56:	8f e7       	ldi	r24, 0x7F	; 127
     c58:	9a e1       	ldi	r25, 0x1A	; 26
     c5a:	26 e0       	ldi	r18, 0x06	; 6
     c5c:	81 50       	subi	r24, 0x01	; 1
     c5e:	90 40       	sbci	r25, 0x00	; 0
     c60:	20 40       	sbci	r18, 0x00	; 0
     c62:	e1 f7       	brne	.-8      	; 0xc5c <main+0x1c6>
     c64:	00 c0       	rjmp	.+0      	; 0xc66 <main+0x1d0>
     c66:	00 00       	nop
					_delay_ms(250);
					RGBupdate_mech(posCount);
     c68:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <posCount>
     c6c:	0e 94 18 03 	call	0x630	; 0x630 <_Z14RGBupdate_mechc>
     c70:	64 cf       	rjmp	.-312    	; 0xb3a <main+0xa4>
			case 3:
			   continue;
			case 4:
			   continue;   	
			case 5://back
				if (posCount>=menusize){
     c72:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <posCount>
     c76:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <menusize>
     c7a:	98 17       	cp	r25, r24
     c7c:	08 f4       	brcc	.+2      	; 0xc80 <main+0x1ea>
     c7e:	5d cf       	rjmp	.-326    	; 0xb3a <main+0xa4>
					posCount=p;
     c80:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <p>
     c84:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <posCount>
					p=20;
     c88:	84 e1       	ldi	r24, 0x14	; 20
     c8a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <p>
					updateMenu();
     c8e:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z10updateMenuv>
     c92:	53 cf       	rjmp	.-346    	; 0xb3a <main+0xa4>

00000c94 <__subsf3>:
     c94:	50 58       	subi	r21, 0x80	; 128

00000c96 <__addsf3>:
     c96:	bb 27       	eor	r27, r27
     c98:	aa 27       	eor	r26, r26
     c9a:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__addsf3x>
     c9e:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_round>
     ca2:	0e 94 33 07 	call	0xe66	; 0xe66 <__fp_pscA>
     ca6:	38 f0       	brcs	.+14     	; 0xcb6 <__addsf3+0x20>
     ca8:	0e 94 3a 07 	call	0xe74	; 0xe74 <__fp_pscB>
     cac:	20 f0       	brcs	.+8      	; 0xcb6 <__addsf3+0x20>
     cae:	39 f4       	brne	.+14     	; 0xcbe <__addsf3+0x28>
     cb0:	9f 3f       	cpi	r25, 0xFF	; 255
     cb2:	19 f4       	brne	.+6      	; 0xcba <__addsf3+0x24>
     cb4:	26 f4       	brtc	.+8      	; 0xcbe <__addsf3+0x28>
     cb6:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__fp_nan>
     cba:	0e f4       	brtc	.+2      	; 0xcbe <__addsf3+0x28>
     cbc:	e0 95       	com	r30
     cbe:	e7 fb       	bst	r30, 7
     cc0:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>

00000cc4 <__addsf3x>:
     cc4:	e9 2f       	mov	r30, r25
     cc6:	0e 94 52 07 	call	0xea4	; 0xea4 <__fp_split3>
     cca:	58 f3       	brcs	.-42     	; 0xca2 <__addsf3+0xc>
     ccc:	ba 17       	cp	r27, r26
     cce:	62 07       	cpc	r22, r18
     cd0:	73 07       	cpc	r23, r19
     cd2:	84 07       	cpc	r24, r20
     cd4:	95 07       	cpc	r25, r21
     cd6:	20 f0       	brcs	.+8      	; 0xce0 <__addsf3x+0x1c>
     cd8:	79 f4       	brne	.+30     	; 0xcf8 <__addsf3x+0x34>
     cda:	a6 f5       	brtc	.+104    	; 0xd44 <__addsf3x+0x80>
     cdc:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__fp_zero>
     ce0:	0e f4       	brtc	.+2      	; 0xce4 <__addsf3x+0x20>
     ce2:	e0 95       	com	r30
     ce4:	0b 2e       	mov	r0, r27
     ce6:	ba 2f       	mov	r27, r26
     ce8:	a0 2d       	mov	r26, r0
     cea:	0b 01       	movw	r0, r22
     cec:	b9 01       	movw	r22, r18
     cee:	90 01       	movw	r18, r0
     cf0:	0c 01       	movw	r0, r24
     cf2:	ca 01       	movw	r24, r20
     cf4:	a0 01       	movw	r20, r0
     cf6:	11 24       	eor	r1, r1
     cf8:	ff 27       	eor	r31, r31
     cfa:	59 1b       	sub	r21, r25
     cfc:	99 f0       	breq	.+38     	; 0xd24 <__addsf3x+0x60>
     cfe:	59 3f       	cpi	r21, 0xF9	; 249
     d00:	50 f4       	brcc	.+20     	; 0xd16 <__addsf3x+0x52>
     d02:	50 3e       	cpi	r21, 0xE0	; 224
     d04:	68 f1       	brcs	.+90     	; 0xd60 <__addsf3x+0x9c>
     d06:	1a 16       	cp	r1, r26
     d08:	f0 40       	sbci	r31, 0x00	; 0
     d0a:	a2 2f       	mov	r26, r18
     d0c:	23 2f       	mov	r18, r19
     d0e:	34 2f       	mov	r19, r20
     d10:	44 27       	eor	r20, r20
     d12:	58 5f       	subi	r21, 0xF8	; 248
     d14:	f3 cf       	rjmp	.-26     	; 0xcfc <__addsf3x+0x38>
     d16:	46 95       	lsr	r20
     d18:	37 95       	ror	r19
     d1a:	27 95       	ror	r18
     d1c:	a7 95       	ror	r26
     d1e:	f0 40       	sbci	r31, 0x00	; 0
     d20:	53 95       	inc	r21
     d22:	c9 f7       	brne	.-14     	; 0xd16 <__addsf3x+0x52>
     d24:	7e f4       	brtc	.+30     	; 0xd44 <__addsf3x+0x80>
     d26:	1f 16       	cp	r1, r31
     d28:	ba 0b       	sbc	r27, r26
     d2a:	62 0b       	sbc	r22, r18
     d2c:	73 0b       	sbc	r23, r19
     d2e:	84 0b       	sbc	r24, r20
     d30:	ba f0       	brmi	.+46     	; 0xd60 <__addsf3x+0x9c>
     d32:	91 50       	subi	r25, 0x01	; 1
     d34:	a1 f0       	breq	.+40     	; 0xd5e <__addsf3x+0x9a>
     d36:	ff 0f       	add	r31, r31
     d38:	bb 1f       	adc	r27, r27
     d3a:	66 1f       	adc	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	88 1f       	adc	r24, r24
     d40:	c2 f7       	brpl	.-16     	; 0xd32 <__addsf3x+0x6e>
     d42:	0e c0       	rjmp	.+28     	; 0xd60 <__addsf3x+0x9c>
     d44:	ba 0f       	add	r27, r26
     d46:	62 1f       	adc	r22, r18
     d48:	73 1f       	adc	r23, r19
     d4a:	84 1f       	adc	r24, r20
     d4c:	48 f4       	brcc	.+18     	; 0xd60 <__addsf3x+0x9c>
     d4e:	87 95       	ror	r24
     d50:	77 95       	ror	r23
     d52:	67 95       	ror	r22
     d54:	b7 95       	ror	r27
     d56:	f7 95       	ror	r31
     d58:	9e 3f       	cpi	r25, 0xFE	; 254
     d5a:	08 f0       	brcs	.+2      	; 0xd5e <__addsf3x+0x9a>
     d5c:	b0 cf       	rjmp	.-160    	; 0xcbe <__addsf3+0x28>
     d5e:	93 95       	inc	r25
     d60:	88 0f       	add	r24, r24
     d62:	08 f0       	brcs	.+2      	; 0xd66 <__addsf3x+0xa2>
     d64:	99 27       	eor	r25, r25
     d66:	ee 0f       	add	r30, r30
     d68:	97 95       	ror	r25
     d6a:	87 95       	ror	r24
     d6c:	08 95       	ret

00000d6e <__fixsfsi>:
     d6e:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fixunssfsi>
     d72:	68 94       	set
     d74:	b1 11       	cpse	r27, r1
     d76:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_szero>
     d7a:	08 95       	ret

00000d7c <__fixunssfsi>:
     d7c:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__fp_splitA>
     d80:	88 f0       	brcs	.+34     	; 0xda4 <__fixunssfsi+0x28>
     d82:	9f 57       	subi	r25, 0x7F	; 127
     d84:	98 f0       	brcs	.+38     	; 0xdac <__fixunssfsi+0x30>
     d86:	b9 2f       	mov	r27, r25
     d88:	99 27       	eor	r25, r25
     d8a:	b7 51       	subi	r27, 0x17	; 23
     d8c:	b0 f0       	brcs	.+44     	; 0xdba <__fixunssfsi+0x3e>
     d8e:	e1 f0       	breq	.+56     	; 0xdc8 <__fixunssfsi+0x4c>
     d90:	66 0f       	add	r22, r22
     d92:	77 1f       	adc	r23, r23
     d94:	88 1f       	adc	r24, r24
     d96:	99 1f       	adc	r25, r25
     d98:	1a f0       	brmi	.+6      	; 0xda0 <__fixunssfsi+0x24>
     d9a:	ba 95       	dec	r27
     d9c:	c9 f7       	brne	.-14     	; 0xd90 <__fixunssfsi+0x14>
     d9e:	14 c0       	rjmp	.+40     	; 0xdc8 <__fixunssfsi+0x4c>
     da0:	b1 30       	cpi	r27, 0x01	; 1
     da2:	91 f0       	breq	.+36     	; 0xdc8 <__fixunssfsi+0x4c>
     da4:	0e 94 74 07 	call	0xee8	; 0xee8 <__fp_zero>
     da8:	b1 e0       	ldi	r27, 0x01	; 1
     daa:	08 95       	ret
     dac:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__fp_zero>
     db0:	67 2f       	mov	r22, r23
     db2:	78 2f       	mov	r23, r24
     db4:	88 27       	eor	r24, r24
     db6:	b8 5f       	subi	r27, 0xF8	; 248
     db8:	39 f0       	breq	.+14     	; 0xdc8 <__fixunssfsi+0x4c>
     dba:	b9 3f       	cpi	r27, 0xF9	; 249
     dbc:	cc f3       	brlt	.-14     	; 0xdb0 <__fixunssfsi+0x34>
     dbe:	86 95       	lsr	r24
     dc0:	77 95       	ror	r23
     dc2:	67 95       	ror	r22
     dc4:	b3 95       	inc	r27
     dc6:	d9 f7       	brne	.-10     	; 0xdbe <__fixunssfsi+0x42>
     dc8:	3e f4       	brtc	.+14     	; 0xdd8 <__fixunssfsi+0x5c>
     dca:	90 95       	com	r25
     dcc:	80 95       	com	r24
     dce:	70 95       	com	r23
     dd0:	61 95       	neg	r22
     dd2:	7f 4f       	sbci	r23, 0xFF	; 255
     dd4:	8f 4f       	sbci	r24, 0xFF	; 255
     dd6:	9f 4f       	sbci	r25, 0xFF	; 255
     dd8:	08 95       	ret

00000dda <__floatunsisf>:
     dda:	e8 94       	clt
     ddc:	09 c0       	rjmp	.+18     	; 0xdf0 <__floatsisf+0x12>

00000dde <__floatsisf>:
     dde:	97 fb       	bst	r25, 7
     de0:	3e f4       	brtc	.+14     	; 0xdf0 <__floatsisf+0x12>
     de2:	90 95       	com	r25
     de4:	80 95       	com	r24
     de6:	70 95       	com	r23
     de8:	61 95       	neg	r22
     dea:	7f 4f       	sbci	r23, 0xFF	; 255
     dec:	8f 4f       	sbci	r24, 0xFF	; 255
     dee:	9f 4f       	sbci	r25, 0xFF	; 255
     df0:	99 23       	and	r25, r25
     df2:	a9 f0       	breq	.+42     	; 0xe1e <__floatsisf+0x40>
     df4:	f9 2f       	mov	r31, r25
     df6:	96 e9       	ldi	r25, 0x96	; 150
     df8:	bb 27       	eor	r27, r27
     dfa:	93 95       	inc	r25
     dfc:	f6 95       	lsr	r31
     dfe:	87 95       	ror	r24
     e00:	77 95       	ror	r23
     e02:	67 95       	ror	r22
     e04:	b7 95       	ror	r27
     e06:	f1 11       	cpse	r31, r1
     e08:	f8 cf       	rjmp	.-16     	; 0xdfa <__floatsisf+0x1c>
     e0a:	fa f4       	brpl	.+62     	; 0xe4a <__floatsisf+0x6c>
     e0c:	bb 0f       	add	r27, r27
     e0e:	11 f4       	brne	.+4      	; 0xe14 <__floatsisf+0x36>
     e10:	60 ff       	sbrs	r22, 0
     e12:	1b c0       	rjmp	.+54     	; 0xe4a <__floatsisf+0x6c>
     e14:	6f 5f       	subi	r22, 0xFF	; 255
     e16:	7f 4f       	sbci	r23, 0xFF	; 255
     e18:	8f 4f       	sbci	r24, 0xFF	; 255
     e1a:	9f 4f       	sbci	r25, 0xFF	; 255
     e1c:	16 c0       	rjmp	.+44     	; 0xe4a <__floatsisf+0x6c>
     e1e:	88 23       	and	r24, r24
     e20:	11 f0       	breq	.+4      	; 0xe26 <__floatsisf+0x48>
     e22:	96 e9       	ldi	r25, 0x96	; 150
     e24:	11 c0       	rjmp	.+34     	; 0xe48 <__floatsisf+0x6a>
     e26:	77 23       	and	r23, r23
     e28:	21 f0       	breq	.+8      	; 0xe32 <__floatsisf+0x54>
     e2a:	9e e8       	ldi	r25, 0x8E	; 142
     e2c:	87 2f       	mov	r24, r23
     e2e:	76 2f       	mov	r23, r22
     e30:	05 c0       	rjmp	.+10     	; 0xe3c <__floatsisf+0x5e>
     e32:	66 23       	and	r22, r22
     e34:	71 f0       	breq	.+28     	; 0xe52 <__floatsisf+0x74>
     e36:	96 e8       	ldi	r25, 0x86	; 134
     e38:	86 2f       	mov	r24, r22
     e3a:	70 e0       	ldi	r23, 0x00	; 0
     e3c:	60 e0       	ldi	r22, 0x00	; 0
     e3e:	2a f0       	brmi	.+10     	; 0xe4a <__floatsisf+0x6c>
     e40:	9a 95       	dec	r25
     e42:	66 0f       	add	r22, r22
     e44:	77 1f       	adc	r23, r23
     e46:	88 1f       	adc	r24, r24
     e48:	da f7       	brpl	.-10     	; 0xe40 <__floatsisf+0x62>
     e4a:	88 0f       	add	r24, r24
     e4c:	96 95       	lsr	r25
     e4e:	87 95       	ror	r24
     e50:	97 f9       	bld	r25, 7
     e52:	08 95       	ret

00000e54 <__fp_inf>:
     e54:	97 f9       	bld	r25, 7
     e56:	9f 67       	ori	r25, 0x7F	; 127
     e58:	80 e8       	ldi	r24, 0x80	; 128
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	60 e0       	ldi	r22, 0x00	; 0
     e5e:	08 95       	ret

00000e60 <__fp_nan>:
     e60:	9f ef       	ldi	r25, 0xFF	; 255
     e62:	80 ec       	ldi	r24, 0xC0	; 192
     e64:	08 95       	ret

00000e66 <__fp_pscA>:
     e66:	00 24       	eor	r0, r0
     e68:	0a 94       	dec	r0
     e6a:	16 16       	cp	r1, r22
     e6c:	17 06       	cpc	r1, r23
     e6e:	18 06       	cpc	r1, r24
     e70:	09 06       	cpc	r0, r25
     e72:	08 95       	ret

00000e74 <__fp_pscB>:
     e74:	00 24       	eor	r0, r0
     e76:	0a 94       	dec	r0
     e78:	12 16       	cp	r1, r18
     e7a:	13 06       	cpc	r1, r19
     e7c:	14 06       	cpc	r1, r20
     e7e:	05 06       	cpc	r0, r21
     e80:	08 95       	ret

00000e82 <__fp_round>:
     e82:	09 2e       	mov	r0, r25
     e84:	03 94       	inc	r0
     e86:	00 0c       	add	r0, r0
     e88:	11 f4       	brne	.+4      	; 0xe8e <__fp_round+0xc>
     e8a:	88 23       	and	r24, r24
     e8c:	52 f0       	brmi	.+20     	; 0xea2 <__fp_round+0x20>
     e8e:	bb 0f       	add	r27, r27
     e90:	40 f4       	brcc	.+16     	; 0xea2 <__fp_round+0x20>
     e92:	bf 2b       	or	r27, r31
     e94:	11 f4       	brne	.+4      	; 0xe9a <__fp_round+0x18>
     e96:	60 ff       	sbrs	r22, 0
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <__fp_round+0x20>
     e9a:	6f 5f       	subi	r22, 0xFF	; 255
     e9c:	7f 4f       	sbci	r23, 0xFF	; 255
     e9e:	8f 4f       	sbci	r24, 0xFF	; 255
     ea0:	9f 4f       	sbci	r25, 0xFF	; 255
     ea2:	08 95       	ret

00000ea4 <__fp_split3>:
     ea4:	57 fd       	sbrc	r21, 7
     ea6:	90 58       	subi	r25, 0x80	; 128
     ea8:	44 0f       	add	r20, r20
     eaa:	55 1f       	adc	r21, r21
     eac:	59 f0       	breq	.+22     	; 0xec4 <__fp_splitA+0x10>
     eae:	5f 3f       	cpi	r21, 0xFF	; 255
     eb0:	71 f0       	breq	.+28     	; 0xece <__fp_splitA+0x1a>
     eb2:	47 95       	ror	r20

00000eb4 <__fp_splitA>:
     eb4:	88 0f       	add	r24, r24
     eb6:	97 fb       	bst	r25, 7
     eb8:	99 1f       	adc	r25, r25
     eba:	61 f0       	breq	.+24     	; 0xed4 <__fp_splitA+0x20>
     ebc:	9f 3f       	cpi	r25, 0xFF	; 255
     ebe:	79 f0       	breq	.+30     	; 0xede <__fp_splitA+0x2a>
     ec0:	87 95       	ror	r24
     ec2:	08 95       	ret
     ec4:	12 16       	cp	r1, r18
     ec6:	13 06       	cpc	r1, r19
     ec8:	14 06       	cpc	r1, r20
     eca:	55 1f       	adc	r21, r21
     ecc:	f2 cf       	rjmp	.-28     	; 0xeb2 <__fp_split3+0xe>
     ece:	46 95       	lsr	r20
     ed0:	f1 df       	rcall	.-30     	; 0xeb4 <__fp_splitA>
     ed2:	08 c0       	rjmp	.+16     	; 0xee4 <__fp_splitA+0x30>
     ed4:	16 16       	cp	r1, r22
     ed6:	17 06       	cpc	r1, r23
     ed8:	18 06       	cpc	r1, r24
     eda:	99 1f       	adc	r25, r25
     edc:	f1 cf       	rjmp	.-30     	; 0xec0 <__fp_splitA+0xc>
     ede:	86 95       	lsr	r24
     ee0:	71 05       	cpc	r23, r1
     ee2:	61 05       	cpc	r22, r1
     ee4:	08 94       	sec
     ee6:	08 95       	ret

00000ee8 <__fp_zero>:
     ee8:	e8 94       	clt

00000eea <__fp_szero>:
     eea:	bb 27       	eor	r27, r27
     eec:	66 27       	eor	r22, r22
     eee:	77 27       	eor	r23, r23
     ef0:	cb 01       	movw	r24, r22
     ef2:	97 f9       	bld	r25, 7
     ef4:	08 95       	ret

00000ef6 <__mulsf3>:
     ef6:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__mulsf3x>
     efa:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_round>
     efe:	0e 94 33 07 	call	0xe66	; 0xe66 <__fp_pscA>
     f02:	38 f0       	brcs	.+14     	; 0xf12 <__mulsf3+0x1c>
     f04:	0e 94 3a 07 	call	0xe74	; 0xe74 <__fp_pscB>
     f08:	20 f0       	brcs	.+8      	; 0xf12 <__mulsf3+0x1c>
     f0a:	95 23       	and	r25, r21
     f0c:	11 f0       	breq	.+4      	; 0xf12 <__mulsf3+0x1c>
     f0e:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>
     f12:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__fp_nan>
     f16:	11 24       	eor	r1, r1
     f18:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_szero>

00000f1c <__mulsf3x>:
     f1c:	0e 94 52 07 	call	0xea4	; 0xea4 <__fp_split3>
     f20:	70 f3       	brcs	.-36     	; 0xefe <__mulsf3+0x8>

00000f22 <__mulsf3_pse>:
     f22:	95 9f       	mul	r25, r21
     f24:	c1 f3       	breq	.-16     	; 0xf16 <__mulsf3+0x20>
     f26:	95 0f       	add	r25, r21
     f28:	50 e0       	ldi	r21, 0x00	; 0
     f2a:	55 1f       	adc	r21, r21
     f2c:	62 9f       	mul	r22, r18
     f2e:	f0 01       	movw	r30, r0
     f30:	72 9f       	mul	r23, r18
     f32:	bb 27       	eor	r27, r27
     f34:	f0 0d       	add	r31, r0
     f36:	b1 1d       	adc	r27, r1
     f38:	63 9f       	mul	r22, r19
     f3a:	aa 27       	eor	r26, r26
     f3c:	f0 0d       	add	r31, r0
     f3e:	b1 1d       	adc	r27, r1
     f40:	aa 1f       	adc	r26, r26
     f42:	64 9f       	mul	r22, r20
     f44:	66 27       	eor	r22, r22
     f46:	b0 0d       	add	r27, r0
     f48:	a1 1d       	adc	r26, r1
     f4a:	66 1f       	adc	r22, r22
     f4c:	82 9f       	mul	r24, r18
     f4e:	22 27       	eor	r18, r18
     f50:	b0 0d       	add	r27, r0
     f52:	a1 1d       	adc	r26, r1
     f54:	62 1f       	adc	r22, r18
     f56:	73 9f       	mul	r23, r19
     f58:	b0 0d       	add	r27, r0
     f5a:	a1 1d       	adc	r26, r1
     f5c:	62 1f       	adc	r22, r18
     f5e:	83 9f       	mul	r24, r19
     f60:	a0 0d       	add	r26, r0
     f62:	61 1d       	adc	r22, r1
     f64:	22 1f       	adc	r18, r18
     f66:	74 9f       	mul	r23, r20
     f68:	33 27       	eor	r19, r19
     f6a:	a0 0d       	add	r26, r0
     f6c:	61 1d       	adc	r22, r1
     f6e:	23 1f       	adc	r18, r19
     f70:	84 9f       	mul	r24, r20
     f72:	60 0d       	add	r22, r0
     f74:	21 1d       	adc	r18, r1
     f76:	82 2f       	mov	r24, r18
     f78:	76 2f       	mov	r23, r22
     f7a:	6a 2f       	mov	r22, r26
     f7c:	11 24       	eor	r1, r1
     f7e:	9f 57       	subi	r25, 0x7F	; 127
     f80:	50 40       	sbci	r21, 0x00	; 0
     f82:	9a f0       	brmi	.+38     	; 0xfaa <__mulsf3_pse+0x88>
     f84:	f1 f0       	breq	.+60     	; 0xfc2 <__mulsf3_pse+0xa0>
     f86:	88 23       	and	r24, r24
     f88:	4a f0       	brmi	.+18     	; 0xf9c <__mulsf3_pse+0x7a>
     f8a:	ee 0f       	add	r30, r30
     f8c:	ff 1f       	adc	r31, r31
     f8e:	bb 1f       	adc	r27, r27
     f90:	66 1f       	adc	r22, r22
     f92:	77 1f       	adc	r23, r23
     f94:	88 1f       	adc	r24, r24
     f96:	91 50       	subi	r25, 0x01	; 1
     f98:	50 40       	sbci	r21, 0x00	; 0
     f9a:	a9 f7       	brne	.-22     	; 0xf86 <__mulsf3_pse+0x64>
     f9c:	9e 3f       	cpi	r25, 0xFE	; 254
     f9e:	51 05       	cpc	r21, r1
     fa0:	80 f0       	brcs	.+32     	; 0xfc2 <__mulsf3_pse+0xa0>
     fa2:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>
     fa6:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_szero>
     faa:	5f 3f       	cpi	r21, 0xFF	; 255
     fac:	e4 f3       	brlt	.-8      	; 0xfa6 <__mulsf3_pse+0x84>
     fae:	98 3e       	cpi	r25, 0xE8	; 232
     fb0:	d4 f3       	brlt	.-12     	; 0xfa6 <__mulsf3_pse+0x84>
     fb2:	86 95       	lsr	r24
     fb4:	77 95       	ror	r23
     fb6:	67 95       	ror	r22
     fb8:	b7 95       	ror	r27
     fba:	f7 95       	ror	r31
     fbc:	e7 95       	ror	r30
     fbe:	9f 5f       	subi	r25, 0xFF	; 255
     fc0:	c1 f7       	brne	.-16     	; 0xfb2 <__mulsf3_pse+0x90>
     fc2:	fe 2b       	or	r31, r30
     fc4:	88 0f       	add	r24, r24
     fc6:	91 1d       	adc	r25, r1
     fc8:	96 95       	lsr	r25
     fca:	87 95       	ror	r24
     fcc:	97 f9       	bld	r25, 7
     fce:	08 95       	ret

00000fd0 <pow>:
     fd0:	fa 01       	movw	r30, r20
     fd2:	ee 0f       	add	r30, r30
     fd4:	ff 1f       	adc	r31, r31
     fd6:	30 96       	adiw	r30, 0x00	; 0
     fd8:	21 05       	cpc	r18, r1
     fda:	31 05       	cpc	r19, r1
     fdc:	a1 f1       	breq	.+104    	; 0x1046 <pow+0x76>
     fde:	61 15       	cp	r22, r1
     fe0:	71 05       	cpc	r23, r1
     fe2:	61 f4       	brne	.+24     	; 0xffc <pow+0x2c>
     fe4:	80 38       	cpi	r24, 0x80	; 128
     fe6:	bf e3       	ldi	r27, 0x3F	; 63
     fe8:	9b 07       	cpc	r25, r27
     fea:	49 f1       	breq	.+82     	; 0x103e <pow+0x6e>
     fec:	68 94       	set
     fee:	90 38       	cpi	r25, 0x80	; 128
     ff0:	81 05       	cpc	r24, r1
     ff2:	61 f0       	breq	.+24     	; 0x100c <pow+0x3c>
     ff4:	80 38       	cpi	r24, 0x80	; 128
     ff6:	bf ef       	ldi	r27, 0xFF	; 255
     ff8:	9b 07       	cpc	r25, r27
     ffa:	41 f0       	breq	.+16     	; 0x100c <pow+0x3c>
     ffc:	99 23       	and	r25, r25
     ffe:	4a f5       	brpl	.+82     	; 0x1052 <pow+0x82>
    1000:	ff 3f       	cpi	r31, 0xFF	; 255
    1002:	e1 05       	cpc	r30, r1
    1004:	31 05       	cpc	r19, r1
    1006:	21 05       	cpc	r18, r1
    1008:	19 f1       	breq	.+70     	; 0x1050 <pow+0x80>
    100a:	e8 94       	clt
    100c:	08 94       	sec
    100e:	e7 95       	ror	r30
    1010:	d9 01       	movw	r26, r18
    1012:	aa 23       	and	r26, r26
    1014:	29 f4       	brne	.+10     	; 0x1020 <pow+0x50>
    1016:	ab 2f       	mov	r26, r27
    1018:	be 2f       	mov	r27, r30
    101a:	f8 5f       	subi	r31, 0xF8	; 248
    101c:	d0 f3       	brcs	.-12     	; 0x1012 <pow+0x42>
    101e:	10 c0       	rjmp	.+32     	; 0x1040 <pow+0x70>
    1020:	ff 5f       	subi	r31, 0xFF	; 255
    1022:	70 f4       	brcc	.+28     	; 0x1040 <pow+0x70>
    1024:	a6 95       	lsr	r26
    1026:	e0 f7       	brcc	.-8      	; 0x1020 <pow+0x50>
    1028:	f7 39       	cpi	r31, 0x97	; 151
    102a:	50 f0       	brcs	.+20     	; 0x1040 <pow+0x70>
    102c:	19 f0       	breq	.+6      	; 0x1034 <pow+0x64>
    102e:	ff 3a       	cpi	r31, 0xAF	; 175
    1030:	38 f4       	brcc	.+14     	; 0x1040 <pow+0x70>
    1032:	9f 77       	andi	r25, 0x7F	; 127
    1034:	9f 93       	push	r25
    1036:	0d d0       	rcall	.+26     	; 0x1052 <pow+0x82>
    1038:	0f 90       	pop	r0
    103a:	07 fc       	sbrc	r0, 7
    103c:	90 58       	subi	r25, 0x80	; 128
    103e:	08 95       	ret
    1040:	46 f0       	brts	.+16     	; 0x1052 <pow+0x82>
    1042:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__fp_nan>
    1046:	60 e0       	ldi	r22, 0x00	; 0
    1048:	70 e0       	ldi	r23, 0x00	; 0
    104a:	80 e8       	ldi	r24, 0x80	; 128
    104c:	9f e3       	ldi	r25, 0x3F	; 63
    104e:	08 95       	ret
    1050:	4f e7       	ldi	r20, 0x7F	; 127
    1052:	9f 77       	andi	r25, 0x7F	; 127
    1054:	5f 93       	push	r21
    1056:	4f 93       	push	r20
    1058:	3f 93       	push	r19
    105a:	2f 93       	push	r18
    105c:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <log>
    1060:	2f 91       	pop	r18
    1062:	3f 91       	pop	r19
    1064:	4f 91       	pop	r20
    1066:	5f 91       	pop	r21
    1068:	0e 94 7b 07 	call	0xef6	; 0xef6 <__mulsf3>
    106c:	0c 94 40 08 	jmp	0x1080	; 0x1080 <exp>
    1070:	29 f4       	brne	.+10     	; 0x107c <pow+0xac>
    1072:	16 f0       	brts	.+4      	; 0x1078 <pow+0xa8>
    1074:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>
    1078:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__fp_zero>
    107c:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__fp_nan>

00001080 <exp>:
    1080:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__fp_splitA>
    1084:	a8 f3       	brcs	.-22     	; 0x1070 <pow+0xa0>
    1086:	96 38       	cpi	r25, 0x86	; 134
    1088:	a0 f7       	brcc	.-24     	; 0x1072 <pow+0xa2>
    108a:	07 f8       	bld	r0, 7
    108c:	0f 92       	push	r0
    108e:	e8 94       	clt
    1090:	2b e3       	ldi	r18, 0x3B	; 59
    1092:	3a ea       	ldi	r19, 0xAA	; 170
    1094:	48 eb       	ldi	r20, 0xB8	; 184
    1096:	5f e7       	ldi	r21, 0x7F	; 127
    1098:	0e 94 91 07 	call	0xf22	; 0xf22 <__mulsf3_pse>
    109c:	0f 92       	push	r0
    109e:	0f 92       	push	r0
    10a0:	0f 92       	push	r0
    10a2:	4d b7       	in	r20, 0x3d	; 61
    10a4:	5e b7       	in	r21, 0x3e	; 62
    10a6:	0f 92       	push	r0
    10a8:	0e 94 2b 09 	call	0x1256	; 0x1256 <modf>
    10ac:	e8 e5       	ldi	r30, 0x58	; 88
    10ae:	f1 e0       	ldi	r31, 0x01	; 1
    10b0:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__fp_powser>
    10b4:	4f 91       	pop	r20
    10b6:	5f 91       	pop	r21
    10b8:	ef 91       	pop	r30
    10ba:	ff 91       	pop	r31
    10bc:	e5 95       	asr	r30
    10be:	ee 1f       	adc	r30, r30
    10c0:	ff 1f       	adc	r31, r31
    10c2:	49 f0       	breq	.+18     	; 0x10d6 <exp+0x56>
    10c4:	fe 57       	subi	r31, 0x7E	; 126
    10c6:	e0 68       	ori	r30, 0x80	; 128
    10c8:	44 27       	eor	r20, r20
    10ca:	ee 0f       	add	r30, r30
    10cc:	44 1f       	adc	r20, r20
    10ce:	fa 95       	dec	r31
    10d0:	e1 f7       	brne	.-8      	; 0x10ca <exp+0x4a>
    10d2:	41 95       	neg	r20
    10d4:	55 0b       	sbc	r21, r21
    10d6:	0e 94 a5 08 	call	0x114a	; 0x114a <ldexp>
    10da:	0f 90       	pop	r0
    10dc:	07 fe       	sbrs	r0, 7
    10de:	0c 94 99 08 	jmp	0x1132	; 0x1132 <inverse>
    10e2:	08 95       	ret

000010e4 <__fp_powser>:
    10e4:	df 93       	push	r29
    10e6:	cf 93       	push	r28
    10e8:	1f 93       	push	r17
    10ea:	0f 93       	push	r16
    10ec:	ff 92       	push	r15
    10ee:	ef 92       	push	r14
    10f0:	df 92       	push	r13
    10f2:	7b 01       	movw	r14, r22
    10f4:	8c 01       	movw	r16, r24
    10f6:	68 94       	set
    10f8:	06 c0       	rjmp	.+12     	; 0x1106 <__fp_powser+0x22>
    10fa:	da 2e       	mov	r13, r26
    10fc:	ef 01       	movw	r28, r30
    10fe:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__mulsf3x>
    1102:	fe 01       	movw	r30, r28
    1104:	e8 94       	clt
    1106:	a5 91       	lpm	r26, Z+
    1108:	25 91       	lpm	r18, Z+
    110a:	35 91       	lpm	r19, Z+
    110c:	45 91       	lpm	r20, Z+
    110e:	55 91       	lpm	r21, Z+
    1110:	a6 f3       	brts	.-24     	; 0x10fa <__fp_powser+0x16>
    1112:	ef 01       	movw	r28, r30
    1114:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__addsf3x>
    1118:	fe 01       	movw	r30, r28
    111a:	97 01       	movw	r18, r14
    111c:	a8 01       	movw	r20, r16
    111e:	da 94       	dec	r13
    1120:	69 f7       	brne	.-38     	; 0x10fc <__fp_powser+0x18>
    1122:	df 90       	pop	r13
    1124:	ef 90       	pop	r14
    1126:	ff 90       	pop	r15
    1128:	0f 91       	pop	r16
    112a:	1f 91       	pop	r17
    112c:	cf 91       	pop	r28
    112e:	df 91       	pop	r29
    1130:	08 95       	ret

00001132 <inverse>:
    1132:	9b 01       	movw	r18, r22
    1134:	ac 01       	movw	r20, r24
    1136:	60 e0       	ldi	r22, 0x00	; 0
    1138:	70 e0       	ldi	r23, 0x00	; 0
    113a:	80 e8       	ldi	r24, 0x80	; 128
    113c:	9f e3       	ldi	r25, 0x3F	; 63
    113e:	0c 94 5f 09 	jmp	0x12be	; 0x12be <__divsf3>
    1142:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>
    1146:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <__fp_mpack>

0000114a <ldexp>:
    114a:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__fp_splitA>
    114e:	d8 f3       	brcs	.-10     	; 0x1146 <inverse+0x14>
    1150:	99 23       	and	r25, r25
    1152:	c9 f3       	breq	.-14     	; 0x1146 <inverse+0x14>
    1154:	94 0f       	add	r25, r20
    1156:	51 1d       	adc	r21, r1
    1158:	a3 f3       	brvs	.-24     	; 0x1142 <inverse+0x10>
    115a:	91 50       	subi	r25, 0x01	; 1
    115c:	50 40       	sbci	r21, 0x00	; 0
    115e:	94 f0       	brlt	.+36     	; 0x1184 <ldexp+0x3a>
    1160:	59 f0       	breq	.+22     	; 0x1178 <ldexp+0x2e>
    1162:	88 23       	and	r24, r24
    1164:	32 f0       	brmi	.+12     	; 0x1172 <ldexp+0x28>
    1166:	66 0f       	add	r22, r22
    1168:	77 1f       	adc	r23, r23
    116a:	88 1f       	adc	r24, r24
    116c:	91 50       	subi	r25, 0x01	; 1
    116e:	50 40       	sbci	r21, 0x00	; 0
    1170:	c1 f7       	brne	.-16     	; 0x1162 <ldexp+0x18>
    1172:	9e 3f       	cpi	r25, 0xFE	; 254
    1174:	51 05       	cpc	r21, r1
    1176:	2c f7       	brge	.-54     	; 0x1142 <inverse+0x10>
    1178:	88 0f       	add	r24, r24
    117a:	91 1d       	adc	r25, r1
    117c:	96 95       	lsr	r25
    117e:	87 95       	ror	r24
    1180:	97 f9       	bld	r25, 7
    1182:	08 95       	ret
    1184:	5f 3f       	cpi	r21, 0xFF	; 255
    1186:	ac f0       	brlt	.+42     	; 0x11b2 <ldexp+0x68>
    1188:	98 3e       	cpi	r25, 0xE8	; 232
    118a:	9c f0       	brlt	.+38     	; 0x11b2 <ldexp+0x68>
    118c:	bb 27       	eor	r27, r27
    118e:	86 95       	lsr	r24
    1190:	77 95       	ror	r23
    1192:	67 95       	ror	r22
    1194:	b7 95       	ror	r27
    1196:	08 f4       	brcc	.+2      	; 0x119a <ldexp+0x50>
    1198:	b1 60       	ori	r27, 0x01	; 1
    119a:	93 95       	inc	r25
    119c:	c1 f7       	brne	.-16     	; 0x118e <ldexp+0x44>
    119e:	bb 0f       	add	r27, r27
    11a0:	58 f7       	brcc	.-42     	; 0x1178 <ldexp+0x2e>
    11a2:	11 f4       	brne	.+4      	; 0x11a8 <ldexp+0x5e>
    11a4:	60 ff       	sbrs	r22, 0
    11a6:	e8 cf       	rjmp	.-48     	; 0x1178 <ldexp+0x2e>
    11a8:	6f 5f       	subi	r22, 0xFF	; 255
    11aa:	7f 4f       	sbci	r23, 0xFF	; 255
    11ac:	8f 4f       	sbci	r24, 0xFF	; 255
    11ae:	9f 4f       	sbci	r25, 0xFF	; 255
    11b0:	e3 cf       	rjmp	.-58     	; 0x1178 <ldexp+0x2e>
    11b2:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_szero>
    11b6:	16 f0       	brts	.+4      	; 0x11bc <ldexp+0x72>
    11b8:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <__fp_mpack>
    11bc:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__fp_nan>
    11c0:	68 94       	set
    11c2:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>

000011c6 <log>:
    11c6:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__fp_splitA>
    11ca:	a8 f3       	brcs	.-22     	; 0x11b6 <ldexp+0x6c>
    11cc:	99 23       	and	r25, r25
    11ce:	c1 f3       	breq	.-16     	; 0x11c0 <ldexp+0x76>
    11d0:	ae f3       	brts	.-22     	; 0x11bc <ldexp+0x72>
    11d2:	df 93       	push	r29
    11d4:	cf 93       	push	r28
    11d6:	1f 93       	push	r17
    11d8:	0f 93       	push	r16
    11da:	ff 92       	push	r15
    11dc:	c9 2f       	mov	r28, r25
    11de:	dd 27       	eor	r29, r29
    11e0:	88 23       	and	r24, r24
    11e2:	2a f0       	brmi	.+10     	; 0x11ee <log+0x28>
    11e4:	21 97       	sbiw	r28, 0x01	; 1
    11e6:	66 0f       	add	r22, r22
    11e8:	77 1f       	adc	r23, r23
    11ea:	88 1f       	adc	r24, r24
    11ec:	da f7       	brpl	.-10     	; 0x11e4 <log+0x1e>
    11ee:	20 e0       	ldi	r18, 0x00	; 0
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	40 e8       	ldi	r20, 0x80	; 128
    11f4:	5f eb       	ldi	r21, 0xBF	; 191
    11f6:	9f e3       	ldi	r25, 0x3F	; 63
    11f8:	88 39       	cpi	r24, 0x98	; 152
    11fa:	20 f0       	brcs	.+8      	; 0x1204 <log+0x3e>
    11fc:	80 3e       	cpi	r24, 0xE0	; 224
    11fe:	38 f0       	brcs	.+14     	; 0x120e <log+0x48>
    1200:	21 96       	adiw	r28, 0x01	; 1
    1202:	8f 77       	andi	r24, 0x7F	; 127
    1204:	0e 94 4b 06 	call	0xc96	; 0xc96 <__addsf3>
    1208:	e0 e8       	ldi	r30, 0x80	; 128
    120a:	f1 e0       	ldi	r31, 0x01	; 1
    120c:	04 c0       	rjmp	.+8      	; 0x1216 <log+0x50>
    120e:	0e 94 4b 06 	call	0xc96	; 0xc96 <__addsf3>
    1212:	ed ea       	ldi	r30, 0xAD	; 173
    1214:	f1 e0       	ldi	r31, 0x01	; 1
    1216:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__fp_powser>
    121a:	8b 01       	movw	r16, r22
    121c:	be 01       	movw	r22, r28
    121e:	ec 01       	movw	r28, r24
    1220:	fb 2e       	mov	r15, r27
    1222:	6f 57       	subi	r22, 0x7F	; 127
    1224:	71 09       	sbc	r23, r1
    1226:	75 95       	asr	r23
    1228:	77 1f       	adc	r23, r23
    122a:	88 0b       	sbc	r24, r24
    122c:	99 0b       	sbc	r25, r25
    122e:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatsisf>
    1232:	28 e1       	ldi	r18, 0x18	; 24
    1234:	32 e7       	ldi	r19, 0x72	; 114
    1236:	41 e3       	ldi	r20, 0x31	; 49
    1238:	5f e3       	ldi	r21, 0x3F	; 63
    123a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__mulsf3x>
    123e:	af 2d       	mov	r26, r15
    1240:	98 01       	movw	r18, r16
    1242:	ae 01       	movw	r20, r28
    1244:	ff 90       	pop	r15
    1246:	0f 91       	pop	r16
    1248:	1f 91       	pop	r17
    124a:	cf 91       	pop	r28
    124c:	df 91       	pop	r29
    124e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__addsf3x>
    1252:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_round>

00001256 <modf>:
    1256:	fa 01       	movw	r30, r20
    1258:	dc 01       	movw	r26, r24
    125a:	aa 0f       	add	r26, r26
    125c:	bb 1f       	adc	r27, r27
    125e:	9b 01       	movw	r18, r22
    1260:	ac 01       	movw	r20, r24
    1262:	bf 57       	subi	r27, 0x7F	; 127
    1264:	28 f4       	brcc	.+10     	; 0x1270 <modf+0x1a>
    1266:	22 27       	eor	r18, r18
    1268:	33 27       	eor	r19, r19
    126a:	44 27       	eor	r20, r20
    126c:	50 78       	andi	r21, 0x80	; 128
    126e:	20 c0       	rjmp	.+64     	; 0x12b0 <modf+0x5a>
    1270:	b7 51       	subi	r27, 0x17	; 23
    1272:	90 f4       	brcc	.+36     	; 0x1298 <modf+0x42>
    1274:	ab 2f       	mov	r26, r27
    1276:	00 24       	eor	r0, r0
    1278:	46 95       	lsr	r20
    127a:	37 95       	ror	r19
    127c:	27 95       	ror	r18
    127e:	01 1c       	adc	r0, r1
    1280:	a3 95       	inc	r26
    1282:	d2 f3       	brmi	.-12     	; 0x1278 <modf+0x22>
    1284:	00 20       	and	r0, r0
    1286:	71 f0       	breq	.+28     	; 0x12a4 <modf+0x4e>
    1288:	22 0f       	add	r18, r18
    128a:	33 1f       	adc	r19, r19
    128c:	44 1f       	adc	r20, r20
    128e:	b3 95       	inc	r27
    1290:	da f3       	brmi	.-10     	; 0x1288 <modf+0x32>
    1292:	0e d0       	rcall	.+28     	; 0x12b0 <modf+0x5a>
    1294:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__subsf3>
    1298:	61 30       	cpi	r22, 0x01	; 1
    129a:	71 05       	cpc	r23, r1
    129c:	a0 e8       	ldi	r26, 0x80	; 128
    129e:	8a 07       	cpc	r24, r26
    12a0:	b9 46       	sbci	r27, 0x69	; 105
    12a2:	30 f4       	brcc	.+12     	; 0x12b0 <modf+0x5a>
    12a4:	9b 01       	movw	r18, r22
    12a6:	ac 01       	movw	r20, r24
    12a8:	66 27       	eor	r22, r22
    12aa:	77 27       	eor	r23, r23
    12ac:	88 27       	eor	r24, r24
    12ae:	90 78       	andi	r25, 0x80	; 128
    12b0:	30 96       	adiw	r30, 0x00	; 0
    12b2:	21 f0       	breq	.+8      	; 0x12bc <modf+0x66>
    12b4:	20 83       	st	Z, r18
    12b6:	31 83       	std	Z+1, r19	; 0x01
    12b8:	42 83       	std	Z+2, r20	; 0x02
    12ba:	53 83       	std	Z+3, r21	; 0x03
    12bc:	08 95       	ret

000012be <__divsf3>:
    12be:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__divsf3x>
    12c2:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_round>
    12c6:	0e 94 3a 07 	call	0xe74	; 0xe74 <__fp_pscB>
    12ca:	58 f0       	brcs	.+22     	; 0x12e2 <__divsf3+0x24>
    12cc:	0e 94 33 07 	call	0xe66	; 0xe66 <__fp_pscA>
    12d0:	40 f0       	brcs	.+16     	; 0x12e2 <__divsf3+0x24>
    12d2:	29 f4       	brne	.+10     	; 0x12de <__divsf3+0x20>
    12d4:	5f 3f       	cpi	r21, 0xFF	; 255
    12d6:	29 f0       	breq	.+10     	; 0x12e2 <__divsf3+0x24>
    12d8:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>
    12dc:	51 11       	cpse	r21, r1
    12de:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_szero>
    12e2:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__fp_nan>

000012e6 <__divsf3x>:
    12e6:	0e 94 52 07 	call	0xea4	; 0xea4 <__fp_split3>
    12ea:	68 f3       	brcs	.-38     	; 0x12c6 <__divsf3+0x8>

000012ec <__divsf3_pse>:
    12ec:	99 23       	and	r25, r25
    12ee:	b1 f3       	breq	.-20     	; 0x12dc <__divsf3+0x1e>
    12f0:	55 23       	and	r21, r21
    12f2:	91 f3       	breq	.-28     	; 0x12d8 <__divsf3+0x1a>
    12f4:	95 1b       	sub	r25, r21
    12f6:	55 0b       	sbc	r21, r21
    12f8:	bb 27       	eor	r27, r27
    12fa:	aa 27       	eor	r26, r26
    12fc:	62 17       	cp	r22, r18
    12fe:	73 07       	cpc	r23, r19
    1300:	84 07       	cpc	r24, r20
    1302:	38 f0       	brcs	.+14     	; 0x1312 <__divsf3_pse+0x26>
    1304:	9f 5f       	subi	r25, 0xFF	; 255
    1306:	5f 4f       	sbci	r21, 0xFF	; 255
    1308:	22 0f       	add	r18, r18
    130a:	33 1f       	adc	r19, r19
    130c:	44 1f       	adc	r20, r20
    130e:	aa 1f       	adc	r26, r26
    1310:	a9 f3       	breq	.-22     	; 0x12fc <__divsf3_pse+0x10>
    1312:	35 d0       	rcall	.+106    	; 0x137e <__divsf3_pse+0x92>
    1314:	0e 2e       	mov	r0, r30
    1316:	3a f0       	brmi	.+14     	; 0x1326 <__divsf3_pse+0x3a>
    1318:	e0 e8       	ldi	r30, 0x80	; 128
    131a:	32 d0       	rcall	.+100    	; 0x1380 <__divsf3_pse+0x94>
    131c:	91 50       	subi	r25, 0x01	; 1
    131e:	50 40       	sbci	r21, 0x00	; 0
    1320:	e6 95       	lsr	r30
    1322:	00 1c       	adc	r0, r0
    1324:	ca f7       	brpl	.-14     	; 0x1318 <__divsf3_pse+0x2c>
    1326:	2b d0       	rcall	.+86     	; 0x137e <__divsf3_pse+0x92>
    1328:	fe 2f       	mov	r31, r30
    132a:	29 d0       	rcall	.+82     	; 0x137e <__divsf3_pse+0x92>
    132c:	66 0f       	add	r22, r22
    132e:	77 1f       	adc	r23, r23
    1330:	88 1f       	adc	r24, r24
    1332:	bb 1f       	adc	r27, r27
    1334:	26 17       	cp	r18, r22
    1336:	37 07       	cpc	r19, r23
    1338:	48 07       	cpc	r20, r24
    133a:	ab 07       	cpc	r26, r27
    133c:	b0 e8       	ldi	r27, 0x80	; 128
    133e:	09 f0       	breq	.+2      	; 0x1342 <__divsf3_pse+0x56>
    1340:	bb 0b       	sbc	r27, r27
    1342:	80 2d       	mov	r24, r0
    1344:	bf 01       	movw	r22, r30
    1346:	ff 27       	eor	r31, r31
    1348:	93 58       	subi	r25, 0x83	; 131
    134a:	5f 4f       	sbci	r21, 0xFF	; 255
    134c:	3a f0       	brmi	.+14     	; 0x135c <__divsf3_pse+0x70>
    134e:	9e 3f       	cpi	r25, 0xFE	; 254
    1350:	51 05       	cpc	r21, r1
    1352:	78 f0       	brcs	.+30     	; 0x1372 <__divsf3_pse+0x86>
    1354:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_inf>
    1358:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_szero>
    135c:	5f 3f       	cpi	r21, 0xFF	; 255
    135e:	e4 f3       	brlt	.-8      	; 0x1358 <__divsf3_pse+0x6c>
    1360:	98 3e       	cpi	r25, 0xE8	; 232
    1362:	d4 f3       	brlt	.-12     	; 0x1358 <__divsf3_pse+0x6c>
    1364:	86 95       	lsr	r24
    1366:	77 95       	ror	r23
    1368:	67 95       	ror	r22
    136a:	b7 95       	ror	r27
    136c:	f7 95       	ror	r31
    136e:	9f 5f       	subi	r25, 0xFF	; 255
    1370:	c9 f7       	brne	.-14     	; 0x1364 <__divsf3_pse+0x78>
    1372:	88 0f       	add	r24, r24
    1374:	91 1d       	adc	r25, r1
    1376:	96 95       	lsr	r25
    1378:	87 95       	ror	r24
    137a:	97 f9       	bld	r25, 7
    137c:	08 95       	ret
    137e:	e1 e0       	ldi	r30, 0x01	; 1
    1380:	66 0f       	add	r22, r22
    1382:	77 1f       	adc	r23, r23
    1384:	88 1f       	adc	r24, r24
    1386:	bb 1f       	adc	r27, r27
    1388:	62 17       	cp	r22, r18
    138a:	73 07       	cpc	r23, r19
    138c:	84 07       	cpc	r24, r20
    138e:	ba 07       	cpc	r27, r26
    1390:	20 f0       	brcs	.+8      	; 0x139a <__divsf3_pse+0xae>
    1392:	62 1b       	sub	r22, r18
    1394:	73 0b       	sbc	r23, r19
    1396:	84 0b       	sbc	r24, r20
    1398:	ba 0b       	sbc	r27, r26
    139a:	ee 1f       	adc	r30, r30
    139c:	88 f7       	brcc	.-30     	; 0x1380 <__divsf3_pse+0x94>
    139e:	e0 95       	com	r30
    13a0:	08 95       	ret

000013a2 <__fp_mpack>:
    13a2:	9f 3f       	cpi	r25, 0xFF	; 255
    13a4:	31 f0       	breq	.+12     	; 0x13b2 <__fp_mpack_finite+0xc>

000013a6 <__fp_mpack_finite>:
    13a6:	91 50       	subi	r25, 0x01	; 1
    13a8:	20 f4       	brcc	.+8      	; 0x13b2 <__fp_mpack_finite+0xc>
    13aa:	87 95       	ror	r24
    13ac:	77 95       	ror	r23
    13ae:	67 95       	ror	r22
    13b0:	b7 95       	ror	r27
    13b2:	88 0f       	add	r24, r24
    13b4:	91 1d       	adc	r25, r1
    13b6:	96 95       	lsr	r25
    13b8:	87 95       	ror	r24
    13ba:	97 f9       	bld	r25, 7
    13bc:	08 95       	ret

000013be <__udivmodqi4>:
    13be:	99 1b       	sub	r25, r25
    13c0:	79 e0       	ldi	r23, 0x09	; 9
    13c2:	04 c0       	rjmp	.+8      	; 0x13cc <__udivmodqi4_ep>

000013c4 <__udivmodqi4_loop>:
    13c4:	99 1f       	adc	r25, r25
    13c6:	96 17       	cp	r25, r22
    13c8:	08 f0       	brcs	.+2      	; 0x13cc <__udivmodqi4_ep>
    13ca:	96 1b       	sub	r25, r22

000013cc <__udivmodqi4_ep>:
    13cc:	88 1f       	adc	r24, r24
    13ce:	7a 95       	dec	r23
    13d0:	c9 f7       	brne	.-14     	; 0x13c4 <__udivmodqi4_loop>
    13d2:	80 95       	com	r24
    13d4:	08 95       	ret

000013d6 <__divmodhi4>:
    13d6:	97 fb       	bst	r25, 7
    13d8:	07 2e       	mov	r0, r23
    13da:	16 f4       	brtc	.+4      	; 0x13e0 <__divmodhi4+0xa>
    13dc:	00 94       	com	r0
    13de:	07 d0       	rcall	.+14     	; 0x13ee <__divmodhi4_neg1>
    13e0:	77 fd       	sbrc	r23, 7
    13e2:	09 d0       	rcall	.+18     	; 0x13f6 <__divmodhi4_neg2>
    13e4:	0e 94 05 0a 	call	0x140a	; 0x140a <__udivmodhi4>
    13e8:	07 fc       	sbrc	r0, 7
    13ea:	05 d0       	rcall	.+10     	; 0x13f6 <__divmodhi4_neg2>
    13ec:	3e f4       	brtc	.+14     	; 0x13fc <__divmodhi4_exit>

000013ee <__divmodhi4_neg1>:
    13ee:	90 95       	com	r25
    13f0:	81 95       	neg	r24
    13f2:	9f 4f       	sbci	r25, 0xFF	; 255
    13f4:	08 95       	ret

000013f6 <__divmodhi4_neg2>:
    13f6:	70 95       	com	r23
    13f8:	61 95       	neg	r22
    13fa:	7f 4f       	sbci	r23, 0xFF	; 255

000013fc <__divmodhi4_exit>:
    13fc:	08 95       	ret

000013fe <__tablejump2__>:
    13fe:	ee 0f       	add	r30, r30
    1400:	ff 1f       	adc	r31, r31
    1402:	05 90       	lpm	r0, Z+
    1404:	f4 91       	lpm	r31, Z
    1406:	e0 2d       	mov	r30, r0
    1408:	09 94       	ijmp

0000140a <__udivmodhi4>:
    140a:	aa 1b       	sub	r26, r26
    140c:	bb 1b       	sub	r27, r27
    140e:	51 e1       	ldi	r21, 0x11	; 17
    1410:	07 c0       	rjmp	.+14     	; 0x1420 <__udivmodhi4_ep>

00001412 <__udivmodhi4_loop>:
    1412:	aa 1f       	adc	r26, r26
    1414:	bb 1f       	adc	r27, r27
    1416:	a6 17       	cp	r26, r22
    1418:	b7 07       	cpc	r27, r23
    141a:	10 f0       	brcs	.+4      	; 0x1420 <__udivmodhi4_ep>
    141c:	a6 1b       	sub	r26, r22
    141e:	b7 0b       	sbc	r27, r23

00001420 <__udivmodhi4_ep>:
    1420:	88 1f       	adc	r24, r24
    1422:	99 1f       	adc	r25, r25
    1424:	5a 95       	dec	r21
    1426:	a9 f7       	brne	.-22     	; 0x1412 <__udivmodhi4_loop>
    1428:	80 95       	com	r24
    142a:	90 95       	com	r25
    142c:	bc 01       	movw	r22, r24
    142e:	cd 01       	movw	r24, r26
    1430:	08 95       	ret

00001432 <__itoa_ncheck>:
    1432:	bb 27       	eor	r27, r27
    1434:	4a 30       	cpi	r20, 0x0A	; 10
    1436:	31 f4       	brne	.+12     	; 0x1444 <__itoa_ncheck+0x12>
    1438:	99 23       	and	r25, r25
    143a:	22 f4       	brpl	.+8      	; 0x1444 <__itoa_ncheck+0x12>
    143c:	bd e2       	ldi	r27, 0x2D	; 45
    143e:	90 95       	com	r25
    1440:	81 95       	neg	r24
    1442:	9f 4f       	sbci	r25, 0xFF	; 255
    1444:	0c 94 25 0a 	jmp	0x144a	; 0x144a <__utoa_common>

00001448 <__utoa_ncheck>:
    1448:	bb 27       	eor	r27, r27

0000144a <__utoa_common>:
    144a:	fb 01       	movw	r30, r22
    144c:	55 27       	eor	r21, r21
    144e:	aa 27       	eor	r26, r26
    1450:	88 0f       	add	r24, r24
    1452:	99 1f       	adc	r25, r25
    1454:	aa 1f       	adc	r26, r26
    1456:	a4 17       	cp	r26, r20
    1458:	10 f0       	brcs	.+4      	; 0x145e <__utoa_common+0x14>
    145a:	a4 1b       	sub	r26, r20
    145c:	83 95       	inc	r24
    145e:	50 51       	subi	r21, 0x10	; 16
    1460:	b9 f7       	brne	.-18     	; 0x1450 <__utoa_common+0x6>
    1462:	a0 5d       	subi	r26, 0xD0	; 208
    1464:	aa 33       	cpi	r26, 0x3A	; 58
    1466:	08 f0       	brcs	.+2      	; 0x146a <__utoa_common+0x20>
    1468:	a9 5d       	subi	r26, 0xD9	; 217
    146a:	a1 93       	st	Z+, r26
    146c:	00 97       	sbiw	r24, 0x00	; 0
    146e:	79 f7       	brne	.-34     	; 0x144e <__utoa_common+0x4>
    1470:	b1 11       	cpse	r27, r1
    1472:	b1 93       	st	Z+, r27
    1474:	11 92       	st	Z+, r1
    1476:	cb 01       	movw	r24, r22
    1478:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <strrev>

0000147c <strrev>:
    147c:	dc 01       	movw	r26, r24
    147e:	fc 01       	movw	r30, r24
    1480:	67 2f       	mov	r22, r23
    1482:	71 91       	ld	r23, Z+
    1484:	77 23       	and	r23, r23
    1486:	e1 f7       	brne	.-8      	; 0x1480 <strrev+0x4>
    1488:	32 97       	sbiw	r30, 0x02	; 2
    148a:	04 c0       	rjmp	.+8      	; 0x1494 <strrev+0x18>
    148c:	7c 91       	ld	r23, X
    148e:	6d 93       	st	X+, r22
    1490:	70 83       	st	Z, r23
    1492:	62 91       	ld	r22, -Z
    1494:	ae 17       	cp	r26, r30
    1496:	bf 07       	cpc	r27, r31
    1498:	c8 f3       	brcs	.-14     	; 0x148c <strrev+0x10>
    149a:	08 95       	ret

0000149c <_exit>:
    149c:	f8 94       	cli

0000149e <__stop_program>:
    149e:	ff cf       	rjmp	.-2      	; 0x149e <__stop_program>
