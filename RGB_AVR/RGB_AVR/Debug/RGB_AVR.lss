
RGB_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e2  00800100  0000161a  000016ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000161a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  008001e2  008001e2  00001790  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001790  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001800  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001da5  00000000  00000000  00001918  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000093c  00000000  00000000  000036bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e60  00000000  00000000  00003ff9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  00004e5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007dc  00000000  00000000  0000517c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011ca  00000000  00000000  00005958  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00006b22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__ctors_end>
       4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
       8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
       c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      10:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      14:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      18:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      1c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      20:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      24:	0c 94 94 02 	jmp	0x528	; 0x528 <__vector_9>
      28:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      2c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      30:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      34:	0c 94 a4 02 	jmp	0x548	; 0x548 <__vector_13>
      38:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      3c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      40:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      44:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      48:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      4c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      50:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      54:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      58:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      5c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      60:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      64:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
      68:	56 01       	movw	r10, r12
      6a:	70 01       	movw	r14, r0
      6c:	70 01       	movw	r14, r0
      6e:	70 01       	movw	r14, r0
      70:	54 01       	movw	r10, r8
      72:	70 01       	movw	r14, r0
      74:	72 01       	movw	r14, r4
      76:	52 01       	movw	r10, r4
      78:	70 01       	movw	r14, r0
      7a:	70 01       	movw	r14, r0
      7c:	70 01       	movw	r14, r0
      7e:	70 01       	movw	r14, r0
      80:	70 01       	movw	r14, r0
      82:	70 01       	movw	r14, r0
      84:	70 01       	movw	r14, r0
      86:	70 01       	movw	r14, r0
      88:	70 01       	movw	r14, r0
      8a:	70 01       	movw	r14, r0
      8c:	70 01       	movw	r14, r0
      8e:	70 01       	movw	r14, r0
      90:	70 01       	movw	r14, r0
      92:	70 01       	movw	r14, r0
      94:	70 01       	movw	r14, r0
      96:	70 01       	movw	r14, r0
      98:	70 01       	movw	r14, r0
      9a:	70 01       	movw	r14, r0
      9c:	70 01       	movw	r14, r0
      9e:	70 01       	movw	r14, r0
      a0:	70 01       	movw	r14, r0
      a2:	70 01       	movw	r14, r0
      a4:	70 01       	movw	r14, r0
      a6:	70 01       	movw	r14, r0
      a8:	70 01       	movw	r14, r0
      aa:	70 01       	movw	r14, r0
      ac:	70 01       	movw	r14, r0
      ae:	70 01       	movw	r14, r0
      b0:	70 01       	movw	r14, r0
      b2:	70 01       	movw	r14, r0
      b4:	70 01       	movw	r14, r0
      b6:	70 01       	movw	r14, r0
      b8:	70 01       	movw	r14, r0
      ba:	70 01       	movw	r14, r0
      bc:	70 01       	movw	r14, r0
      be:	70 01       	movw	r14, r0
      c0:	70 01       	movw	r14, r0
      c2:	70 01       	movw	r14, r0
      c4:	70 01       	movw	r14, r0
      c6:	70 01       	movw	r14, r0
      c8:	70 01       	movw	r14, r0
      ca:	70 01       	movw	r14, r0
      cc:	70 01       	movw	r14, r0
      ce:	70 01       	movw	r14, r0
      d0:	70 01       	movw	r14, r0
      d2:	70 01       	movw	r14, r0
      d4:	70 01       	movw	r14, r0
      d6:	70 01       	movw	r14, r0
      d8:	70 01       	movw	r14, r0
      da:	70 01       	movw	r14, r0
      dc:	70 01       	movw	r14, r0
      de:	70 01       	movw	r14, r0
      e0:	70 01       	movw	r14, r0
      e2:	70 01       	movw	r14, r0
      e4:	70 01       	movw	r14, r0
      e6:	70 01       	movw	r14, r0
      e8:	5e 01       	movw	r10, r28
      ea:	70 01       	movw	r14, r0
      ec:	70 01       	movw	r14, r0
      ee:	70 01       	movw	r14, r0
      f0:	5c 01       	movw	r10, r24
      f2:	70 01       	movw	r14, r0
      f4:	5a 01       	movw	r10, r20
      f6:	58 01       	movw	r10, r16
      f8:	70 01       	movw	r14, r0
      fa:	70 01       	movw	r14, r0
      fc:	70 01       	movw	r14, r0
      fe:	70 01       	movw	r14, r0
     100:	70 01       	movw	r14, r0
     102:	70 01       	movw	r14, r0
     104:	70 01       	movw	r14, r0
     106:	70 01       	movw	r14, r0
     108:	70 01       	movw	r14, r0
     10a:	70 01       	movw	r14, r0
     10c:	70 01       	movw	r14, r0
     10e:	70 01       	movw	r14, r0
     110:	70 01       	movw	r14, r0
     112:	70 01       	movw	r14, r0
     114:	70 01       	movw	r14, r0
     116:	70 01       	movw	r14, r0
     118:	70 01       	movw	r14, r0
     11a:	70 01       	movw	r14, r0
     11c:	70 01       	movw	r14, r0
     11e:	70 01       	movw	r14, r0
     120:	70 01       	movw	r14, r0
     122:	70 01       	movw	r14, r0
     124:	70 01       	movw	r14, r0
     126:	70 01       	movw	r14, r0
     128:	66 01       	movw	r12, r12
     12a:	70 01       	movw	r14, r0
     12c:	70 01       	movw	r14, r0
     12e:	70 01       	movw	r14, r0
     130:	64 01       	movw	r12, r8
     132:	70 01       	movw	r14, r0
     134:	62 01       	movw	r12, r4
     136:	60 01       	movw	r12, r0
     138:	70 01       	movw	r14, r0
     13a:	70 01       	movw	r14, r0
     13c:	70 01       	movw	r14, r0
     13e:	70 01       	movw	r14, r0
     140:	70 01       	movw	r14, r0
     142:	70 01       	movw	r14, r0
     144:	70 01       	movw	r14, r0
     146:	70 01       	movw	r14, r0
     148:	6e 01       	movw	r12, r28
     14a:	70 01       	movw	r14, r0
     14c:	70 01       	movw	r14, r0
     14e:	70 01       	movw	r14, r0
     150:	6c 01       	movw	r12, r24
     152:	70 01       	movw	r14, r0
     154:	6a 01       	movw	r12, r20
     156:	68 01       	movw	r12, r16
     158:	07 63       	ori	r16, 0x37	; 55
     15a:	42 36       	cpi	r20, 0x62	; 98
     15c:	b7 9b       	sbis	0x16, 7	; 22
     15e:	d8 a7       	std	Y+40, r29	; 0x28
     160:	1a 39       	cpi	r17, 0x9A	; 154
     162:	68 56       	subi	r22, 0x68	; 104
     164:	18 ae       	std	Y+56, r1	; 0x38
     166:	ba ab       	std	Y+50, r27	; 0x32
     168:	55 8c       	ldd	r5, Z+29	; 0x1d
     16a:	1d 3c       	cpi	r17, 0xCD	; 205
     16c:	b7 cc       	rjmp	.-1682   	; 0xfffffadc <__eeprom_end+0xff7efadc>
     16e:	57 63       	ori	r21, 0x37	; 55
     170:	bd 6d       	ori	r27, 0xDD	; 221
     172:	ed fd       	.word	0xfded	; ????
     174:	75 3e       	cpi	r23, 0xE5	; 229
     176:	f6 17       	cp	r31, r22
     178:	72 31       	cpi	r23, 0x12	; 18
     17a:	bf 00       	.word	0x00bf	; ????
     17c:	00 00       	nop
     17e:	80 3f       	cpi	r24, 0xF0	; 240
     180:	08 00       	.word	0x0008	; ????
     182:	00 00       	nop
     184:	be 92       	st	-X, r11
     186:	24 49       	sbci	r18, 0x94	; 148
     188:	12 3e       	cpi	r17, 0xE2	; 226
     18a:	ab aa       	std	Y+51, r10	; 0x33
     18c:	aa 2a       	or	r10, r26
     18e:	be cd       	rjmp	.-1156   	; 0xfffffd0c <__eeprom_end+0xff7efd0c>
     190:	cc cc       	rjmp	.-1640   	; 0xfffffb2a <__eeprom_end+0xff7efb2a>
     192:	4c 3e       	cpi	r20, 0xEC	; 236
     194:	00 00       	nop
     196:	00 80       	ld	r0, Z
     198:	be ab       	std	Y+54, r27	; 0x36
     19a:	aa aa       	std	Y+50, r10	; 0x32
     19c:	aa 3e       	cpi	r26, 0xEA	; 234
     19e:	00 00       	nop
     1a0:	00 00       	nop
     1a2:	bf 00       	.word	0x00bf	; ????
     1a4:	00 00       	nop
     1a6:	80 3f       	cpi	r24, 0xF0	; 240
     1a8:	00 00       	nop
     1aa:	00 00       	nop
     1ac:	00 08       	sbc	r0, r0
     1ae:	41 78       	andi	r20, 0x81	; 129
     1b0:	d3 bb       	out	0x13, r29	; 19
     1b2:	43 87       	std	Z+11, r20	; 0x0b
     1b4:	d1 13       	cpse	r29, r17
     1b6:	3d 19       	sub	r19, r13
     1b8:	0e 3c       	cpi	r16, 0xCE	; 206
     1ba:	c3 bd       	out	0x23, r28	; 35
     1bc:	42 82       	std	Z+2, r4	; 0x02
     1be:	ad 2b       	or	r26, r29
     1c0:	3e 68       	ori	r19, 0x8E	; 142
     1c2:	ec 82       	std	Y+4, r14	; 0x04
     1c4:	76 be       	out	0x36, r7	; 54
     1c6:	d9 8f       	std	Y+25, r29	; 0x19
     1c8:	e1 a9       	ldd	r30, Z+49	; 0x31
     1ca:	3e 4c       	sbci	r19, 0xCE	; 206
     1cc:	80 ef       	ldi	r24, 0xF0	; 240
     1ce:	ff be       	out	0x3f, r15	; 63
     1d0:	01 c4       	rjmp	.+2050   	; 0x9d4 <_Z6senscev+0x56>
     1d2:	ff 7f       	andi	r31, 0xFF	; 255
     1d4:	3f 00       	.word	0x003f	; ????
     1d6:	00 00       	nop
	...

000001da <__ctors_end>:
     1da:	11 24       	eor	r1, r1
     1dc:	1f be       	out	0x3f, r1	; 63
     1de:	cf ef       	ldi	r28, 0xFF	; 255
     1e0:	d8 e0       	ldi	r29, 0x08	; 8
     1e2:	de bf       	out	0x3e, r29	; 62
     1e4:	cd bf       	out	0x3d, r28	; 61

000001e6 <__do_copy_data>:
     1e6:	11 e0       	ldi	r17, 0x01	; 1
     1e8:	a0 e0       	ldi	r26, 0x00	; 0
     1ea:	b1 e0       	ldi	r27, 0x01	; 1
     1ec:	ea e1       	ldi	r30, 0x1A	; 26
     1ee:	f6 e1       	ldi	r31, 0x16	; 22
     1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <__do_copy_data+0x10>
     1f2:	05 90       	lpm	r0, Z+
     1f4:	0d 92       	st	X+, r0
     1f6:	a2 3e       	cpi	r26, 0xE2	; 226
     1f8:	b1 07       	cpc	r27, r17
     1fa:	d9 f7       	brne	.-10     	; 0x1f2 <__do_copy_data+0xc>

000001fc <__do_clear_bss>:
     1fc:	21 e0       	ldi	r18, 0x01	; 1
     1fe:	a2 ee       	ldi	r26, 0xE2	; 226
     200:	b1 e0       	ldi	r27, 0x01	; 1
     202:	01 c0       	rjmp	.+2      	; 0x206 <.do_clear_bss_start>

00000204 <.do_clear_bss_loop>:
     204:	1d 92       	st	X+, r1

00000206 <.do_clear_bss_start>:
     206:	a3 3f       	cpi	r26, 0xF3	; 243
     208:	b2 07       	cpc	r27, r18
     20a:	e1 f7       	brne	.-8      	; 0x204 <.do_clear_bss_loop>
     20c:	0e 94 03 06 	call	0xc06	; 0xc06 <main>
     210:	0c 94 0b 0b 	jmp	0x1616	; 0x1616 <_exit>

00000214 <__bad_interrupt>:
     214:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000218 <_Z24KEYPAD_WaitForKeyReleasev>:
		}
	
	}	
	return 0;
		
}
     218:	8f e0       	ldi	r24, 0x0F	; 15
     21a:	8b b9       	out	0x0b, r24	; 11
     21c:	89 b1       	in	r24, 0x09	; 9
     21e:	8f 70       	andi	r24, 0x0F	; 15
     220:	8f 30       	cpi	r24, 0x0F	; 15
     222:	d1 f7       	brne	.-12     	; 0x218 <_Z24KEYPAD_WaitForKeyReleasev>
     224:	08 95       	ret

00000226 <_Z22KEYPAD_WaitForKeyPressv>:
     226:	8f e0       	ldi	r24, 0x0F	; 15
     228:	8b b9       	out	0x0b, r24	; 11
     22a:	89 b1       	in	r24, 0x09	; 9
     22c:	8f 70       	andi	r24, 0x0F	; 15
     22e:	8f 30       	cpi	r24, 0x0F	; 15
     230:	d1 f3       	breq	.-12     	; 0x226 <_Z22KEYPAD_WaitForKeyPressv>
     232:	8f ec       	ldi	r24, 0xCF	; 207
     234:	97 e0       	ldi	r25, 0x07	; 7
     236:	01 97       	sbiw	r24, 0x01	; 1
     238:	f1 f7       	brne	.-4      	; 0x236 <_Z22KEYPAD_WaitForKeyPressv+0x10>
     23a:	00 c0       	rjmp	.+0      	; 0x23c <_Z22KEYPAD_WaitForKeyPressv+0x16>
     23c:	00 00       	nop
     23e:	8f e0       	ldi	r24, 0x0F	; 15
     240:	8b b9       	out	0x0b, r24	; 11
     242:	89 b1       	in	r24, 0x09	; 9
     244:	8f 70       	andi	r24, 0x0F	; 15
     246:	8f 30       	cpi	r24, 0x0F	; 15
     248:	71 f3       	breq	.-36     	; 0x226 <_Z22KEYPAD_WaitForKeyPressv>
     24a:	08 95       	ret

0000024c <_Z14KEYPAD_ScanKeyv>:
     24c:	20 e0       	ldi	r18, 0x00	; 0
     24e:	90 ee       	ldi	r25, 0xE0	; 224
     250:	24 30       	cpi	r18, 0x04	; 4
     252:	58 f4       	brcc	.+22     	; 0x26a <_Z14KEYPAD_ScanKeyv+0x1e>
     254:	8f e0       	ldi	r24, 0x0F	; 15
     256:	89 0f       	add	r24, r25
     258:	8b b9       	out	0x0b, r24	; 11
     25a:	89 b1       	in	r24, 0x09	; 9
     25c:	8f 70       	andi	r24, 0x0F	; 15
     25e:	8f 30       	cpi	r24, 0x0F	; 15
     260:	21 f4       	brne	.+8      	; 0x26a <_Z14KEYPAD_ScanKeyv+0x1e>
     262:	99 0f       	add	r25, r25
     264:	90 5f       	subi	r25, 0xF0	; 240
     266:	2f 5f       	subi	r18, 0xFF	; 255
     268:	f3 cf       	rjmp	.-26     	; 0x250 <_Z14KEYPAD_ScanKeyv+0x4>
     26a:	90 7f       	andi	r25, 0xF0	; 240
     26c:	89 0f       	add	r24, r25
     26e:	08 95       	ret

00000270 <_Z11KEYPAD_Initv>:
     270:	80 ef       	ldi	r24, 0xF0	; 240
     272:	8a b9       	out	0x0a, r24	; 10
     274:	08 95       	ret

00000276 <_Z13KEYPAD_GetKeyv>:
     276:	0e 94 0c 01 	call	0x218	; 0x218 <_Z24KEYPAD_WaitForKeyReleasev>
     27a:	8f e3       	ldi	r24, 0x3F	; 63
     27c:	9c e9       	ldi	r25, 0x9C	; 156
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	f1 f7       	brne	.-4      	; 0x27e <_Z13KEYPAD_GetKeyv+0x8>
     282:	00 c0       	rjmp	.+0      	; 0x284 <_Z13KEYPAD_GetKeyv+0xe>
     284:	00 00       	nop
     286:	0e 94 13 01 	call	0x226	; 0x226 <_Z22KEYPAD_WaitForKeyPressv>
     28a:	0e 94 26 01 	call	0x24c	; 0x24c <_Z14KEYPAD_ScanKeyv>
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	fc 01       	movw	r30, r24
     292:	e7 57       	subi	r30, 0x77	; 119
     294:	f1 09       	sbc	r31, r1
     296:	e8 37       	cpi	r30, 0x78	; 120
     298:	f1 05       	cpc	r31, r1
     29a:	10 f5       	brcc	.+68     	; 0x2e0 <_Z13KEYPAD_GetKeyv+0x6a>
     29c:	ec 5c       	subi	r30, 0xCC	; 204
     29e:	ff 4f       	sbci	r31, 0xFF	; 255
     2a0:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <__tablejump2__>
     2a4:	87 e0       	ldi	r24, 0x07	; 7
     2a6:	08 95       	ret
     2a8:	89 e0       	ldi	r24, 0x09	; 9
     2aa:	08 95       	ret
     2ac:	81 e4       	ldi	r24, 0x41	; 65
     2ae:	08 95       	ret
     2b0:	84 e0       	ldi	r24, 0x04	; 4
     2b2:	08 95       	ret
     2b4:	85 e0       	ldi	r24, 0x05	; 5
     2b6:	08 95       	ret
     2b8:	86 e0       	ldi	r24, 0x06	; 6
     2ba:	08 95       	ret
     2bc:	82 e4       	ldi	r24, 0x42	; 66
     2be:	08 95       	ret
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	08 95       	ret
     2c4:	82 e0       	ldi	r24, 0x02	; 2
     2c6:	08 95       	ret
     2c8:	83 e0       	ldi	r24, 0x03	; 3
     2ca:	08 95       	ret
     2cc:	83 e4       	ldi	r24, 0x43	; 67
     2ce:	08 95       	ret
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	08 95       	ret
     2d4:	86 e4       	ldi	r24, 0x46	; 70
     2d6:	08 95       	ret
     2d8:	85 e4       	ldi	r24, 0x45	; 69
     2da:	08 95       	ret
     2dc:	84 e4       	ldi	r24, 0x44	; 68
     2de:	08 95       	ret
     2e0:	88 e4       	ldi	r24, 0x48	; 72
     2e2:	08 95       	ret
     2e4:	88 e0       	ldi	r24, 0x08	; 8
     2e6:	08 95       	ret

000002e8 <_Z9I2C_Startv>:
     2e8:	84 ea       	ldi	r24, 0xA4	; 164
     2ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2ee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2f2:	88 23       	and	r24, r24
     2f4:	e4 f7       	brge	.-8      	; 0x2ee <_Z9I2C_Startv+0x6>
     2f6:	08 95       	ret

000002f8 <_Z8I2C_Stopv>:
     2f8:	84 e9       	ldi	r24, 0x94	; 148
     2fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2fe:	8a e1       	ldi	r24, 0x1A	; 26
     300:	8a 95       	dec	r24
     302:	f1 f7       	brne	.-4      	; 0x300 <_Z8I2C_Stopv+0x8>
     304:	00 c0       	rjmp	.+0      	; 0x306 <_Z8I2C_Stopv+0xe>
     306:	08 95       	ret

00000308 <_Z9I2C_Writeh>:
     308:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     30c:	84 e8       	ldi	r24, 0x84	; 132
     30e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     312:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     316:	88 23       	and	r24, r24
     318:	e4 f7       	brge	.-8      	; 0x312 <_Z9I2C_Writeh+0xa>
     31a:	08 95       	ret

0000031c <_Z8I2C_Initv>:
     31c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     320:	86 e4       	ldi	r24, 0x46	; 70
     322:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     326:	84 e0       	ldi	r24, 0x04	; 4
     328:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     32c:	08 95       	ret

0000032e <_Z12LCD_CmdWritec>:
     32e:	98 2f       	mov	r25, r24
     330:	90 7f       	andi	r25, 0xF0	; 240
     332:	95 b9       	out	0x05, r25	; 5
     334:	98 b1       	in	r25, 0x08	; 8
     336:	9d 7f       	andi	r25, 0xFD	; 253
     338:	98 b9       	out	0x08, r25	; 8
     33a:	98 b1       	in	r25, 0x08	; 8
     33c:	94 60       	ori	r25, 0x04	; 4
     33e:	98 b9       	out	0x08, r25	; 8
     340:	22 e0       	ldi	r18, 0x02	; 2
     342:	2a 95       	dec	r18
     344:	f1 f7       	brne	.-4      	; 0x342 <_Z12LCD_CmdWritec+0x14>
     346:	00 c0       	rjmp	.+0      	; 0x348 <_Z12LCD_CmdWritec+0x1a>
     348:	98 b1       	in	r25, 0x08	; 8
     34a:	9b 7f       	andi	r25, 0xFB	; 251
     34c:	98 b9       	out	0x08, r25	; 8
     34e:	9a e1       	ldi	r25, 0x1A	; 26
     350:	9a 95       	dec	r25
     352:	f1 f7       	brne	.-4      	; 0x350 <_Z12LCD_CmdWritec+0x22>
     354:	00 c0       	rjmp	.+0      	; 0x356 <_Z12LCD_CmdWritec+0x28>
     356:	20 e1       	ldi	r18, 0x10	; 16
     358:	82 9f       	mul	r24, r18
     35a:	c0 01       	movw	r24, r0
     35c:	11 24       	eor	r1, r1
     35e:	85 b9       	out	0x05, r24	; 5
     360:	88 b1       	in	r24, 0x08	; 8
     362:	8d 7f       	andi	r24, 0xFD	; 253
     364:	88 b9       	out	0x08, r24	; 8
     366:	88 b1       	in	r24, 0x08	; 8
     368:	84 60       	ori	r24, 0x04	; 4
     36a:	88 b9       	out	0x08, r24	; 8
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	8a 95       	dec	r24
     370:	f1 f7       	brne	.-4      	; 0x36e <_Z12LCD_CmdWritec+0x40>
     372:	00 c0       	rjmp	.+0      	; 0x374 <_Z12LCD_CmdWritec+0x46>
     374:	88 b1       	in	r24, 0x08	; 8
     376:	8b 7f       	andi	r24, 0xFB	; 251
     378:	88 b9       	out	0x08, r24	; 8
     37a:	8f ec       	ldi	r24, 0xCF	; 207
     37c:	97 e0       	ldi	r25, 0x07	; 7
     37e:	01 97       	sbiw	r24, 0x01	; 1
     380:	f1 f7       	brne	.-4      	; 0x37e <_Z12LCD_CmdWritec+0x50>
     382:	00 c0       	rjmp	.+0      	; 0x384 <_Z12LCD_CmdWritec+0x56>
     384:	00 00       	nop
     386:	08 95       	ret

00000388 <_Z13LCD_DataWritec>:
     388:	98 2f       	mov	r25, r24
     38a:	90 7f       	andi	r25, 0xF0	; 240
     38c:	95 b9       	out	0x05, r25	; 5
     38e:	98 b1       	in	r25, 0x08	; 8
     390:	92 60       	ori	r25, 0x02	; 2
     392:	98 b9       	out	0x08, r25	; 8
     394:	98 b1       	in	r25, 0x08	; 8
     396:	94 60       	ori	r25, 0x04	; 4
     398:	98 b9       	out	0x08, r25	; 8
     39a:	22 e0       	ldi	r18, 0x02	; 2
     39c:	2a 95       	dec	r18
     39e:	f1 f7       	brne	.-4      	; 0x39c <_Z13LCD_DataWritec+0x14>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <_Z13LCD_DataWritec+0x1a>
     3a2:	98 b1       	in	r25, 0x08	; 8
     3a4:	9b 7f       	andi	r25, 0xFB	; 251
     3a6:	98 b9       	out	0x08, r25	; 8
     3a8:	9a e1       	ldi	r25, 0x1A	; 26
     3aa:	9a 95       	dec	r25
     3ac:	f1 f7       	brne	.-4      	; 0x3aa <_Z13LCD_DataWritec+0x22>
     3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <_Z13LCD_DataWritec+0x28>
     3b0:	20 e1       	ldi	r18, 0x10	; 16
     3b2:	82 9f       	mul	r24, r18
     3b4:	c0 01       	movw	r24, r0
     3b6:	11 24       	eor	r1, r1
     3b8:	85 b9       	out	0x05, r24	; 5
     3ba:	88 b1       	in	r24, 0x08	; 8
     3bc:	82 60       	ori	r24, 0x02	; 2
     3be:	88 b9       	out	0x08, r24	; 8
     3c0:	88 b1       	in	r24, 0x08	; 8
     3c2:	84 60       	ori	r24, 0x04	; 4
     3c4:	88 b9       	out	0x08, r24	; 8
     3c6:	82 e0       	ldi	r24, 0x02	; 2
     3c8:	8a 95       	dec	r24
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <_Z13LCD_DataWritec+0x40>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <_Z13LCD_DataWritec+0x46>
     3ce:	88 b1       	in	r24, 0x08	; 8
     3d0:	8b 7f       	andi	r24, 0xFB	; 251
     3d2:	88 b9       	out	0x08, r24	; 8
     3d4:	8f ec       	ldi	r24, 0xCF	; 207
     3d6:	97 e0       	ldi	r25, 0x07	; 7
     3d8:	01 97       	sbiw	r24, 0x01	; 1
     3da:	f1 f7       	brne	.-4      	; 0x3d8 <_Z13LCD_DataWritec+0x50>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <_Z13LCD_DataWritec+0x56>
     3de:	00 00       	nop
     3e0:	08 95       	ret

000003e2 <_Z8LCD_Initv>:
     3e2:	2f e7       	ldi	r18, 0x7F	; 127
     3e4:	88 e3       	ldi	r24, 0x38	; 56
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	21 50       	subi	r18, 0x01	; 1
     3ea:	80 40       	sbci	r24, 0x00	; 0
     3ec:	90 40       	sbci	r25, 0x00	; 0
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <_Z8LCD_Initv+0x6>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <_Z8LCD_Initv+0x10>
     3f2:	00 00       	nop
     3f4:	80 ef       	ldi	r24, 0xF0	; 240
     3f6:	84 b9       	out	0x04, r24	; 4
     3f8:	86 e0       	ldi	r24, 0x06	; 6
     3fa:	87 b9       	out	0x07, r24	; 7
     3fc:	82 e0       	ldi	r24, 0x02	; 2
     3fe:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     402:	88 e2       	ldi	r24, 0x28	; 40
     404:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     408:	8c e0       	ldi	r24, 0x0C	; 12
     40a:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     40e:	81 e0       	ldi	r24, 0x01	; 1
     410:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     414:	80 e8       	ldi	r24, 0x80	; 128
     416:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     41a:	08 95       	ret

0000041c <_Z9LCD_Clearv>:
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     422:	80 e8       	ldi	r24, 0x80	; 128
     424:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     428:	08 95       	ret

0000042a <_Z17LCD_DisplayStringPc>:
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
     42e:	ec 01       	movw	r28, r24
     430:	88 81       	ld	r24, Y
     432:	88 23       	and	r24, r24
     434:	21 f0       	breq	.+8      	; 0x43e <_Z17LCD_DisplayStringPc+0x14>
     436:	21 96       	adiw	r28, 0x01	; 1
     438:	0e 94 c4 01 	call	0x388	; 0x388 <_Z13LCD_DataWritec>
     43c:	f9 cf       	rjmp	.-14     	; 0x430 <_Z17LCD_DisplayStringPc+0x6>
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	08 95       	ret

00000444 <_Z10LCD_GoToXYcc>:
     444:	81 11       	cpse	r24, r1
     446:	08 c0       	rjmp	.+16     	; 0x458 <_Z10LCD_GoToXYcc+0x14>
     448:	60 31       	cpi	r22, 0x10	; 16
     44a:	30 f4       	brcc	.+12     	; 0x458 <_Z10LCD_GoToXYcc+0x14>
     44c:	86 2f       	mov	r24, r22
     44e:	8f 70       	andi	r24, 0x0F	; 15
     450:	80 68       	ori	r24, 0x80	; 128
     452:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     456:	1d c0       	rjmp	.+58     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     458:	81 30       	cpi	r24, 0x01	; 1
     45a:	41 f4       	brne	.+16     	; 0x46c <_Z10LCD_GoToXYcc+0x28>
     45c:	60 31       	cpi	r22, 0x10	; 16
     45e:	30 f4       	brcc	.+12     	; 0x46c <_Z10LCD_GoToXYcc+0x28>
     460:	86 2f       	mov	r24, r22
     462:	8f 70       	andi	r24, 0x0F	; 15
     464:	80 6c       	ori	r24, 0xC0	; 192
     466:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     46a:	13 c0       	rjmp	.+38     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     46c:	82 30       	cpi	r24, 0x02	; 2
     46e:	41 f4       	brne	.+16     	; 0x480 <_Z10LCD_GoToXYcc+0x3c>
     470:	60 31       	cpi	r22, 0x10	; 16
     472:	30 f4       	brcc	.+12     	; 0x480 <_Z10LCD_GoToXYcc+0x3c>
     474:	86 2f       	mov	r24, r22
     476:	8f 70       	andi	r24, 0x0F	; 15
     478:	80 69       	ori	r24, 0x90	; 144
     47a:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     47e:	09 c0       	rjmp	.+18     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     480:	83 30       	cpi	r24, 0x03	; 3
     482:	39 f4       	brne	.+14     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     484:	60 31       	cpi	r22, 0x10	; 16
     486:	28 f4       	brcc	.+10     	; 0x492 <_Z10LCD_GoToXYcc+0x4e>
     488:	86 2f       	mov	r24, r22
     48a:	8f 70       	andi	r24, 0x0F	; 15
     48c:	80 6d       	ori	r24, 0xD0	; 208
     48e:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     492:	8c e0       	ldi	r24, 0x0C	; 12
     494:	0e 94 97 01 	call	0x32e	; 0x32e <_Z12LCD_CmdWritec>
     498:	08 95       	ret

0000049a <_Z8adc_readh>:
     49a:	87 70       	andi	r24, 0x07	; 7
     49c:	ec e7       	ldi	r30, 0x7C	; 124
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	90 81       	ld	r25, Z
     4a2:	98 7f       	andi	r25, 0xF8	; 248
     4a4:	89 2b       	or	r24, r25
     4a6:	80 83       	st	Z, r24
     4a8:	ea e7       	ldi	r30, 0x7A	; 122
     4aa:	f0 e0       	ldi	r31, 0x00	; 0
     4ac:	80 81       	ld	r24, Z
     4ae:	80 64       	ori	r24, 0x40	; 64
     4b0:	80 83       	st	Z, r24
     4b2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     4b6:	86 fd       	sbrc	r24, 6
     4b8:	fc cf       	rjmp	.-8      	; 0x4b2 <_Z8adc_readh+0x18>
     4ba:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     4be:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     4c2:	08 95       	ret

000004c4 <_Z8adc_initv>:
     4c4:	80 e4       	ldi	r24, 0x40	; 64
     4c6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     4ca:	87 e8       	ldi	r24, 0x87	; 135
     4cc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     4d0:	08 95       	ret

000004d2 <_Z8RGB_initv>:
     4d2:	84 b1       	in	r24, 0x04	; 4
     4d4:	8e 60       	ori	r24, 0x0E	; 14
     4d6:	84 b9       	out	0x04, r24	; 4
     4d8:	83 e8       	ldi	r24, 0x83	; 131
     4da:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>
     4e4:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4e8:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     4ec:	78 94       	sei
     4ee:	97 e0       	ldi	r25, 0x07	; 7
     4f0:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     4f4:	99 ea       	ldi	r25, 0xA9	; 169
     4f6:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
     4fa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
     4fe:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__data_end>
     502:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__data_end+0x1>
     506:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     50a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     50e:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <GREEN>
     512:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <GREEN+0x1>
     516:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     51a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     51e:	78 94       	sei
     520:	85 e0       	ldi	r24, 0x05	; 5
     522:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     526:	08 95       	ret

00000528 <__vector_9>:
     528:	1f 92       	push	r1
     52a:	0f 92       	push	r0
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	0f 92       	push	r0
     530:	11 24       	eor	r1, r1
     532:	8f 93       	push	r24
     534:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     538:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     53c:	8f 91       	pop	r24
     53e:	0f 90       	pop	r0
     540:	0f be       	out	0x3f, r0	; 63
     542:	0f 90       	pop	r0
     544:	1f 90       	pop	r1
     546:	18 95       	reti

00000548 <__vector_13>:
     548:	1f 92       	push	r1
     54a:	0f 92       	push	r0
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	0f 92       	push	r0
     550:	11 24       	eor	r1, r1
     552:	8f 93       	push	r24
     554:	9f 93       	push	r25
     556:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <GREEN>
     55a:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <GREEN+0x1>
     55e:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     562:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     566:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__data_end>
     56a:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__data_end+0x1>
     56e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     572:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     576:	9f 91       	pop	r25
     578:	8f 91       	pop	r24
     57a:	0f 90       	pop	r0
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	0f 90       	pop	r0
     580:	1f 90       	pop	r1
     582:	18 95       	reti

00000584 <_Z15RGBSENCEE_LIGHTv>:
     584:	ec ee       	ldi	r30, 0xEC	; 236
     586:	f1 e0       	ldi	r31, 0x01	; 1
     588:	80 81       	ld	r24, Z
     58a:	91 81       	ldd	r25, Z+1	; 0x01
     58c:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <__data_end+0x1>
     590:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <__data_end>
     594:	82 81       	ldd	r24, Z+2	; 0x02
     596:	93 81       	ldd	r25, Z+3	; 0x03
     598:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <GREEN+0x1>
     59c:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <GREEN>
     5a0:	84 81       	ldd	r24, Z+4	; 0x04
     5a2:	95 81       	ldd	r25, Z+5	; 0x05
     5a4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     5ac:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z8RGB_initv>
     5b0:	08 95       	ret

000005b2 <_Z15RGBUPDATE_LIGHTv>:
     5b2:	e6 ee       	ldi	r30, 0xE6	; 230
     5b4:	f1 e0       	ldi	r31, 0x01	; 1
     5b6:	80 81       	ld	r24, Z
     5b8:	91 81       	ldd	r25, Z+1	; 0x01
     5ba:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <__data_end+0x1>
     5be:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <__data_end>
     5c2:	82 81       	ldd	r24, Z+2	; 0x02
     5c4:	93 81       	ldd	r25, Z+3	; 0x03
     5c6:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <GREEN+0x1>
     5ca:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <GREEN>
     5ce:	84 81       	ldd	r24, Z+4	; 0x04
     5d0:	95 81       	ldd	r25, Z+5	; 0x05
     5d2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     5da:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z8RGB_initv>
     5de:	08 95       	ret

000005e0 <_Z13RGBUPDATE_offv>:
     5e0:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <__data_end+0x1>
     5e4:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <__data_end>
     5e8:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <GREEN+0x1>
     5ec:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <GREEN>
     5f0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5f4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     5f8:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Z8RGB_initv>
     5fc:	08 95       	ret

000005fe <_Z10updateMenuv>:
     5fe:	cf 93       	push	r28
     600:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <posCount>
     604:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <menusize>
     608:	86 17       	cp	r24, r22
     60a:	20 f0       	brcs	.+8      	; 0x614 <_Z10updateMenuv+0x16>
     60c:	0e 94 9c 0a 	call	0x1538	; 0x1538 <__udivmodqi4>
     610:	90 93 f2 01 	sts	0x01F2, r25	; 0x8001f2 <posCount>
     614:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <prev>
     618:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <posCount>
     61c:	98 17       	cp	r25, r24
     61e:	41 f1       	breq	.+80     	; 0x670 <_Z10updateMenuv+0x72>
     620:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
     624:	c0 e0       	ldi	r28, 0x00	; 0
     626:	c4 30       	cpi	r28, 0x04	; 4
     628:	18 f5       	brcc	.+70     	; 0x670 <_Z10updateMenuv+0x72>
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	8c 2f       	mov	r24, r28
     62e:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     632:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <posCount>
     636:	c8 13       	cpse	r28, r24
     638:	11 c0       	rjmp	.+34     	; 0x65c <_Z10updateMenuv+0x5e>
     63a:	20 e1       	ldi	r18, 0x10	; 16
     63c:	c2 9f       	mul	r28, r18
     63e:	c0 01       	movw	r24, r0
     640:	11 24       	eor	r1, r1
     642:	8f 5e       	subi	r24, 0xEF	; 239
     644:	9e 4f       	sbci	r25, 0xFE	; 254
     646:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     64a:	6e e0       	ldi	r22, 0x0E	; 14
     64c:	8c 2f       	mov	r24, r28
     64e:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     652:	8d e9       	ldi	r24, 0x9D	; 157
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     65a:	08 c0       	rjmp	.+16     	; 0x66c <_Z10updateMenuv+0x6e>
     65c:	20 e1       	ldi	r18, 0x10	; 16
     65e:	c2 9f       	mul	r28, r18
     660:	c0 01       	movw	r24, r0
     662:	11 24       	eor	r1, r1
     664:	8f 5e       	subi	r24, 0xEF	; 239
     666:	9e 4f       	sbci	r25, 0xFE	; 254
     668:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     66c:	cf 5f       	subi	r28, 0xFF	; 255
     66e:	db cf       	rjmp	.-74     	; 0x626 <_Z10updateMenuv+0x28>
     670:	cf 91       	pop	r28
     672:	08 95       	ret

00000674 <_Z16checkButtonPressv>:
     674:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     678:	81 34       	cpi	r24, 0x41	; 65
     67a:	91 f0       	breq	.+36     	; 0x6a0 <_Z16checkButtonPressv+0x2c>
     67c:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     680:	82 34       	cpi	r24, 0x42	; 66
     682:	81 f0       	breq	.+32     	; 0x6a4 <_Z16checkButtonPressv+0x30>
     684:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     688:	83 34       	cpi	r24, 0x43	; 67
     68a:	71 f0       	breq	.+28     	; 0x6a8 <_Z16checkButtonPressv+0x34>
     68c:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     690:	84 34       	cpi	r24, 0x44	; 68
     692:	61 f0       	breq	.+24     	; 0x6ac <_Z16checkButtonPressv+0x38>
     694:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     698:	85 34       	cpi	r24, 0x45	; 69
     69a:	51 f4       	brne	.+20     	; 0x6b0 <_Z16checkButtonPressv+0x3c>
     69c:	85 e0       	ldi	r24, 0x05	; 5
     69e:	08 95       	ret
     6a0:	81 e0       	ldi	r24, 0x01	; 1
     6a2:	08 95       	ret
     6a4:	82 e0       	ldi	r24, 0x02	; 2
     6a6:	08 95       	ret
     6a8:	83 e0       	ldi	r24, 0x03	; 3
     6aa:	08 95       	ret
     6ac:	84 e0       	ldi	r24, 0x04	; 4
     6ae:	08 95       	ret
     6b0:	86 e0       	ldi	r24, 0x06	; 6
     6b2:	08 95       	ret

000006b4 <_Z9RGBupdatec>:
void RGBupdate(char t){  //not completed have to done more
     6b4:	df 92       	push	r13
     6b6:	ef 92       	push	r14
     6b8:	ff 92       	push	r15
     6ba:	0f 93       	push	r16
     6bc:	1f 93       	push	r17
     6be:	cf 93       	push	r28
     6c0:	df 93       	push	r29
     6c2:	cd b7       	in	r28, 0x3d	; 61
     6c4:	de b7       	in	r29, 0x3e	; 62
     6c6:	27 97       	sbiw	r28, 0x07	; 7
     6c8:	0f b6       	in	r0, 0x3f	; 63
     6ca:	f8 94       	cli
     6cc:	de bf       	out	0x3e, r29	; 62
     6ce:	0f be       	out	0x3f, r0	; 63
     6d0:	cd bf       	out	0x3d, r28	; 61
     6d2:	d8 2e       	mov	r13, r24
	LCD_Clear();
     6d4:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	LCD_DisplayString("R   G   B");
     6d8:	81 e7       	ldi	r24, 0x71	; 113
     6da:	91 e0       	ldi	r25, 0x01	; 1
     6dc:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	for (char i=0;i<3;i++){ //not completed interface part only
     6e0:	10 e0       	ldi	r17, 0x00	; 0
     6e2:	13 30       	cpi	r17, 0x03	; 3
     6e4:	68 f5       	brcc	.+90     	; 0x740 <_Z9RGBupdatec+0x8c>
		LCD_GoToXY(1,i*4);
     6e6:	01 2f       	mov	r16, r17
     6e8:	00 0f       	add	r16, r16
     6ea:	00 0f       	add	r16, r16
     6ec:	60 2f       	mov	r22, r16
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
		char num_char[7];
		itoa(RGBval[i], num_char, 10);
     6f4:	e1 2e       	mov	r14, r17
     6f6:	f1 2c       	mov	r15, r1
     6f8:	f7 01       	movw	r30, r14
     6fa:	ee 0f       	add	r30, r30
     6fc:	ff 1f       	adc	r31, r31
     6fe:	ea 51       	subi	r30, 0x1A	; 26
     700:	fe 4f       	sbci	r31, 0xFE	; 254
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     702:	4a e0       	ldi	r20, 0x0A	; 10
     704:	be 01       	movw	r22, r28
     706:	6f 5f       	subi	r22, 0xFF	; 255
     708:	7f 4f       	sbci	r23, 0xFF	; 255
     70a:	80 81       	ld	r24, Z
     70c:	91 81       	ldd	r25, Z+1	; 0x01
     70e:	0e 94 d6 0a 	call	0x15ac	; 0x15ac <__itoa_ncheck>
		LCD_DisplayString(num_char);
     712:	ce 01       	movw	r24, r28
     714:	01 96       	adiw	r24, 0x01	; 1
     716:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
		if (t==i+menusize){
     71a:	8d 2d       	mov	r24, r13
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <menusize>
     722:	e2 0e       	add	r14, r18
     724:	f1 1c       	adc	r15, r1
     726:	8e 15       	cp	r24, r14
     728:	9f 05       	cpc	r25, r15
     72a:	41 f4       	brne	.+16     	; 0x73c <_Z9RGBupdatec+0x88>
			LCD_GoToXY(2,i*4);LCD_DisplayString("___");
     72c:	60 2f       	mov	r22, r16
     72e:	82 e0       	ldi	r24, 0x02	; 2
     730:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     734:	8b e7       	ldi	r24, 0x7B	; 123
     736:	91 e0       	ldi	r25, 0x01	; 1
     738:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
		
}
void RGBupdate(char t){  //not completed have to done more
	LCD_Clear();
	LCD_DisplayString("R   G   B");
	for (char i=0;i<3;i++){ //not completed interface part only
     73c:	1f 5f       	subi	r17, 0xFF	; 255
     73e:	d1 cf       	rjmp	.-94     	; 0x6e2 <_Z9RGBupdatec+0x2e>
		LCD_DisplayString(num_char);
		if (t==i+menusize){
			LCD_GoToXY(2,i*4);LCD_DisplayString("___");
		}
	}
}
     740:	27 96       	adiw	r28, 0x07	; 7
     742:	0f b6       	in	r0, 0x3f	; 63
     744:	f8 94       	cli
     746:	de bf       	out	0x3e, r29	; 62
     748:	0f be       	out	0x3f, r0	; 63
     74a:	cd bf       	out	0x3d, r28	; 61
     74c:	df 91       	pop	r29
     74e:	cf 91       	pop	r28
     750:	1f 91       	pop	r17
     752:	0f 91       	pop	r16
     754:	ff 90       	pop	r15
     756:	ef 90       	pop	r14
     758:	df 90       	pop	r13
     75a:	08 95       	ret

0000075c <_Z14RGBupdate_mechc>:
void RGBupdate_mech(char t){
     75c:	8f 92       	push	r8
     75e:	9f 92       	push	r9
     760:	af 92       	push	r10
     762:	bf 92       	push	r11
     764:	df 92       	push	r13
     766:	ef 92       	push	r14
     768:	ff 92       	push	r15
     76a:	0f 93       	push	r16
     76c:	1f 93       	push	r17
     76e:	cf 93       	push	r28
     770:	df 93       	push	r29
     772:	d8 2e       	mov	r13, r24
	RGBupdate(t);
     774:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_Z9RGBupdatec>
	RGBval[t-4]=0;
     778:	ed 2c       	mov	r14, r13
     77a:	f1 2c       	mov	r15, r1
     77c:	24 e0       	ldi	r18, 0x04	; 4
     77e:	e2 1a       	sub	r14, r18
     780:	f1 08       	sbc	r15, r1
     782:	f7 01       	movw	r30, r14
     784:	ee 0f       	add	r30, r30
     786:	ff 1f       	adc	r31, r31
     788:	ea 51       	subi	r30, 0x1A	; 26
     78a:	fe 4f       	sbci	r31, 0xFE	; 254
     78c:	11 82       	std	Z+1, r1	; 0x01
     78e:	10 82       	st	Z, r1
	char turns=3;
	int total=0;
     790:	00 e0       	ldi	r16, 0x00	; 0
     792:	10 e0       	ldi	r17, 0x00	; 0
	}
}
void RGBupdate_mech(char t){
	RGBupdate(t);
	RGBval[t-4]=0;
	char turns=3;
     794:	d3 e0       	ldi	r29, 0x03	; 3
     796:	01 c0       	rjmp	.+2      	; 0x79a <_Z14RGBupdate_mechc+0x3e>
			}
			RGBupdate(t);
		
		}
		else if (c=='A'){
			turns=0;}
     798:	d0 e0       	ldi	r29, 0x00	; 0
void RGBupdate_mech(char t){
	RGBupdate(t);
	RGBval[t-4]=0;
	char turns=3;
	int total=0;
	while (turns>0){
     79a:	dd 23       	and	r29, r29
     79c:	09 f4       	brne	.+2      	; 0x7a0 <_Z14RGBupdate_mechc+0x44>
     79e:	e3 c0       	rjmp	.+454    	; 0x966 <__stack+0x67>
		char c=KEYPAD_GetKey();
     7a0:	0e 94 3b 01 	call	0x276	; 0x276 <_Z13KEYPAD_GetKeyv>
     7a4:	c8 2f       	mov	r28, r24
		if (c!='A'& c!='B' & c!='C' & c!='D' & c!='E'& c!='F' & c!='H'){
     7a6:	8f eb       	ldi	r24, 0xBF	; 191
     7a8:	8c 0f       	add	r24, r28
     7aa:	41 e0       	ldi	r20, 0x01	; 1
     7ac:	82 30       	cpi	r24, 0x02	; 2
     7ae:	08 f4       	brcc	.+2      	; 0x7b2 <_Z14RGBupdate_mechc+0x56>
     7b0:	40 e0       	ldi	r20, 0x00	; 0
     7b2:	31 e0       	ldi	r19, 0x01	; 1
     7b4:	c3 34       	cpi	r28, 0x43	; 67
     7b6:	09 f4       	brne	.+2      	; 0x7ba <_Z14RGBupdate_mechc+0x5e>
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	21 e0       	ldi	r18, 0x01	; 1
     7bc:	c4 34       	cpi	r28, 0x44	; 68
     7be:	09 f4       	brne	.+2      	; 0x7c2 <_Z14RGBupdate_mechc+0x66>
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	91 e0       	ldi	r25, 0x01	; 1
     7c4:	c5 34       	cpi	r28, 0x45	; 69
     7c6:	09 f4       	brne	.+2      	; 0x7ca <_Z14RGBupdate_mechc+0x6e>
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	81 e0       	ldi	r24, 0x01	; 1
     7cc:	c6 34       	cpi	r28, 0x46	; 70
     7ce:	09 f4       	brne	.+2      	; 0x7d2 <_Z14RGBupdate_mechc+0x76>
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	51 e0       	ldi	r21, 0x01	; 1
     7d4:	c8 34       	cpi	r28, 0x48	; 72
     7d6:	09 f4       	brne	.+2      	; 0x7da <_Z14RGBupdate_mechc+0x7e>
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	34 23       	and	r19, r20
     7dc:	23 23       	and	r18, r19
     7de:	92 23       	and	r25, r18
     7e0:	89 23       	and	r24, r25
     7e2:	09 f4       	brne	.+2      	; 0x7e6 <_Z14RGBupdate_mechc+0x8a>
     7e4:	a1 c0       	rjmp	.+322    	; 0x928 <__stack+0x29>
     7e6:	55 23       	and	r21, r21
     7e8:	09 f4       	brne	.+2      	; 0x7ec <_Z14RGBupdate_mechc+0x90>
     7ea:	9e c0       	rjmp	.+316    	; 0x928 <__stack+0x29>
			if (turns==3 && c!=0){
     7ec:	d3 30       	cpi	r29, 0x03	; 3
     7ee:	b1 f5       	brne	.+108    	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     7f0:	cc 23       	and	r28, r28
     7f2:	a1 f1       	breq	.+104    	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
			total=c*pow(10,turns-1)+total+1;}
     7f4:	6d 2f       	mov	r22, r29
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	61 50       	subi	r22, 0x01	; 1
     7fa:	71 09       	sbc	r23, r1
     7fc:	07 2e       	mov	r0, r23
     7fe:	00 0c       	add	r0, r0
     800:	88 0b       	sbc	r24, r24
     802:	99 0b       	sbc	r25, r25
     804:	0e 94 ac 07 	call	0xf58	; 0xf58 <__floatsisf>
     808:	9b 01       	movw	r18, r22
     80a:	ac 01       	movw	r20, r24
     80c:	60 e0       	ldi	r22, 0x00	; 0
     80e:	70 e0       	ldi	r23, 0x00	; 0
     810:	80 e2       	ldi	r24, 0x20	; 32
     812:	91 e4       	ldi	r25, 0x41	; 65
     814:	0e 94 a5 08 	call	0x114a	; 0x114a <pow>
     818:	4b 01       	movw	r8, r22
     81a:	5c 01       	movw	r10, r24
     81c:	6c 2f       	mov	r22, r28
     81e:	70 e0       	ldi	r23, 0x00	; 0
     820:	80 e0       	ldi	r24, 0x00	; 0
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	0e 94 ac 07 	call	0xf58	; 0xf58 <__floatsisf>
     828:	a5 01       	movw	r20, r10
     82a:	94 01       	movw	r18, r8
     82c:	0e 94 38 08 	call	0x1070	; 0x1070 <__mulsf3>
     830:	4b 01       	movw	r8, r22
     832:	5c 01       	movw	r10, r24
     834:	b8 01       	movw	r22, r16
     836:	11 0f       	add	r17, r17
     838:	88 0b       	sbc	r24, r24
     83a:	99 0b       	sbc	r25, r25
     83c:	0e 94 ac 07 	call	0xf58	; 0xf58 <__floatsisf>
     840:	a5 01       	movw	r20, r10
     842:	94 01       	movw	r18, r8
     844:	0e 94 08 07 	call	0xe10	; 0xe10 <__addsf3>
     848:	20 e0       	ldi	r18, 0x00	; 0
     84a:	30 e0       	ldi	r19, 0x00	; 0
     84c:	40 e8       	ldi	r20, 0x80	; 128
     84e:	5f e3       	ldi	r21, 0x3F	; 63
     850:	0e 94 08 07 	call	0xe10	; 0xe10 <__addsf3>
     854:	0e 94 74 07 	call	0xee8	; 0xee8 <__fixsfsi>
     858:	8b 01       	movw	r16, r22
     85a:	35 c0       	rjmp	.+106    	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
			else if( turns==2 || turns==1 || (turns==3 && c==0)){total=c*pow(10,turns-1)+total;}
     85c:	8f ef       	ldi	r24, 0xFF	; 255
     85e:	8d 0f       	add	r24, r29
     860:	82 30       	cpi	r24, 0x02	; 2
     862:	20 f0       	brcs	.+8      	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
     864:	d3 30       	cpi	r29, 0x03	; 3
     866:	79 f5       	brne	.+94     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
     868:	c1 11       	cpse	r28, r1
     86a:	2d c0       	rjmp	.+90     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
     86c:	6d 2f       	mov	r22, r29
     86e:	70 e0       	ldi	r23, 0x00	; 0
     870:	61 50       	subi	r22, 0x01	; 1
     872:	71 09       	sbc	r23, r1
     874:	07 2e       	mov	r0, r23
     876:	00 0c       	add	r0, r0
     878:	88 0b       	sbc	r24, r24
     87a:	99 0b       	sbc	r25, r25
     87c:	0e 94 ac 07 	call	0xf58	; 0xf58 <__floatsisf>
     880:	9b 01       	movw	r18, r22
     882:	ac 01       	movw	r20, r24
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	80 e2       	ldi	r24, 0x20	; 32
     88a:	91 e4       	ldi	r25, 0x41	; 65
     88c:	0e 94 a5 08 	call	0x114a	; 0x114a <pow>
     890:	4b 01       	movw	r8, r22
     892:	5c 01       	movw	r10, r24
     894:	6c 2f       	mov	r22, r28
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	80 e0       	ldi	r24, 0x00	; 0
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	0e 94 ac 07 	call	0xf58	; 0xf58 <__floatsisf>
     8a0:	a5 01       	movw	r20, r10
     8a2:	94 01       	movw	r18, r8
     8a4:	0e 94 38 08 	call	0x1070	; 0x1070 <__mulsf3>
     8a8:	4b 01       	movw	r8, r22
     8aa:	5c 01       	movw	r10, r24
     8ac:	b8 01       	movw	r22, r16
     8ae:	11 0f       	add	r17, r17
     8b0:	88 0b       	sbc	r24, r24
     8b2:	99 0b       	sbc	r25, r25
     8b4:	0e 94 ac 07 	call	0xf58	; 0xf58 <__floatsisf>
     8b8:	a5 01       	movw	r20, r10
     8ba:	94 01       	movw	r18, r8
     8bc:	0e 94 08 07 	call	0xe10	; 0xe10 <__addsf3>
     8c0:	0e 94 74 07 	call	0xee8	; 0xee8 <__fixsfsi>
     8c4:	8b 01       	movw	r16, r22
			
			
			if (total<256){
     8c6:	0f 3f       	cpi	r16, 0xFF	; 255
     8c8:	11 05       	cpc	r17, r1
     8ca:	09 f0       	breq	.+2      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     8cc:	5c f4       	brge	.+22     	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
			RGBval[t-4]=total;
     8ce:	f7 01       	movw	r30, r14
     8d0:	ee 0f       	add	r30, r30
     8d2:	ff 1f       	adc	r31, r31
     8d4:	ea 51       	subi	r30, 0x1A	; 26
     8d6:	fe 4f       	sbci	r31, 0xFE	; 254
     8d8:	11 83       	std	Z+1, r17	; 0x01
     8da:	00 83       	st	Z, r16
			RGBUPDATE_LIGHT();
     8dc:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_Z15RGBUPDATE_LIGHTv>
			turns=turns-1;
     8e0:	d1 50       	subi	r29, 0x01	; 1
     8e2:	1e c0       	rjmp	.+60     	; 0x920 <__stack+0x21>
			}
			else{
				total=RGBval[t-4];
     8e4:	f7 01       	movw	r30, r14
     8e6:	ee 0f       	add	r30, r30
     8e8:	ff 1f       	adc	r31, r31
     8ea:	ea 51       	subi	r30, 0x1A	; 26
     8ec:	fe 4f       	sbci	r31, 0xFE	; 254
     8ee:	00 81       	ld	r16, Z
     8f0:	11 81       	ldd	r17, Z+1	; 0x01
				LCD_Clear();
     8f2:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
				LCD_DisplayString("Include Values");
     8f6:	8f e7       	ldi	r24, 0x7F	; 127
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
				LCD_GoToXY(1,0);
     8fe:	60 e0       	ldi	r22, 0x00	; 0
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
				LCD_DisplayString("Less than 255");
     906:	8e e8       	ldi	r24, 0x8E	; 142
     908:	91 e0       	ldi	r25, 0x01	; 1
     90a:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     90e:	8f ef       	ldi	r24, 0xFF	; 255
     910:	94 e3       	ldi	r25, 0x34	; 52
     912:	2c e0       	ldi	r18, 0x0C	; 12
     914:	81 50       	subi	r24, 0x01	; 1
     916:	90 40       	sbci	r25, 0x00	; 0
     918:	20 40       	sbci	r18, 0x00	; 0
     91a:	e1 f7       	brne	.-8      	; 0x914 <__stack+0x15>
     91c:	00 c0       	rjmp	.+0      	; 0x91e <__stack+0x1f>
     91e:	00 00       	nop
				_delay_ms(500);
				
			}
			RGBupdate(t);
     920:	8d 2d       	mov	r24, r13
     922:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_Z9RGBupdatec>
     926:	39 cf       	rjmp	.-398    	; 0x79a <_Z14RGBupdate_mechc+0x3e>
		
		}
		else if (c=='A'){
     928:	c1 34       	cpi	r28, 0x41	; 65
     92a:	09 f4       	brne	.+2      	; 0x92e <__stack+0x2f>
     92c:	35 cf       	rjmp	.-406    	; 0x798 <_Z14RGBupdate_mechc+0x3c>
			turns=0;}
		else if (c=='E'){
     92e:	c5 34       	cpi	r28, 0x45	; 69
     930:	09 f0       	breq	.+2      	; 0x934 <__stack+0x35>
     932:	33 cf       	rjmp	.-410    	; 0x79a <_Z14RGBupdate_mechc+0x3e>
			LCD_GoToXY(3,10);
     934:	6a e0       	ldi	r22, 0x0A	; 10
     936:	83 e0       	ldi	r24, 0x03	; 3
     938:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
			LCD_DisplayString("**");
     93c:	8c e9       	ldi	r24, 0x9C	; 156
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     944:	8f e7       	ldi	r24, 0x7F	; 127
     946:	9a e1       	ldi	r25, 0x1A	; 26
     948:	26 e0       	ldi	r18, 0x06	; 6
     94a:	81 50       	subi	r24, 0x01	; 1
     94c:	90 40       	sbci	r25, 0x00	; 0
     94e:	20 40       	sbci	r18, 0x00	; 0
     950:	e1 f7       	brne	.-8      	; 0x94a <__stack+0x4b>
     952:	00 c0       	rjmp	.+0      	; 0x954 <__stack+0x55>
     954:	00 00       	nop
			_delay_ms(250);
			posCount=2;
     956:	82 e0       	ldi	r24, 0x02	; 2
     958:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <posCount>
			updateMenu();
     95c:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z10updateMenuv>
			RGBUPDATE_off();
     960:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <_Z13RGBUPDATE_offv>
     964:	1a cf       	rjmp	.-460    	; 0x79a <_Z14RGBupdate_mechc+0x3e>
		}	
		
		
	}
	
}
     966:	df 91       	pop	r29
     968:	cf 91       	pop	r28
     96a:	1f 91       	pop	r17
     96c:	0f 91       	pop	r16
     96e:	ff 90       	pop	r15
     970:	ef 90       	pop	r14
     972:	df 90       	pop	r13
     974:	bf 90       	pop	r11
     976:	af 90       	pop	r10
     978:	9f 90       	pop	r9
     97a:	8f 90       	pop	r8
     97c:	08 95       	ret

0000097e <_Z6senscev>:


void sensce(){//not complete
     97e:	ef 92       	push	r14
     980:	ff 92       	push	r15
     982:	0f 93       	push	r16
     984:	1f 93       	push	r17
     986:	cf 93       	push	r28
     988:	df 93       	push	r29
	unsigned char run=1;
	LCD_Clear();
     98a:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	LCD_DisplayString("Hold the Color");
     98e:	8f e9       	ldi	r24, 0x9F	; 159
     990:	91 e0       	ldi	r25, 0x01	; 1
     992:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     996:	2f ef       	ldi	r18, 0xFF	; 255
     998:	89 e6       	ldi	r24, 0x69	; 105
     99a:	98 e1       	ldi	r25, 0x18	; 24
     99c:	21 50       	subi	r18, 0x01	; 1
     99e:	80 40       	sbci	r24, 0x00	; 0
     9a0:	90 40       	sbci	r25, 0x00	; 0
     9a2:	e1 f7       	brne	.-8      	; 0x99c <_Z6senscev+0x1e>
     9a4:	00 c0       	rjmp	.+0      	; 0x9a6 <_Z6senscev+0x28>
     9a6:	00 00       	nop
	_delay_ms(1000);
	LCD_GoToXY(2,0);
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	82 e0       	ldi	r24, 0x02	; 2
     9ac:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
	LCD_DisplayString("Sensing start now");
     9b0:	8e ea       	ldi	r24, 0xAE	; 174
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     9b8:	2f ef       	ldi	r18, 0xFF	; 255
     9ba:	84 e3       	ldi	r24, 0x34	; 52
     9bc:	9c e0       	ldi	r25, 0x0C	; 12
     9be:	21 50       	subi	r18, 0x01	; 1
     9c0:	80 40       	sbci	r24, 0x00	; 0
     9c2:	90 40       	sbci	r25, 0x00	; 0
     9c4:	e1 f7       	brne	.-8      	; 0x9be <_Z6senscev+0x40>
     9c6:	00 c0       	rjmp	.+0      	; 0x9c8 <_Z6senscev+0x4a>
     9c8:	00 00       	nop
	_delay_ms(500);
	LCD_Clear();
     9ca:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	LCD_DisplayString("Hold the Color");
     9ce:	8f e9       	ldi	r24, 0x9F	; 159
     9d0:	91 e0       	ldi	r25, 0x01	; 1
     9d2:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	for (int i=0;i<3;i++){
     9d6:	e1 2c       	mov	r14, r1
     9d8:	f1 2c       	mov	r15, r1
	
}


void sensce(){//not complete
	unsigned char run=1;
     9da:	d1 e0       	ldi	r29, 0x01	; 1
	LCD_GoToXY(2,0);
	LCD_DisplayString("Sensing start now");
	_delay_ms(500);
	LCD_Clear();
	LCD_DisplayString("Hold the Color");
	for (int i=0;i<3;i++){
     9dc:	23 e0       	ldi	r18, 0x03	; 3
     9de:	e2 16       	cp	r14, r18
     9e0:	f1 04       	cpc	r15, r1
     9e2:	0c f0       	brlt	.+2      	; 0x9e6 <_Z6senscev+0x68>
     9e4:	61 c0       	rjmp	.+194    	; 0xaa8 <_Z6senscev+0x12a>
		I2C_Start();            // Start I2C communication
     9e6:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
		I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     9ea:	80 e4       	ldi	r24, 0x40	; 64
     9ec:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     9f0:	8f e0       	ldi	r24, 0x0F	; 15
     9f2:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
     9f6:	8d 2f       	mov	r24, r29
     9f8:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Stop();
     9fc:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
     a00:	8f ef       	ldi	r24, 0xFF	; 255
     a02:	94 e3       	ldi	r25, 0x34	; 52
     a04:	2c e0       	ldi	r18, 0x0C	; 12
     a06:	81 50       	subi	r24, 0x01	; 1
     a08:	90 40       	sbci	r25, 0x00	; 0
     a0a:	20 40       	sbci	r18, 0x00	; 0
     a0c:	e1 f7       	brne	.-8      	; 0xa06 <_Z6senscev+0x88>
     a0e:	00 c0       	rjmp	.+0      	; 0xa10 <_Z6senscev+0x92>
     a10:	00 00       	nop
	
		_delay_ms(500);
		int tot=0;
		for (char j=0; j<50;j++){
     a12:	c0 e0       	ldi	r28, 0x00	; 0
		I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
		I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
		I2C_Stop();
	
		_delay_ms(500);
		int tot=0;
     a14:	00 e0       	ldi	r16, 0x00	; 0
     a16:	10 e0       	ldi	r17, 0x00	; 0
		for (char j=0; j<50;j++){
     a18:	c2 33       	cpi	r28, 0x32	; 50
     a1a:	68 f4       	brcc	.+26     	; 0xa36 <_Z6senscev+0xb8>
			tot+=adc_read(0);
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	0e 94 4d 02 	call	0x49a	; 0x49a <_Z8adc_readh>
     a22:	08 0f       	add	r16, r24
     a24:	19 1f       	adc	r17, r25
     a26:	8f e4       	ldi	r24, 0x4F	; 79
     a28:	93 ec       	ldi	r25, 0xC3	; 195
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	f1 f7       	brne	.-4      	; 0xa2a <_Z6senscev+0xac>
     a2e:	00 c0       	rjmp	.+0      	; 0xa30 <_Z6senscev+0xb2>
     a30:	00 00       	nop
		I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
		I2C_Stop();
	
		_delay_ms(500);
		int tot=0;
		for (char j=0; j<50;j++){
     a32:	cf 5f       	subi	r28, 0xFF	; 255
     a34:	f1 cf       	rjmp	.-30     	; 0xa18 <_Z6senscev+0x9a>
			tot+=adc_read(0);
			_delay_ms(25);
		}
		senRGB[i]=255*tot/((calibRGB[i+3]-calibRGB[i])*50);
     a36:	2f ef       	ldi	r18, 0xFF	; 255
     a38:	20 9f       	mul	r18, r16
     a3a:	c0 01       	movw	r24, r0
     a3c:	21 9f       	mul	r18, r17
     a3e:	90 0d       	add	r25, r0
     a40:	11 24       	eor	r1, r1
     a42:	f7 01       	movw	r30, r14
     a44:	33 96       	adiw	r30, 0x03	; 3
     a46:	ee 0f       	add	r30, r30
     a48:	ff 1f       	adc	r31, r31
     a4a:	ee 5f       	subi	r30, 0xFE	; 254
     a4c:	fe 4f       	sbci	r31, 0xFE	; 254
     a4e:	40 81       	ld	r20, Z
     a50:	51 81       	ldd	r21, Z+1	; 0x01
     a52:	97 01       	movw	r18, r14
     a54:	22 0f       	add	r18, r18
     a56:	33 1f       	adc	r19, r19
     a58:	f9 01       	movw	r30, r18
     a5a:	ee 5f       	subi	r30, 0xFE	; 254
     a5c:	fe 4f       	sbci	r31, 0xFE	; 254
     a5e:	60 81       	ld	r22, Z
     a60:	71 81       	ldd	r23, Z+1	; 0x01
     a62:	46 1b       	sub	r20, r22
     a64:	57 0b       	sbc	r21, r23
     a66:	e2 e3       	ldi	r30, 0x32	; 50
     a68:	e4 9f       	mul	r30, r20
     a6a:	b0 01       	movw	r22, r0
     a6c:	e5 9f       	mul	r30, r21
     a6e:	70 0d       	add	r23, r0
     a70:	11 24       	eor	r1, r1
     a72:	0e 94 a8 0a 	call	0x1550	; 0x1550 <__divmodhi4>
     a76:	f9 01       	movw	r30, r18
     a78:	e4 51       	subi	r30, 0x14	; 20
     a7a:	fe 4f       	sbci	r31, 0xFE	; 254
     a7c:	71 83       	std	Z+1, r23	; 0x01
     a7e:	60 83       	st	Z, r22
		
		I2C_Start();            // Start I2C communication
     a80:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
		I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     a84:	80 e4       	ldi	r24, 0x40	; 64
     a86:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     a8a:	8f e0       	ldi	r24, 0x0F	; 15
     a8c:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Write(0x00);        // Write 0x00 to Control register to disable SQW-Out
     a90:	80 e0       	ldi	r24, 0x00	; 0
     a92:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
		I2C_Stop();
     a96:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
		
		RGBSENCEE_LIGHT();
     a9a:	0e 94 c2 02 	call	0x584	; 0x584 <_Z15RGBSENCEE_LIGHTv>
		run=run<<1;
     a9e:	dd 0f       	add	r29, r29
	LCD_GoToXY(2,0);
	LCD_DisplayString("Sensing start now");
	_delay_ms(500);
	LCD_Clear();
	LCD_DisplayString("Hold the Color");
	for (int i=0;i<3;i++){
     aa0:	9f ef       	ldi	r25, 0xFF	; 255
     aa2:	e9 1a       	sub	r14, r25
     aa4:	f9 0a       	sbc	r15, r25
     aa6:	9a cf       	rjmp	.-204    	; 0x9dc <_Z6senscev+0x5e>
     aa8:	2f ef       	ldi	r18, 0xFF	; 255
     aaa:	83 ed       	ldi	r24, 0xD3	; 211
     aac:	90 e3       	ldi	r25, 0x30	; 48
     aae:	21 50       	subi	r18, 0x01	; 1
     ab0:	80 40       	sbci	r24, 0x00	; 0
     ab2:	90 40       	sbci	r25, 0x00	; 0
     ab4:	e1 f7       	brne	.-8      	; 0xaae <_Z6senscev+0x130>
     ab6:	00 c0       	rjmp	.+0      	; 0xab8 <_Z6senscev+0x13a>
     ab8:	00 00       	nop
		
		RGBSENCEE_LIGHT();
		run=run<<1;
	}
	_delay_ms(2000);
	RGBUPDATE_off();
     aba:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <_Z13RGBUPDATE_offv>
}
     abe:	df 91       	pop	r29
     ac0:	cf 91       	pop	r28
     ac2:	1f 91       	pop	r17
     ac4:	0f 91       	pop	r16
     ac6:	ff 90       	pop	r15
     ac8:	ef 90       	pop	r14
     aca:	08 95       	ret

00000acc <_Z8RGBcalibv>:

void RGBcalib(){
     acc:	9f 92       	push	r9
     ace:	af 92       	push	r10
     ad0:	bf 92       	push	r11
     ad2:	cf 92       	push	r12
     ad4:	df 92       	push	r13
     ad6:	ef 92       	push	r14
     ad8:	ff 92       	push	r15
     ada:	0f 93       	push	r16
     adc:	1f 93       	push	r17
     ade:	cf 93       	push	r28
     ae0:	df 93       	push	r29
     ae2:	cd b7       	in	r28, 0x3d	; 61
     ae4:	de b7       	in	r29, 0x3e	; 62
     ae6:	a0 97       	sbiw	r28, 0x20	; 32
     ae8:	0f b6       	in	r0, 0x3f	; 63
     aea:	f8 94       	cli
     aec:	de bf       	out	0x3e, r29	; 62
     aee:	0f be       	out	0x3f, r0	; 63
     af0:	cd bf       	out	0x3d, r28	; 61
	char calibmenu[2][16]={"Hold White","Hold Black"};
     af2:	80 e2       	ldi	r24, 0x20	; 32
     af4:	e1 e5       	ldi	r30, 0x51	; 81
     af6:	f1 e0       	ldi	r31, 0x01	; 1
     af8:	de 01       	movw	r26, r28
     afa:	11 96       	adiw	r26, 0x01	; 1
     afc:	01 90       	ld	r0, Z+
     afe:	0d 92       	st	X+, r0
     b00:	8a 95       	dec	r24
     b02:	e1 f7       	brne	.-8      	; 0xafc <_Z8RGBcalibv+0x30>
	for (char j=0;j<2;j++){
     b04:	91 2c       	mov	r9, r1
     b06:	21 e0       	ldi	r18, 0x01	; 1
     b08:	29 15       	cp	r18, r9
     b0a:	08 f4       	brcc	.+2      	; 0xb0e <_Z8RGBcalibv+0x42>
     b0c:	6a c0       	rjmp	.+212    	; 0xbe2 <_Z8RGBcalibv+0x116>
		unsigned char run=1;
		LCD_Clear();
     b0e:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
		LCD_DisplayString(calibmenu[j]);
     b12:	a9 2c       	mov	r10, r9
     b14:	b1 2c       	mov	r11, r1
     b16:	c5 01       	movw	r24, r10
     b18:	82 95       	swap	r24
     b1a:	92 95       	swap	r25
     b1c:	90 7f       	andi	r25, 0xF0	; 240
     b1e:	98 27       	eor	r25, r24
     b20:	80 7f       	andi	r24, 0xF0	; 240
     b22:	98 27       	eor	r25, r24
     b24:	21 e0       	ldi	r18, 0x01	; 1
     b26:	30 e0       	ldi	r19, 0x00	; 0
     b28:	2c 0f       	add	r18, r28
     b2a:	3d 1f       	adc	r19, r29
     b2c:	82 0f       	add	r24, r18
     b2e:	93 1f       	adc	r25, r19
     b30:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
		for (int i=0;i<3;i++){
     b34:	c1 2c       	mov	r12, r1
     b36:	d1 2c       	mov	r13, r1
}

void RGBcalib(){
	char calibmenu[2][16]={"Hold White","Hold Black"};
	for (char j=0;j<2;j++){
		unsigned char run=1;
     b38:	01 e0       	ldi	r16, 0x01	; 1
		LCD_Clear();
		LCD_DisplayString(calibmenu[j]);
		for (int i=0;i<3;i++){
     b3a:	33 e0       	ldi	r19, 0x03	; 3
     b3c:	c3 16       	cp	r12, r19
     b3e:	d1 04       	cpc	r13, r1
     b40:	0c f0       	brlt	.+2      	; 0xb44 <_Z8RGBcalibv+0x78>
     b42:	4d c0       	rjmp	.+154    	; 0xbde <_Z8RGBcalibv+0x112>
			I2C_Start();            // Start I2C communication
     b44:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
			I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     b48:	80 e4       	ldi	r24, 0x40	; 64
     b4a:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     b4e:	8f e0       	ldi	r24, 0x0F	; 15
     b50:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
     b54:	80 2f       	mov	r24, r16
     b56:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Stop();
     b5a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	94 e3       	ldi	r25, 0x34	; 52
     b62:	2c e0       	ldi	r18, 0x0C	; 12
     b64:	81 50       	subi	r24, 0x01	; 1
     b66:	90 40       	sbci	r25, 0x00	; 0
     b68:	20 40       	sbci	r18, 0x00	; 0
     b6a:	e1 f7       	brne	.-8      	; 0xb64 <_Z8RGBcalibv+0x98>
     b6c:	00 c0       	rjmp	.+0      	; 0xb6e <_Z8RGBcalibv+0xa2>
     b6e:	00 00       	nop
			
			_delay_ms(500);
			int tot=0;
			for (char b=0;b<50;b++){
     b70:	10 e0       	ldi	r17, 0x00	; 0
			I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
			I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
			I2C_Stop();
			
			_delay_ms(500);
			int tot=0;
     b72:	e1 2c       	mov	r14, r1
     b74:	f1 2c       	mov	r15, r1
			for (char b=0;b<50;b++){
     b76:	12 33       	cpi	r17, 0x32	; 50
     b78:	68 f4       	brcc	.+26     	; 0xb94 <_Z8RGBcalibv+0xc8>
				tot+=adc_read(0);
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	0e 94 4d 02 	call	0x49a	; 0x49a <_Z8adc_readh>
     b80:	e8 0e       	add	r14, r24
     b82:	f9 1e       	adc	r15, r25
     b84:	8f e4       	ldi	r24, 0x4F	; 79
     b86:	93 ec       	ldi	r25, 0xC3	; 195
     b88:	01 97       	sbiw	r24, 0x01	; 1
     b8a:	f1 f7       	brne	.-4      	; 0xb88 <_Z8RGBcalibv+0xbc>
     b8c:	00 c0       	rjmp	.+0      	; 0xb8e <_Z8RGBcalibv+0xc2>
     b8e:	00 00       	nop
			I2C_Write(run);        // Write 0x00 to Control register to disable SQW-Out
			I2C_Stop();
			
			_delay_ms(500);
			int tot=0;
			for (char b=0;b<50;b++){
     b90:	1f 5f       	subi	r17, 0xFF	; 255
     b92:	f1 cf       	rjmp	.-30     	; 0xb76 <_Z8RGBcalibv+0xaa>
				tot+=adc_read(0);
				_delay_ms(25);
			}
			calibRGB[j*3+i]=tot/50;
     b94:	95 01       	movw	r18, r10
     b96:	22 0f       	add	r18, r18
     b98:	33 1f       	adc	r19, r19
     b9a:	2a 0d       	add	r18, r10
     b9c:	3b 1d       	adc	r19, r11
     b9e:	2c 0d       	add	r18, r12
     ba0:	3d 1d       	adc	r19, r13
     ba2:	c7 01       	movw	r24, r14
     ba4:	62 e3       	ldi	r22, 0x32	; 50
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	0e 94 a8 0a 	call	0x1550	; 0x1550 <__divmodhi4>
     bac:	22 0f       	add	r18, r18
     bae:	33 1f       	adc	r19, r19
     bb0:	f9 01       	movw	r30, r18
     bb2:	ee 5f       	subi	r30, 0xFE	; 254
     bb4:	fe 4f       	sbci	r31, 0xFE	; 254
     bb6:	71 83       	std	Z+1, r23	; 0x01
     bb8:	60 83       	st	Z, r22
			
			LCD_DisplayString(num_char);
			_delay_ms(1000);*/
			
			
			I2C_Start();            // Start I2C communication
     bba:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
			I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     bbe:	80 e4       	ldi	r24, 0x40	; 64
     bc0:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     bc4:	8f e0       	ldi	r24, 0x0F	; 15
     bc6:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Write(0x00);        // Write 0x00 to Control register to disable SQW-Out
     bca:	80 e0       	ldi	r24, 0x00	; 0
     bcc:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
			I2C_Stop();
     bd0:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
			run=run<<1;
     bd4:	00 0f       	add	r16, r16
	char calibmenu[2][16]={"Hold White","Hold Black"};
	for (char j=0;j<2;j++){
		unsigned char run=1;
		LCD_Clear();
		LCD_DisplayString(calibmenu[j]);
		for (int i=0;i<3;i++){
     bd6:	9f ef       	ldi	r25, 0xFF	; 255
     bd8:	c9 1a       	sub	r12, r25
     bda:	d9 0a       	sbc	r13, r25
     bdc:	ae cf       	rjmp	.-164    	; 0xb3a <_Z8RGBcalibv+0x6e>
	RGBUPDATE_off();
}

void RGBcalib(){
	char calibmenu[2][16]={"Hold White","Hold Black"};
	for (char j=0;j<2;j++){
     bde:	93 94       	inc	r9
     be0:	92 cf       	rjmp	.-220    	; 0xb06 <_Z8RGBcalibv+0x3a>
			I2C_Stop();
			run=run<<1;
		}
			
	}
}
     be2:	a0 96       	adiw	r28, 0x20	; 32
     be4:	0f b6       	in	r0, 0x3f	; 63
     be6:	f8 94       	cli
     be8:	de bf       	out	0x3e, r29	; 62
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	cd bf       	out	0x3d, r28	; 61
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	ff 90       	pop	r15
     bf8:	ef 90       	pop	r14
     bfa:	df 90       	pop	r13
     bfc:	cf 90       	pop	r12
     bfe:	bf 90       	pop	r11
     c00:	af 90       	pop	r10
     c02:	9f 90       	pop	r9
     c04:	08 95       	ret

00000c06 <main>:
int main(void)
{
     c06:	cf 93       	push	r28
     c08:	df 93       	push	r29
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	27 97       	sbiw	r28, 0x07	; 7
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
     c1a:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <_Z8LCD_Initv>
	KEYPAD_Init();
     c1e:	0e 94 38 01 	call	0x270	; 0x270 <_Z11KEYPAD_Initv>
	adc_init();
     c22:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z8adc_initv>
	_delay_ms(1000);*/

	//I2C_Init();
	//LCD_DisplayString(menu[1]);
	
	I2C_Init();             // Initilize the I2c module.
     c26:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z8I2C_Initv>
	I2C_Start();            // Start I2C communication
     c2a:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9I2C_Startv>
	I2C_Write(0x40);   // Connect to DS1307 by sending its ID on I2c Bus
     c2e:	80 e4       	ldi	r24, 0x40	; 64
     c30:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
	I2C_Write(0x0f);     // Select the Ds1307 ControlRegister to configure Ds1307
     c34:	8f e0       	ldi	r24, 0x0F	; 15
     c36:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
	I2C_Write(0x00);        // Write 0x00 to Control register to disable SQW-Out
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	0e 94 84 01 	call	0x308	; 0x308 <_Z9I2C_Writeh>
	
	I2C_Stop();
     c40:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z8I2C_Stopv>
	LCD_GoToXY(1,3);LCD_DisplayString("RGB Color");
     c44:	63 e0       	ldi	r22, 0x03	; 3
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     c4c:	80 ec       	ldi	r24, 0xC0	; 192
     c4e:	91 e0       	ldi	r25, 0x01	; 1
     c50:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
	LCD_GoToXY(2,5);LCD_DisplayString("Sensor");
     c54:	65 e0       	ldi	r22, 0x05	; 5
     c56:	82 e0       	ldi	r24, 0x02	; 2
     c58:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
     c5c:	8a ec       	ldi	r24, 0xCA	; 202
     c5e:	91 e0       	ldi	r25, 0x01	; 1
     c60:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     c64:	2f ef       	ldi	r18, 0xFF	; 255
     c66:	89 e6       	ldi	r24, 0x69	; 105
     c68:	98 e1       	ldi	r25, 0x18	; 24
     c6a:	21 50       	subi	r18, 0x01	; 1
     c6c:	80 40       	sbci	r24, 0x00	; 0
     c6e:	90 40       	sbci	r25, 0x00	; 0
     c70:	e1 f7       	brne	.-8      	; 0xc6a <main+0x64>
     c72:	00 c0       	rjmp	.+0      	; 0xc74 <main+0x6e>
     c74:	00 00       	nop
	_delay_ms(1000);
	LCD_Clear();
     c76:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
	updateMenu();
     c7a:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z10updateMenuv>
	
    /* Replace with your application code */
    while (1) 
    {
		switch (checkButtonPress()){
     c7e:	0e 94 3a 03 	call	0x674	; 0x674 <_Z16checkButtonPressv>
     c82:	82 30       	cpi	r24, 0x02	; 2
     c84:	c1 f1       	breq	.+112    	; 0xcf6 <main+0xf0>
     c86:	85 30       	cpi	r24, 0x05	; 5
     c88:	09 f4       	brne	.+2      	; 0xc8c <main+0x86>
     c8a:	95 c0       	rjmp	.+298    	; 0xdb6 <main+0x1b0>
     c8c:	81 30       	cpi	r24, 0x01	; 1
     c8e:	b9 f7       	brne	.-18     	; 0xc7e <main+0x78>
			case 1://Selection
				posCount=posCount+1;
     c90:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <posCount>
     c94:	2f 5f       	subi	r18, 0xFF	; 255
     c96:	20 93 f2 01 	sts	0x01F2, r18	; 0x8001f2 <posCount>
				if (posCount<menusize){
     c9a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <menusize>
     c9e:	28 17       	cp	r18, r24
     ca0:	18 f4       	brcc	.+6      	; 0xca8 <main+0xa2>
					updateMenu();
     ca2:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z10updateMenuv>
					break;
     ca6:	eb cf       	rjmp	.-42     	; 0xc7e <main+0x78>
				}
				else if(menusize<=posCount && posCount<menusize+3 && p!=20){
     ca8:	28 17       	cp	r18, r24
     caa:	88 f0       	brcs	.+34     	; 0xcce <main+0xc8>
     cac:	62 2f       	mov	r22, r18
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	48 2f       	mov	r20, r24
     cb2:	50 e0       	ldi	r21, 0x00	; 0
     cb4:	4d 5f       	subi	r20, 0xFD	; 253
     cb6:	5f 4f       	sbci	r21, 0xFF	; 255
     cb8:	64 17       	cp	r22, r20
     cba:	75 07       	cpc	r23, r21
     cbc:	44 f4       	brge	.+16     	; 0xcce <main+0xc8>
     cbe:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <p>
     cc2:	94 31       	cpi	r25, 0x14	; 20
     cc4:	21 f0       	breq	.+8      	; 0xcce <main+0xc8>
					//if (p==-1){LCD_DisplayString("wrong");_delay_ms(1000);}
					RGBupdate(posCount);
     cc6:	82 2f       	mov	r24, r18
     cc8:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_Z9RGBupdatec>
					break;
     ccc:	d8 cf       	rjmp	.-80     	; 0xc7e <main+0x78>
				}
				else if (posCount>=menusize+3 && p!=20){
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	48 2f       	mov	r20, r24
     cd2:	50 e0       	ldi	r21, 0x00	; 0
     cd4:	4d 5f       	subi	r20, 0xFD	; 253
     cd6:	5f 4f       	sbci	r21, 0xFF	; 255
     cd8:	24 17       	cp	r18, r20
     cda:	35 07       	cpc	r19, r21
     cdc:	4c f0       	brlt	.+18     	; 0xcf0 <main+0xea>
     cde:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <p>
     ce2:	94 31       	cpi	r25, 0x14	; 20
     ce4:	29 f0       	breq	.+10     	; 0xcf0 <main+0xea>
					posCount=menusize;
     ce6:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <posCount>
					RGBupdate(posCount);
     cea:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_Z9RGBupdatec>
					break;
     cee:	c7 cf       	rjmp	.-114    	; 0xc7e <main+0x78>
				}
				else{
					updateMenu();
     cf0:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z10updateMenuv>
					break;
     cf4:	c4 cf       	rjmp	.-120    	; 0xc7e <main+0x78>
				}
			case 2://0k
				if (posCount==0){//Caliberation Mode
     cf6:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <posCount>
     cfa:	81 11       	cpse	r24, r1
     cfc:	10 c0       	rjmp	.+32     	; 0xd1e <main+0x118>
					LCD_Clear();
     cfe:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
					RGBcalib();
     d02:	0e 94 66 05 	call	0xacc	; 0xacc <_Z8RGBcalibv>
     d06:	2f ef       	ldi	r18, 0xFF	; 255
     d08:	89 e6       	ldi	r24, 0x69	; 105
     d0a:	98 e1       	ldi	r25, 0x18	; 24
     d0c:	21 50       	subi	r18, 0x01	; 1
     d0e:	80 40       	sbci	r24, 0x00	; 0
     d10:	90 40       	sbci	r25, 0x00	; 0
     d12:	e1 f7       	brne	.-8      	; 0xd0c <main+0x106>
     d14:	00 c0       	rjmp	.+0      	; 0xd16 <main+0x110>
     d16:	00 00       	nop
					_delay_ms(1000);
					updateMenu();//not complete
     d18:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z10updateMenuv>
     d1c:	b0 cf       	rjmp	.-160    	; 0xc7e <main+0x78>
				}
				else if (posCount==1){// Sensor Mode
     d1e:	81 30       	cpi	r24, 0x01	; 1
     d20:	31 f5       	brne	.+76     	; 0xd6e <main+0x168>
					LCD_Clear();
     d22:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z9LCD_Clearv>
					if (calibRGB[0]!=-1){
     d26:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <calibRGB>
     d2a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <calibRGB+0x1>
     d2e:	01 96       	adiw	r24, 0x01	; 1
     d30:	61 f0       	breq	.+24     	; 0xd4a <main+0x144>
						sensce();
     d32:	0e 94 bf 04 	call	0x97e	; 0x97e <_Z6senscev>
     d36:	8f e7       	ldi	r24, 0x7F	; 127
     d38:	9a e1       	ldi	r25, 0x1A	; 26
     d3a:	26 e0       	ldi	r18, 0x06	; 6
     d3c:	81 50       	subi	r24, 0x01	; 1
     d3e:	90 40       	sbci	r25, 0x00	; 0
     d40:	20 40       	sbci	r18, 0x00	; 0
     d42:	e1 f7       	brne	.-8      	; 0xd3c <main+0x136>
     d44:	00 c0       	rjmp	.+0      	; 0xd46 <main+0x140>
     d46:	00 00       	nop
     d48:	0f c0       	rjmp	.+30     	; 0xd68 <main+0x162>
						_delay_ms(250);
					}
					else{
						LCD_DisplayString("Calibrate First");
     d4a:	81 ed       	ldi	r24, 0xD1	; 209
     d4c:	91 e0       	ldi	r25, 0x01	; 1
     d4e:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     d52:	8f ef       	ldi	r24, 0xFF	; 255
     d54:	94 e3       	ldi	r25, 0x34	; 52
     d56:	2c e0       	ldi	r18, 0x0C	; 12
     d58:	81 50       	subi	r24, 0x01	; 1
     d5a:	90 40       	sbci	r25, 0x00	; 0
     d5c:	20 40       	sbci	r18, 0x00	; 0
     d5e:	e1 f7       	brne	.-8      	; 0xd58 <main+0x152>
     d60:	00 c0       	rjmp	.+0      	; 0xd62 <main+0x15c>
     d62:	00 00       	nop
						_delay_ms(500);
						posCount=0; //Might give an error "HERE"
     d64:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <posCount>
					}
					updateMenu();
     d68:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z10updateMenuv>
     d6c:	88 cf       	rjmp	.-240    	; 0xc7e <main+0x78>
				}
				else if (posCount==2){//RGB mode selection
     d6e:	82 30       	cpi	r24, 0x02	; 2
     d70:	49 f4       	brne	.+18     	; 0xd84 <main+0x17e>
					p=posCount;
     d72:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <p>
					posCount=menusize;
     d76:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <menusize>
     d7a:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <posCount>
					RGBupdate(posCount);
     d7e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_Z9RGBupdatec>
     d82:	7d cf       	rjmp	.-262    	; 0xc7e <main+0x78>
				}
				else if (posCount>=4){//Shifting inside RGB Mode
     d84:	84 30       	cpi	r24, 0x04	; 4
     d86:	08 f4       	brcc	.+2      	; 0xd8a <main+0x184>
     d88:	7a cf       	rjmp	.-268    	; 0xc7e <main+0x78>
					LCD_GoToXY(3,10);
     d8a:	6a e0       	ldi	r22, 0x0A	; 10
     d8c:	83 e0       	ldi	r24, 0x03	; 3
     d8e:	0e 94 22 02 	call	0x444	; 0x444 <_Z10LCD_GoToXYcc>
					LCD_DisplayString("**");
     d92:	8c e9       	ldi	r24, 0x9C	; 156
     d94:	91 e0       	ldi	r25, 0x01	; 1
     d96:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     d9a:	8f e7       	ldi	r24, 0x7F	; 127
     d9c:	9a e1       	ldi	r25, 0x1A	; 26
     d9e:	26 e0       	ldi	r18, 0x06	; 6
     da0:	81 50       	subi	r24, 0x01	; 1
     da2:	90 40       	sbci	r25, 0x00	; 0
     da4:	20 40       	sbci	r18, 0x00	; 0
     da6:	e1 f7       	brne	.-8      	; 0xda0 <main+0x19a>
     da8:	00 c0       	rjmp	.+0      	; 0xdaa <main+0x1a4>
     daa:	00 00       	nop
					_delay_ms(250);
					RGBupdate_mech(posCount);
     dac:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <posCount>
     db0:	0e 94 ae 03 	call	0x75c	; 0x75c <_Z14RGBupdate_mechc>
     db4:	64 cf       	rjmp	.-312    	; 0xc7e <main+0x78>
			case 3:
			   continue;
			case 4:
			   continue;   	
			case 5://back
				RGBUPDATE_off();
     db6:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <_Z13RGBUPDATE_offv>
				if (posCount>=menusize){
     dba:	90 91 f2 01 	lds	r25, 0x01F2	; 0x8001f2 <posCount>
     dbe:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <menusize>
     dc2:	98 17       	cp	r25, r24
     dc4:	08 f4       	brcc	.+2      	; 0xdc8 <main+0x1c2>
     dc6:	5b cf       	rjmp	.-330    	; 0xc7e <main+0x78>
					
					RGBUPDATE_off();
     dc8:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <_Z13RGBUPDATE_offv>
     dcc:	4a e0       	ldi	r20, 0x0A	; 10
     dce:	be 01       	movw	r22, r28
     dd0:	6f 5f       	subi	r22, 0xFF	; 255
     dd2:	7f 4f       	sbci	r23, 0xFF	; 255
     dd4:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__data_end>
     dd8:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__data_end+0x1>
     ddc:	0e 94 d6 0a 	call	0x15ac	; 0x15ac <__itoa_ncheck>
					char num_char[7];
					itoa(RED, num_char, 10);
					
					LCD_DisplayString(num_char);
     de0:	ce 01       	movw	r24, r28
     de2:	01 96       	adiw	r24, 0x01	; 1
     de4:	0e 94 15 02 	call	0x42a	; 0x42a <_Z17LCD_DisplayStringPc>
     de8:	8f ef       	ldi	r24, 0xFF	; 255
     dea:	99 e6       	ldi	r25, 0x69	; 105
     dec:	28 e1       	ldi	r18, 0x18	; 24
     dee:	81 50       	subi	r24, 0x01	; 1
     df0:	90 40       	sbci	r25, 0x00	; 0
     df2:	20 40       	sbci	r18, 0x00	; 0
     df4:	e1 f7       	brne	.-8      	; 0xdee <main+0x1e8>
     df6:	00 c0       	rjmp	.+0      	; 0xdf8 <main+0x1f2>
     df8:	00 00       	nop
					_delay_ms(1000);
					posCount=p;
     dfa:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <p>
     dfe:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <posCount>
					p=20;
     e02:	84 e1       	ldi	r24, 0x14	; 20
     e04:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <p>
					updateMenu();
     e08:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z10updateMenuv>
     e0c:	38 cf       	rjmp	.-400    	; 0xc7e <main+0x78>

00000e0e <__subsf3>:
     e0e:	50 58       	subi	r21, 0x80	; 128

00000e10 <__addsf3>:
     e10:	bb 27       	eor	r27, r27
     e12:	aa 27       	eor	r26, r26
     e14:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__addsf3x>
     e18:	0c 94 fe 07 	jmp	0xffc	; 0xffc <__fp_round>
     e1c:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__fp_pscA>
     e20:	38 f0       	brcs	.+14     	; 0xe30 <__addsf3+0x20>
     e22:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_pscB>
     e26:	20 f0       	brcs	.+8      	; 0xe30 <__addsf3+0x20>
     e28:	39 f4       	brne	.+14     	; 0xe38 <__addsf3+0x28>
     e2a:	9f 3f       	cpi	r25, 0xFF	; 255
     e2c:	19 f4       	brne	.+6      	; 0xe34 <__addsf3+0x24>
     e2e:	26 f4       	brtc	.+8      	; 0xe38 <__addsf3+0x28>
     e30:	0c 94 ed 07 	jmp	0xfda	; 0xfda <__fp_nan>
     e34:	0e f4       	brtc	.+2      	; 0xe38 <__addsf3+0x28>
     e36:	e0 95       	com	r30
     e38:	e7 fb       	bst	r30, 7
     e3a:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>

00000e3e <__addsf3x>:
     e3e:	e9 2f       	mov	r30, r25
     e40:	0e 94 0f 08 	call	0x101e	; 0x101e <__fp_split3>
     e44:	58 f3       	brcs	.-42     	; 0xe1c <__addsf3+0xc>
     e46:	ba 17       	cp	r27, r26
     e48:	62 07       	cpc	r22, r18
     e4a:	73 07       	cpc	r23, r19
     e4c:	84 07       	cpc	r24, r20
     e4e:	95 07       	cpc	r25, r21
     e50:	20 f0       	brcs	.+8      	; 0xe5a <__addsf3x+0x1c>
     e52:	79 f4       	brne	.+30     	; 0xe72 <__addsf3x+0x34>
     e54:	a6 f5       	brtc	.+104    	; 0xebe <__addsf3x+0x80>
     e56:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__fp_zero>
     e5a:	0e f4       	brtc	.+2      	; 0xe5e <__addsf3x+0x20>
     e5c:	e0 95       	com	r30
     e5e:	0b 2e       	mov	r0, r27
     e60:	ba 2f       	mov	r27, r26
     e62:	a0 2d       	mov	r26, r0
     e64:	0b 01       	movw	r0, r22
     e66:	b9 01       	movw	r22, r18
     e68:	90 01       	movw	r18, r0
     e6a:	0c 01       	movw	r0, r24
     e6c:	ca 01       	movw	r24, r20
     e6e:	a0 01       	movw	r20, r0
     e70:	11 24       	eor	r1, r1
     e72:	ff 27       	eor	r31, r31
     e74:	59 1b       	sub	r21, r25
     e76:	99 f0       	breq	.+38     	; 0xe9e <__addsf3x+0x60>
     e78:	59 3f       	cpi	r21, 0xF9	; 249
     e7a:	50 f4       	brcc	.+20     	; 0xe90 <__addsf3x+0x52>
     e7c:	50 3e       	cpi	r21, 0xE0	; 224
     e7e:	68 f1       	brcs	.+90     	; 0xeda <__addsf3x+0x9c>
     e80:	1a 16       	cp	r1, r26
     e82:	f0 40       	sbci	r31, 0x00	; 0
     e84:	a2 2f       	mov	r26, r18
     e86:	23 2f       	mov	r18, r19
     e88:	34 2f       	mov	r19, r20
     e8a:	44 27       	eor	r20, r20
     e8c:	58 5f       	subi	r21, 0xF8	; 248
     e8e:	f3 cf       	rjmp	.-26     	; 0xe76 <__addsf3x+0x38>
     e90:	46 95       	lsr	r20
     e92:	37 95       	ror	r19
     e94:	27 95       	ror	r18
     e96:	a7 95       	ror	r26
     e98:	f0 40       	sbci	r31, 0x00	; 0
     e9a:	53 95       	inc	r21
     e9c:	c9 f7       	brne	.-14     	; 0xe90 <__addsf3x+0x52>
     e9e:	7e f4       	brtc	.+30     	; 0xebe <__addsf3x+0x80>
     ea0:	1f 16       	cp	r1, r31
     ea2:	ba 0b       	sbc	r27, r26
     ea4:	62 0b       	sbc	r22, r18
     ea6:	73 0b       	sbc	r23, r19
     ea8:	84 0b       	sbc	r24, r20
     eaa:	ba f0       	brmi	.+46     	; 0xeda <__addsf3x+0x9c>
     eac:	91 50       	subi	r25, 0x01	; 1
     eae:	a1 f0       	breq	.+40     	; 0xed8 <__addsf3x+0x9a>
     eb0:	ff 0f       	add	r31, r31
     eb2:	bb 1f       	adc	r27, r27
     eb4:	66 1f       	adc	r22, r22
     eb6:	77 1f       	adc	r23, r23
     eb8:	88 1f       	adc	r24, r24
     eba:	c2 f7       	brpl	.-16     	; 0xeac <__addsf3x+0x6e>
     ebc:	0e c0       	rjmp	.+28     	; 0xeda <__addsf3x+0x9c>
     ebe:	ba 0f       	add	r27, r26
     ec0:	62 1f       	adc	r22, r18
     ec2:	73 1f       	adc	r23, r19
     ec4:	84 1f       	adc	r24, r20
     ec6:	48 f4       	brcc	.+18     	; 0xeda <__addsf3x+0x9c>
     ec8:	87 95       	ror	r24
     eca:	77 95       	ror	r23
     ecc:	67 95       	ror	r22
     ece:	b7 95       	ror	r27
     ed0:	f7 95       	ror	r31
     ed2:	9e 3f       	cpi	r25, 0xFE	; 254
     ed4:	08 f0       	brcs	.+2      	; 0xed8 <__addsf3x+0x9a>
     ed6:	b0 cf       	rjmp	.-160    	; 0xe38 <__addsf3+0x28>
     ed8:	93 95       	inc	r25
     eda:	88 0f       	add	r24, r24
     edc:	08 f0       	brcs	.+2      	; 0xee0 <__addsf3x+0xa2>
     ede:	99 27       	eor	r25, r25
     ee0:	ee 0f       	add	r30, r30
     ee2:	97 95       	ror	r25
     ee4:	87 95       	ror	r24
     ee6:	08 95       	ret

00000ee8 <__fixsfsi>:
     ee8:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fixunssfsi>
     eec:	68 94       	set
     eee:	b1 11       	cpse	r27, r1
     ef0:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__fp_szero>
     ef4:	08 95       	ret

00000ef6 <__fixunssfsi>:
     ef6:	0e 94 17 08 	call	0x102e	; 0x102e <__fp_splitA>
     efa:	88 f0       	brcs	.+34     	; 0xf1e <__fixunssfsi+0x28>
     efc:	9f 57       	subi	r25, 0x7F	; 127
     efe:	98 f0       	brcs	.+38     	; 0xf26 <__fixunssfsi+0x30>
     f00:	b9 2f       	mov	r27, r25
     f02:	99 27       	eor	r25, r25
     f04:	b7 51       	subi	r27, 0x17	; 23
     f06:	b0 f0       	brcs	.+44     	; 0xf34 <__fixunssfsi+0x3e>
     f08:	e1 f0       	breq	.+56     	; 0xf42 <__fixunssfsi+0x4c>
     f0a:	66 0f       	add	r22, r22
     f0c:	77 1f       	adc	r23, r23
     f0e:	88 1f       	adc	r24, r24
     f10:	99 1f       	adc	r25, r25
     f12:	1a f0       	brmi	.+6      	; 0xf1a <__fixunssfsi+0x24>
     f14:	ba 95       	dec	r27
     f16:	c9 f7       	brne	.-14     	; 0xf0a <__fixunssfsi+0x14>
     f18:	14 c0       	rjmp	.+40     	; 0xf42 <__fixunssfsi+0x4c>
     f1a:	b1 30       	cpi	r27, 0x01	; 1
     f1c:	91 f0       	breq	.+36     	; 0xf42 <__fixunssfsi+0x4c>
     f1e:	0e 94 31 08 	call	0x1062	; 0x1062 <__fp_zero>
     f22:	b1 e0       	ldi	r27, 0x01	; 1
     f24:	08 95       	ret
     f26:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__fp_zero>
     f2a:	67 2f       	mov	r22, r23
     f2c:	78 2f       	mov	r23, r24
     f2e:	88 27       	eor	r24, r24
     f30:	b8 5f       	subi	r27, 0xF8	; 248
     f32:	39 f0       	breq	.+14     	; 0xf42 <__fixunssfsi+0x4c>
     f34:	b9 3f       	cpi	r27, 0xF9	; 249
     f36:	cc f3       	brlt	.-14     	; 0xf2a <__fixunssfsi+0x34>
     f38:	86 95       	lsr	r24
     f3a:	77 95       	ror	r23
     f3c:	67 95       	ror	r22
     f3e:	b3 95       	inc	r27
     f40:	d9 f7       	brne	.-10     	; 0xf38 <__fixunssfsi+0x42>
     f42:	3e f4       	brtc	.+14     	; 0xf52 <__fixunssfsi+0x5c>
     f44:	90 95       	com	r25
     f46:	80 95       	com	r24
     f48:	70 95       	com	r23
     f4a:	61 95       	neg	r22
     f4c:	7f 4f       	sbci	r23, 0xFF	; 255
     f4e:	8f 4f       	sbci	r24, 0xFF	; 255
     f50:	9f 4f       	sbci	r25, 0xFF	; 255
     f52:	08 95       	ret

00000f54 <__floatunsisf>:
     f54:	e8 94       	clt
     f56:	09 c0       	rjmp	.+18     	; 0xf6a <__floatsisf+0x12>

00000f58 <__floatsisf>:
     f58:	97 fb       	bst	r25, 7
     f5a:	3e f4       	brtc	.+14     	; 0xf6a <__floatsisf+0x12>
     f5c:	90 95       	com	r25
     f5e:	80 95       	com	r24
     f60:	70 95       	com	r23
     f62:	61 95       	neg	r22
     f64:	7f 4f       	sbci	r23, 0xFF	; 255
     f66:	8f 4f       	sbci	r24, 0xFF	; 255
     f68:	9f 4f       	sbci	r25, 0xFF	; 255
     f6a:	99 23       	and	r25, r25
     f6c:	a9 f0       	breq	.+42     	; 0xf98 <__floatsisf+0x40>
     f6e:	f9 2f       	mov	r31, r25
     f70:	96 e9       	ldi	r25, 0x96	; 150
     f72:	bb 27       	eor	r27, r27
     f74:	93 95       	inc	r25
     f76:	f6 95       	lsr	r31
     f78:	87 95       	ror	r24
     f7a:	77 95       	ror	r23
     f7c:	67 95       	ror	r22
     f7e:	b7 95       	ror	r27
     f80:	f1 11       	cpse	r31, r1
     f82:	f8 cf       	rjmp	.-16     	; 0xf74 <__floatsisf+0x1c>
     f84:	fa f4       	brpl	.+62     	; 0xfc4 <__floatsisf+0x6c>
     f86:	bb 0f       	add	r27, r27
     f88:	11 f4       	brne	.+4      	; 0xf8e <__floatsisf+0x36>
     f8a:	60 ff       	sbrs	r22, 0
     f8c:	1b c0       	rjmp	.+54     	; 0xfc4 <__floatsisf+0x6c>
     f8e:	6f 5f       	subi	r22, 0xFF	; 255
     f90:	7f 4f       	sbci	r23, 0xFF	; 255
     f92:	8f 4f       	sbci	r24, 0xFF	; 255
     f94:	9f 4f       	sbci	r25, 0xFF	; 255
     f96:	16 c0       	rjmp	.+44     	; 0xfc4 <__floatsisf+0x6c>
     f98:	88 23       	and	r24, r24
     f9a:	11 f0       	breq	.+4      	; 0xfa0 <__floatsisf+0x48>
     f9c:	96 e9       	ldi	r25, 0x96	; 150
     f9e:	11 c0       	rjmp	.+34     	; 0xfc2 <__floatsisf+0x6a>
     fa0:	77 23       	and	r23, r23
     fa2:	21 f0       	breq	.+8      	; 0xfac <__floatsisf+0x54>
     fa4:	9e e8       	ldi	r25, 0x8E	; 142
     fa6:	87 2f       	mov	r24, r23
     fa8:	76 2f       	mov	r23, r22
     faa:	05 c0       	rjmp	.+10     	; 0xfb6 <__floatsisf+0x5e>
     fac:	66 23       	and	r22, r22
     fae:	71 f0       	breq	.+28     	; 0xfcc <__floatsisf+0x74>
     fb0:	96 e8       	ldi	r25, 0x86	; 134
     fb2:	86 2f       	mov	r24, r22
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	2a f0       	brmi	.+10     	; 0xfc4 <__floatsisf+0x6c>
     fba:	9a 95       	dec	r25
     fbc:	66 0f       	add	r22, r22
     fbe:	77 1f       	adc	r23, r23
     fc0:	88 1f       	adc	r24, r24
     fc2:	da f7       	brpl	.-10     	; 0xfba <__floatsisf+0x62>
     fc4:	88 0f       	add	r24, r24
     fc6:	96 95       	lsr	r25
     fc8:	87 95       	ror	r24
     fca:	97 f9       	bld	r25, 7
     fcc:	08 95       	ret

00000fce <__fp_inf>:
     fce:	97 f9       	bld	r25, 7
     fd0:	9f 67       	ori	r25, 0x7F	; 127
     fd2:	80 e8       	ldi	r24, 0x80	; 128
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	60 e0       	ldi	r22, 0x00	; 0
     fd8:	08 95       	ret

00000fda <__fp_nan>:
     fda:	9f ef       	ldi	r25, 0xFF	; 255
     fdc:	80 ec       	ldi	r24, 0xC0	; 192
     fde:	08 95       	ret

00000fe0 <__fp_pscA>:
     fe0:	00 24       	eor	r0, r0
     fe2:	0a 94       	dec	r0
     fe4:	16 16       	cp	r1, r22
     fe6:	17 06       	cpc	r1, r23
     fe8:	18 06       	cpc	r1, r24
     fea:	09 06       	cpc	r0, r25
     fec:	08 95       	ret

00000fee <__fp_pscB>:
     fee:	00 24       	eor	r0, r0
     ff0:	0a 94       	dec	r0
     ff2:	12 16       	cp	r1, r18
     ff4:	13 06       	cpc	r1, r19
     ff6:	14 06       	cpc	r1, r20
     ff8:	05 06       	cpc	r0, r21
     ffa:	08 95       	ret

00000ffc <__fp_round>:
     ffc:	09 2e       	mov	r0, r25
     ffe:	03 94       	inc	r0
    1000:	00 0c       	add	r0, r0
    1002:	11 f4       	brne	.+4      	; 0x1008 <__fp_round+0xc>
    1004:	88 23       	and	r24, r24
    1006:	52 f0       	brmi	.+20     	; 0x101c <__fp_round+0x20>
    1008:	bb 0f       	add	r27, r27
    100a:	40 f4       	brcc	.+16     	; 0x101c <__fp_round+0x20>
    100c:	bf 2b       	or	r27, r31
    100e:	11 f4       	brne	.+4      	; 0x1014 <__fp_round+0x18>
    1010:	60 ff       	sbrs	r22, 0
    1012:	04 c0       	rjmp	.+8      	; 0x101c <__fp_round+0x20>
    1014:	6f 5f       	subi	r22, 0xFF	; 255
    1016:	7f 4f       	sbci	r23, 0xFF	; 255
    1018:	8f 4f       	sbci	r24, 0xFF	; 255
    101a:	9f 4f       	sbci	r25, 0xFF	; 255
    101c:	08 95       	ret

0000101e <__fp_split3>:
    101e:	57 fd       	sbrc	r21, 7
    1020:	90 58       	subi	r25, 0x80	; 128
    1022:	44 0f       	add	r20, r20
    1024:	55 1f       	adc	r21, r21
    1026:	59 f0       	breq	.+22     	; 0x103e <__fp_splitA+0x10>
    1028:	5f 3f       	cpi	r21, 0xFF	; 255
    102a:	71 f0       	breq	.+28     	; 0x1048 <__fp_splitA+0x1a>
    102c:	47 95       	ror	r20

0000102e <__fp_splitA>:
    102e:	88 0f       	add	r24, r24
    1030:	97 fb       	bst	r25, 7
    1032:	99 1f       	adc	r25, r25
    1034:	61 f0       	breq	.+24     	; 0x104e <__fp_splitA+0x20>
    1036:	9f 3f       	cpi	r25, 0xFF	; 255
    1038:	79 f0       	breq	.+30     	; 0x1058 <__fp_splitA+0x2a>
    103a:	87 95       	ror	r24
    103c:	08 95       	ret
    103e:	12 16       	cp	r1, r18
    1040:	13 06       	cpc	r1, r19
    1042:	14 06       	cpc	r1, r20
    1044:	55 1f       	adc	r21, r21
    1046:	f2 cf       	rjmp	.-28     	; 0x102c <__fp_split3+0xe>
    1048:	46 95       	lsr	r20
    104a:	f1 df       	rcall	.-30     	; 0x102e <__fp_splitA>
    104c:	08 c0       	rjmp	.+16     	; 0x105e <__fp_splitA+0x30>
    104e:	16 16       	cp	r1, r22
    1050:	17 06       	cpc	r1, r23
    1052:	18 06       	cpc	r1, r24
    1054:	99 1f       	adc	r25, r25
    1056:	f1 cf       	rjmp	.-30     	; 0x103a <__fp_splitA+0xc>
    1058:	86 95       	lsr	r24
    105a:	71 05       	cpc	r23, r1
    105c:	61 05       	cpc	r22, r1
    105e:	08 94       	sec
    1060:	08 95       	ret

00001062 <__fp_zero>:
    1062:	e8 94       	clt

00001064 <__fp_szero>:
    1064:	bb 27       	eor	r27, r27
    1066:	66 27       	eor	r22, r22
    1068:	77 27       	eor	r23, r23
    106a:	cb 01       	movw	r24, r22
    106c:	97 f9       	bld	r25, 7
    106e:	08 95       	ret

00001070 <__mulsf3>:
    1070:	0e 94 4b 08 	call	0x1096	; 0x1096 <__mulsf3x>
    1074:	0c 94 fe 07 	jmp	0xffc	; 0xffc <__fp_round>
    1078:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__fp_pscA>
    107c:	38 f0       	brcs	.+14     	; 0x108c <__mulsf3+0x1c>
    107e:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_pscB>
    1082:	20 f0       	brcs	.+8      	; 0x108c <__mulsf3+0x1c>
    1084:	95 23       	and	r25, r21
    1086:	11 f0       	breq	.+4      	; 0x108c <__mulsf3+0x1c>
    1088:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>
    108c:	0c 94 ed 07 	jmp	0xfda	; 0xfda <__fp_nan>
    1090:	11 24       	eor	r1, r1
    1092:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__fp_szero>

00001096 <__mulsf3x>:
    1096:	0e 94 0f 08 	call	0x101e	; 0x101e <__fp_split3>
    109a:	70 f3       	brcs	.-36     	; 0x1078 <__mulsf3+0x8>

0000109c <__mulsf3_pse>:
    109c:	95 9f       	mul	r25, r21
    109e:	c1 f3       	breq	.-16     	; 0x1090 <__mulsf3+0x20>
    10a0:	95 0f       	add	r25, r21
    10a2:	50 e0       	ldi	r21, 0x00	; 0
    10a4:	55 1f       	adc	r21, r21
    10a6:	62 9f       	mul	r22, r18
    10a8:	f0 01       	movw	r30, r0
    10aa:	72 9f       	mul	r23, r18
    10ac:	bb 27       	eor	r27, r27
    10ae:	f0 0d       	add	r31, r0
    10b0:	b1 1d       	adc	r27, r1
    10b2:	63 9f       	mul	r22, r19
    10b4:	aa 27       	eor	r26, r26
    10b6:	f0 0d       	add	r31, r0
    10b8:	b1 1d       	adc	r27, r1
    10ba:	aa 1f       	adc	r26, r26
    10bc:	64 9f       	mul	r22, r20
    10be:	66 27       	eor	r22, r22
    10c0:	b0 0d       	add	r27, r0
    10c2:	a1 1d       	adc	r26, r1
    10c4:	66 1f       	adc	r22, r22
    10c6:	82 9f       	mul	r24, r18
    10c8:	22 27       	eor	r18, r18
    10ca:	b0 0d       	add	r27, r0
    10cc:	a1 1d       	adc	r26, r1
    10ce:	62 1f       	adc	r22, r18
    10d0:	73 9f       	mul	r23, r19
    10d2:	b0 0d       	add	r27, r0
    10d4:	a1 1d       	adc	r26, r1
    10d6:	62 1f       	adc	r22, r18
    10d8:	83 9f       	mul	r24, r19
    10da:	a0 0d       	add	r26, r0
    10dc:	61 1d       	adc	r22, r1
    10de:	22 1f       	adc	r18, r18
    10e0:	74 9f       	mul	r23, r20
    10e2:	33 27       	eor	r19, r19
    10e4:	a0 0d       	add	r26, r0
    10e6:	61 1d       	adc	r22, r1
    10e8:	23 1f       	adc	r18, r19
    10ea:	84 9f       	mul	r24, r20
    10ec:	60 0d       	add	r22, r0
    10ee:	21 1d       	adc	r18, r1
    10f0:	82 2f       	mov	r24, r18
    10f2:	76 2f       	mov	r23, r22
    10f4:	6a 2f       	mov	r22, r26
    10f6:	11 24       	eor	r1, r1
    10f8:	9f 57       	subi	r25, 0x7F	; 127
    10fa:	50 40       	sbci	r21, 0x00	; 0
    10fc:	9a f0       	brmi	.+38     	; 0x1124 <__mulsf3_pse+0x88>
    10fe:	f1 f0       	breq	.+60     	; 0x113c <__mulsf3_pse+0xa0>
    1100:	88 23       	and	r24, r24
    1102:	4a f0       	brmi	.+18     	; 0x1116 <__mulsf3_pse+0x7a>
    1104:	ee 0f       	add	r30, r30
    1106:	ff 1f       	adc	r31, r31
    1108:	bb 1f       	adc	r27, r27
    110a:	66 1f       	adc	r22, r22
    110c:	77 1f       	adc	r23, r23
    110e:	88 1f       	adc	r24, r24
    1110:	91 50       	subi	r25, 0x01	; 1
    1112:	50 40       	sbci	r21, 0x00	; 0
    1114:	a9 f7       	brne	.-22     	; 0x1100 <__mulsf3_pse+0x64>
    1116:	9e 3f       	cpi	r25, 0xFE	; 254
    1118:	51 05       	cpc	r21, r1
    111a:	80 f0       	brcs	.+32     	; 0x113c <__mulsf3_pse+0xa0>
    111c:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>
    1120:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__fp_szero>
    1124:	5f 3f       	cpi	r21, 0xFF	; 255
    1126:	e4 f3       	brlt	.-8      	; 0x1120 <__mulsf3_pse+0x84>
    1128:	98 3e       	cpi	r25, 0xE8	; 232
    112a:	d4 f3       	brlt	.-12     	; 0x1120 <__mulsf3_pse+0x84>
    112c:	86 95       	lsr	r24
    112e:	77 95       	ror	r23
    1130:	67 95       	ror	r22
    1132:	b7 95       	ror	r27
    1134:	f7 95       	ror	r31
    1136:	e7 95       	ror	r30
    1138:	9f 5f       	subi	r25, 0xFF	; 255
    113a:	c1 f7       	brne	.-16     	; 0x112c <__mulsf3_pse+0x90>
    113c:	fe 2b       	or	r31, r30
    113e:	88 0f       	add	r24, r24
    1140:	91 1d       	adc	r25, r1
    1142:	96 95       	lsr	r25
    1144:	87 95       	ror	r24
    1146:	97 f9       	bld	r25, 7
    1148:	08 95       	ret

0000114a <pow>:
    114a:	fa 01       	movw	r30, r20
    114c:	ee 0f       	add	r30, r30
    114e:	ff 1f       	adc	r31, r31
    1150:	30 96       	adiw	r30, 0x00	; 0
    1152:	21 05       	cpc	r18, r1
    1154:	31 05       	cpc	r19, r1
    1156:	a1 f1       	breq	.+104    	; 0x11c0 <pow+0x76>
    1158:	61 15       	cp	r22, r1
    115a:	71 05       	cpc	r23, r1
    115c:	61 f4       	brne	.+24     	; 0x1176 <pow+0x2c>
    115e:	80 38       	cpi	r24, 0x80	; 128
    1160:	bf e3       	ldi	r27, 0x3F	; 63
    1162:	9b 07       	cpc	r25, r27
    1164:	49 f1       	breq	.+82     	; 0x11b8 <pow+0x6e>
    1166:	68 94       	set
    1168:	90 38       	cpi	r25, 0x80	; 128
    116a:	81 05       	cpc	r24, r1
    116c:	61 f0       	breq	.+24     	; 0x1186 <pow+0x3c>
    116e:	80 38       	cpi	r24, 0x80	; 128
    1170:	bf ef       	ldi	r27, 0xFF	; 255
    1172:	9b 07       	cpc	r25, r27
    1174:	41 f0       	breq	.+16     	; 0x1186 <pow+0x3c>
    1176:	99 23       	and	r25, r25
    1178:	4a f5       	brpl	.+82     	; 0x11cc <pow+0x82>
    117a:	ff 3f       	cpi	r31, 0xFF	; 255
    117c:	e1 05       	cpc	r30, r1
    117e:	31 05       	cpc	r19, r1
    1180:	21 05       	cpc	r18, r1
    1182:	19 f1       	breq	.+70     	; 0x11ca <pow+0x80>
    1184:	e8 94       	clt
    1186:	08 94       	sec
    1188:	e7 95       	ror	r30
    118a:	d9 01       	movw	r26, r18
    118c:	aa 23       	and	r26, r26
    118e:	29 f4       	brne	.+10     	; 0x119a <pow+0x50>
    1190:	ab 2f       	mov	r26, r27
    1192:	be 2f       	mov	r27, r30
    1194:	f8 5f       	subi	r31, 0xF8	; 248
    1196:	d0 f3       	brcs	.-12     	; 0x118c <pow+0x42>
    1198:	10 c0       	rjmp	.+32     	; 0x11ba <pow+0x70>
    119a:	ff 5f       	subi	r31, 0xFF	; 255
    119c:	70 f4       	brcc	.+28     	; 0x11ba <pow+0x70>
    119e:	a6 95       	lsr	r26
    11a0:	e0 f7       	brcc	.-8      	; 0x119a <pow+0x50>
    11a2:	f7 39       	cpi	r31, 0x97	; 151
    11a4:	50 f0       	brcs	.+20     	; 0x11ba <pow+0x70>
    11a6:	19 f0       	breq	.+6      	; 0x11ae <pow+0x64>
    11a8:	ff 3a       	cpi	r31, 0xAF	; 175
    11aa:	38 f4       	brcc	.+14     	; 0x11ba <pow+0x70>
    11ac:	9f 77       	andi	r25, 0x7F	; 127
    11ae:	9f 93       	push	r25
    11b0:	0d d0       	rcall	.+26     	; 0x11cc <pow+0x82>
    11b2:	0f 90       	pop	r0
    11b4:	07 fc       	sbrc	r0, 7
    11b6:	90 58       	subi	r25, 0x80	; 128
    11b8:	08 95       	ret
    11ba:	46 f0       	brts	.+16     	; 0x11cc <pow+0x82>
    11bc:	0c 94 ed 07 	jmp	0xfda	; 0xfda <__fp_nan>
    11c0:	60 e0       	ldi	r22, 0x00	; 0
    11c2:	70 e0       	ldi	r23, 0x00	; 0
    11c4:	80 e8       	ldi	r24, 0x80	; 128
    11c6:	9f e3       	ldi	r25, 0x3F	; 63
    11c8:	08 95       	ret
    11ca:	4f e7       	ldi	r20, 0x7F	; 127
    11cc:	9f 77       	andi	r25, 0x7F	; 127
    11ce:	5f 93       	push	r21
    11d0:	4f 93       	push	r20
    11d2:	3f 93       	push	r19
    11d4:	2f 93       	push	r18
    11d6:	0e 94 a0 09 	call	0x1340	; 0x1340 <log>
    11da:	2f 91       	pop	r18
    11dc:	3f 91       	pop	r19
    11de:	4f 91       	pop	r20
    11e0:	5f 91       	pop	r21
    11e2:	0e 94 38 08 	call	0x1070	; 0x1070 <__mulsf3>
    11e6:	0c 94 fd 08 	jmp	0x11fa	; 0x11fa <exp>
    11ea:	29 f4       	brne	.+10     	; 0x11f6 <pow+0xac>
    11ec:	16 f0       	brts	.+4      	; 0x11f2 <pow+0xa8>
    11ee:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>
    11f2:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__fp_zero>
    11f6:	0c 94 ed 07 	jmp	0xfda	; 0xfda <__fp_nan>

000011fa <exp>:
    11fa:	0e 94 17 08 	call	0x102e	; 0x102e <__fp_splitA>
    11fe:	a8 f3       	brcs	.-22     	; 0x11ea <pow+0xa0>
    1200:	96 38       	cpi	r25, 0x86	; 134
    1202:	a0 f7       	brcc	.-24     	; 0x11ec <pow+0xa2>
    1204:	07 f8       	bld	r0, 7
    1206:	0f 92       	push	r0
    1208:	e8 94       	clt
    120a:	2b e3       	ldi	r18, 0x3B	; 59
    120c:	3a ea       	ldi	r19, 0xAA	; 170
    120e:	48 eb       	ldi	r20, 0xB8	; 184
    1210:	5f e7       	ldi	r21, 0x7F	; 127
    1212:	0e 94 4e 08 	call	0x109c	; 0x109c <__mulsf3_pse>
    1216:	0f 92       	push	r0
    1218:	0f 92       	push	r0
    121a:	0f 92       	push	r0
    121c:	4d b7       	in	r20, 0x3d	; 61
    121e:	5e b7       	in	r21, 0x3e	; 62
    1220:	0f 92       	push	r0
    1222:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <modf>
    1226:	e8 e5       	ldi	r30, 0x58	; 88
    1228:	f1 e0       	ldi	r31, 0x01	; 1
    122a:	0e 94 2f 09 	call	0x125e	; 0x125e <__fp_powser>
    122e:	4f 91       	pop	r20
    1230:	5f 91       	pop	r21
    1232:	ef 91       	pop	r30
    1234:	ff 91       	pop	r31
    1236:	e5 95       	asr	r30
    1238:	ee 1f       	adc	r30, r30
    123a:	ff 1f       	adc	r31, r31
    123c:	49 f0       	breq	.+18     	; 0x1250 <exp+0x56>
    123e:	fe 57       	subi	r31, 0x7E	; 126
    1240:	e0 68       	ori	r30, 0x80	; 128
    1242:	44 27       	eor	r20, r20
    1244:	ee 0f       	add	r30, r30
    1246:	44 1f       	adc	r20, r20
    1248:	fa 95       	dec	r31
    124a:	e1 f7       	brne	.-8      	; 0x1244 <exp+0x4a>
    124c:	41 95       	neg	r20
    124e:	55 0b       	sbc	r21, r21
    1250:	0e 94 62 09 	call	0x12c4	; 0x12c4 <ldexp>
    1254:	0f 90       	pop	r0
    1256:	07 fe       	sbrs	r0, 7
    1258:	0c 94 56 09 	jmp	0x12ac	; 0x12ac <inverse>
    125c:	08 95       	ret

0000125e <__fp_powser>:
    125e:	df 93       	push	r29
    1260:	cf 93       	push	r28
    1262:	1f 93       	push	r17
    1264:	0f 93       	push	r16
    1266:	ff 92       	push	r15
    1268:	ef 92       	push	r14
    126a:	df 92       	push	r13
    126c:	7b 01       	movw	r14, r22
    126e:	8c 01       	movw	r16, r24
    1270:	68 94       	set
    1272:	06 c0       	rjmp	.+12     	; 0x1280 <__fp_powser+0x22>
    1274:	da 2e       	mov	r13, r26
    1276:	ef 01       	movw	r28, r30
    1278:	0e 94 4b 08 	call	0x1096	; 0x1096 <__mulsf3x>
    127c:	fe 01       	movw	r30, r28
    127e:	e8 94       	clt
    1280:	a5 91       	lpm	r26, Z+
    1282:	25 91       	lpm	r18, Z+
    1284:	35 91       	lpm	r19, Z+
    1286:	45 91       	lpm	r20, Z+
    1288:	55 91       	lpm	r21, Z+
    128a:	a6 f3       	brts	.-24     	; 0x1274 <__fp_powser+0x16>
    128c:	ef 01       	movw	r28, r30
    128e:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__addsf3x>
    1292:	fe 01       	movw	r30, r28
    1294:	97 01       	movw	r18, r14
    1296:	a8 01       	movw	r20, r16
    1298:	da 94       	dec	r13
    129a:	69 f7       	brne	.-38     	; 0x1276 <__fp_powser+0x18>
    129c:	df 90       	pop	r13
    129e:	ef 90       	pop	r14
    12a0:	ff 90       	pop	r15
    12a2:	0f 91       	pop	r16
    12a4:	1f 91       	pop	r17
    12a6:	cf 91       	pop	r28
    12a8:	df 91       	pop	r29
    12aa:	08 95       	ret

000012ac <inverse>:
    12ac:	9b 01       	movw	r18, r22
    12ae:	ac 01       	movw	r20, r24
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	80 e8       	ldi	r24, 0x80	; 128
    12b6:	9f e3       	ldi	r25, 0x3F	; 63
    12b8:	0c 94 1c 0a 	jmp	0x1438	; 0x1438 <__divsf3>
    12bc:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>
    12c0:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__fp_mpack>

000012c4 <ldexp>:
    12c4:	0e 94 17 08 	call	0x102e	; 0x102e <__fp_splitA>
    12c8:	d8 f3       	brcs	.-10     	; 0x12c0 <inverse+0x14>
    12ca:	99 23       	and	r25, r25
    12cc:	c9 f3       	breq	.-14     	; 0x12c0 <inverse+0x14>
    12ce:	94 0f       	add	r25, r20
    12d0:	51 1d       	adc	r21, r1
    12d2:	a3 f3       	brvs	.-24     	; 0x12bc <inverse+0x10>
    12d4:	91 50       	subi	r25, 0x01	; 1
    12d6:	50 40       	sbci	r21, 0x00	; 0
    12d8:	94 f0       	brlt	.+36     	; 0x12fe <ldexp+0x3a>
    12da:	59 f0       	breq	.+22     	; 0x12f2 <ldexp+0x2e>
    12dc:	88 23       	and	r24, r24
    12de:	32 f0       	brmi	.+12     	; 0x12ec <ldexp+0x28>
    12e0:	66 0f       	add	r22, r22
    12e2:	77 1f       	adc	r23, r23
    12e4:	88 1f       	adc	r24, r24
    12e6:	91 50       	subi	r25, 0x01	; 1
    12e8:	50 40       	sbci	r21, 0x00	; 0
    12ea:	c1 f7       	brne	.-16     	; 0x12dc <ldexp+0x18>
    12ec:	9e 3f       	cpi	r25, 0xFE	; 254
    12ee:	51 05       	cpc	r21, r1
    12f0:	2c f7       	brge	.-54     	; 0x12bc <inverse+0x10>
    12f2:	88 0f       	add	r24, r24
    12f4:	91 1d       	adc	r25, r1
    12f6:	96 95       	lsr	r25
    12f8:	87 95       	ror	r24
    12fa:	97 f9       	bld	r25, 7
    12fc:	08 95       	ret
    12fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1300:	ac f0       	brlt	.+42     	; 0x132c <ldexp+0x68>
    1302:	98 3e       	cpi	r25, 0xE8	; 232
    1304:	9c f0       	brlt	.+38     	; 0x132c <ldexp+0x68>
    1306:	bb 27       	eor	r27, r27
    1308:	86 95       	lsr	r24
    130a:	77 95       	ror	r23
    130c:	67 95       	ror	r22
    130e:	b7 95       	ror	r27
    1310:	08 f4       	brcc	.+2      	; 0x1314 <ldexp+0x50>
    1312:	b1 60       	ori	r27, 0x01	; 1
    1314:	93 95       	inc	r25
    1316:	c1 f7       	brne	.-16     	; 0x1308 <ldexp+0x44>
    1318:	bb 0f       	add	r27, r27
    131a:	58 f7       	brcc	.-42     	; 0x12f2 <ldexp+0x2e>
    131c:	11 f4       	brne	.+4      	; 0x1322 <ldexp+0x5e>
    131e:	60 ff       	sbrs	r22, 0
    1320:	e8 cf       	rjmp	.-48     	; 0x12f2 <ldexp+0x2e>
    1322:	6f 5f       	subi	r22, 0xFF	; 255
    1324:	7f 4f       	sbci	r23, 0xFF	; 255
    1326:	8f 4f       	sbci	r24, 0xFF	; 255
    1328:	9f 4f       	sbci	r25, 0xFF	; 255
    132a:	e3 cf       	rjmp	.-58     	; 0x12f2 <ldexp+0x2e>
    132c:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__fp_szero>
    1330:	16 f0       	brts	.+4      	; 0x1336 <ldexp+0x72>
    1332:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__fp_mpack>
    1336:	0c 94 ed 07 	jmp	0xfda	; 0xfda <__fp_nan>
    133a:	68 94       	set
    133c:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>

00001340 <log>:
    1340:	0e 94 17 08 	call	0x102e	; 0x102e <__fp_splitA>
    1344:	a8 f3       	brcs	.-22     	; 0x1330 <ldexp+0x6c>
    1346:	99 23       	and	r25, r25
    1348:	c1 f3       	breq	.-16     	; 0x133a <ldexp+0x76>
    134a:	ae f3       	brts	.-22     	; 0x1336 <ldexp+0x72>
    134c:	df 93       	push	r29
    134e:	cf 93       	push	r28
    1350:	1f 93       	push	r17
    1352:	0f 93       	push	r16
    1354:	ff 92       	push	r15
    1356:	c9 2f       	mov	r28, r25
    1358:	dd 27       	eor	r29, r29
    135a:	88 23       	and	r24, r24
    135c:	2a f0       	brmi	.+10     	; 0x1368 <log+0x28>
    135e:	21 97       	sbiw	r28, 0x01	; 1
    1360:	66 0f       	add	r22, r22
    1362:	77 1f       	adc	r23, r23
    1364:	88 1f       	adc	r24, r24
    1366:	da f7       	brpl	.-10     	; 0x135e <log+0x1e>
    1368:	20 e0       	ldi	r18, 0x00	; 0
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	40 e8       	ldi	r20, 0x80	; 128
    136e:	5f eb       	ldi	r21, 0xBF	; 191
    1370:	9f e3       	ldi	r25, 0x3F	; 63
    1372:	88 39       	cpi	r24, 0x98	; 152
    1374:	20 f0       	brcs	.+8      	; 0x137e <log+0x3e>
    1376:	80 3e       	cpi	r24, 0xE0	; 224
    1378:	38 f0       	brcs	.+14     	; 0x1388 <log+0x48>
    137a:	21 96       	adiw	r28, 0x01	; 1
    137c:	8f 77       	andi	r24, 0x7F	; 127
    137e:	0e 94 08 07 	call	0xe10	; 0xe10 <__addsf3>
    1382:	e0 e8       	ldi	r30, 0x80	; 128
    1384:	f1 e0       	ldi	r31, 0x01	; 1
    1386:	04 c0       	rjmp	.+8      	; 0x1390 <log+0x50>
    1388:	0e 94 08 07 	call	0xe10	; 0xe10 <__addsf3>
    138c:	ed ea       	ldi	r30, 0xAD	; 173
    138e:	f1 e0       	ldi	r31, 0x01	; 1
    1390:	0e 94 2f 09 	call	0x125e	; 0x125e <__fp_powser>
    1394:	8b 01       	movw	r16, r22
    1396:	be 01       	movw	r22, r28
    1398:	ec 01       	movw	r28, r24
    139a:	fb 2e       	mov	r15, r27
    139c:	6f 57       	subi	r22, 0x7F	; 127
    139e:	71 09       	sbc	r23, r1
    13a0:	75 95       	asr	r23
    13a2:	77 1f       	adc	r23, r23
    13a4:	88 0b       	sbc	r24, r24
    13a6:	99 0b       	sbc	r25, r25
    13a8:	0e 94 ac 07 	call	0xf58	; 0xf58 <__floatsisf>
    13ac:	28 e1       	ldi	r18, 0x18	; 24
    13ae:	32 e7       	ldi	r19, 0x72	; 114
    13b0:	41 e3       	ldi	r20, 0x31	; 49
    13b2:	5f e3       	ldi	r21, 0x3F	; 63
    13b4:	0e 94 4b 08 	call	0x1096	; 0x1096 <__mulsf3x>
    13b8:	af 2d       	mov	r26, r15
    13ba:	98 01       	movw	r18, r16
    13bc:	ae 01       	movw	r20, r28
    13be:	ff 90       	pop	r15
    13c0:	0f 91       	pop	r16
    13c2:	1f 91       	pop	r17
    13c4:	cf 91       	pop	r28
    13c6:	df 91       	pop	r29
    13c8:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__addsf3x>
    13cc:	0c 94 fe 07 	jmp	0xffc	; 0xffc <__fp_round>

000013d0 <modf>:
    13d0:	fa 01       	movw	r30, r20
    13d2:	dc 01       	movw	r26, r24
    13d4:	aa 0f       	add	r26, r26
    13d6:	bb 1f       	adc	r27, r27
    13d8:	9b 01       	movw	r18, r22
    13da:	ac 01       	movw	r20, r24
    13dc:	bf 57       	subi	r27, 0x7F	; 127
    13de:	28 f4       	brcc	.+10     	; 0x13ea <modf+0x1a>
    13e0:	22 27       	eor	r18, r18
    13e2:	33 27       	eor	r19, r19
    13e4:	44 27       	eor	r20, r20
    13e6:	50 78       	andi	r21, 0x80	; 128
    13e8:	20 c0       	rjmp	.+64     	; 0x142a <modf+0x5a>
    13ea:	b7 51       	subi	r27, 0x17	; 23
    13ec:	90 f4       	brcc	.+36     	; 0x1412 <modf+0x42>
    13ee:	ab 2f       	mov	r26, r27
    13f0:	00 24       	eor	r0, r0
    13f2:	46 95       	lsr	r20
    13f4:	37 95       	ror	r19
    13f6:	27 95       	ror	r18
    13f8:	01 1c       	adc	r0, r1
    13fa:	a3 95       	inc	r26
    13fc:	d2 f3       	brmi	.-12     	; 0x13f2 <modf+0x22>
    13fe:	00 20       	and	r0, r0
    1400:	71 f0       	breq	.+28     	; 0x141e <modf+0x4e>
    1402:	22 0f       	add	r18, r18
    1404:	33 1f       	adc	r19, r19
    1406:	44 1f       	adc	r20, r20
    1408:	b3 95       	inc	r27
    140a:	da f3       	brmi	.-10     	; 0x1402 <modf+0x32>
    140c:	0e d0       	rcall	.+28     	; 0x142a <modf+0x5a>
    140e:	0c 94 07 07 	jmp	0xe0e	; 0xe0e <__subsf3>
    1412:	61 30       	cpi	r22, 0x01	; 1
    1414:	71 05       	cpc	r23, r1
    1416:	a0 e8       	ldi	r26, 0x80	; 128
    1418:	8a 07       	cpc	r24, r26
    141a:	b9 46       	sbci	r27, 0x69	; 105
    141c:	30 f4       	brcc	.+12     	; 0x142a <modf+0x5a>
    141e:	9b 01       	movw	r18, r22
    1420:	ac 01       	movw	r20, r24
    1422:	66 27       	eor	r22, r22
    1424:	77 27       	eor	r23, r23
    1426:	88 27       	eor	r24, r24
    1428:	90 78       	andi	r25, 0x80	; 128
    142a:	30 96       	adiw	r30, 0x00	; 0
    142c:	21 f0       	breq	.+8      	; 0x1436 <modf+0x66>
    142e:	20 83       	st	Z, r18
    1430:	31 83       	std	Z+1, r19	; 0x01
    1432:	42 83       	std	Z+2, r20	; 0x02
    1434:	53 83       	std	Z+3, r21	; 0x03
    1436:	08 95       	ret

00001438 <__divsf3>:
    1438:	0e 94 30 0a 	call	0x1460	; 0x1460 <__divsf3x>
    143c:	0c 94 fe 07 	jmp	0xffc	; 0xffc <__fp_round>
    1440:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_pscB>
    1444:	58 f0       	brcs	.+22     	; 0x145c <__divsf3+0x24>
    1446:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__fp_pscA>
    144a:	40 f0       	brcs	.+16     	; 0x145c <__divsf3+0x24>
    144c:	29 f4       	brne	.+10     	; 0x1458 <__divsf3+0x20>
    144e:	5f 3f       	cpi	r21, 0xFF	; 255
    1450:	29 f0       	breq	.+10     	; 0x145c <__divsf3+0x24>
    1452:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>
    1456:	51 11       	cpse	r21, r1
    1458:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__fp_szero>
    145c:	0c 94 ed 07 	jmp	0xfda	; 0xfda <__fp_nan>

00001460 <__divsf3x>:
    1460:	0e 94 0f 08 	call	0x101e	; 0x101e <__fp_split3>
    1464:	68 f3       	brcs	.-38     	; 0x1440 <__divsf3+0x8>

00001466 <__divsf3_pse>:
    1466:	99 23       	and	r25, r25
    1468:	b1 f3       	breq	.-20     	; 0x1456 <__divsf3+0x1e>
    146a:	55 23       	and	r21, r21
    146c:	91 f3       	breq	.-28     	; 0x1452 <__divsf3+0x1a>
    146e:	95 1b       	sub	r25, r21
    1470:	55 0b       	sbc	r21, r21
    1472:	bb 27       	eor	r27, r27
    1474:	aa 27       	eor	r26, r26
    1476:	62 17       	cp	r22, r18
    1478:	73 07       	cpc	r23, r19
    147a:	84 07       	cpc	r24, r20
    147c:	38 f0       	brcs	.+14     	; 0x148c <__divsf3_pse+0x26>
    147e:	9f 5f       	subi	r25, 0xFF	; 255
    1480:	5f 4f       	sbci	r21, 0xFF	; 255
    1482:	22 0f       	add	r18, r18
    1484:	33 1f       	adc	r19, r19
    1486:	44 1f       	adc	r20, r20
    1488:	aa 1f       	adc	r26, r26
    148a:	a9 f3       	breq	.-22     	; 0x1476 <__divsf3_pse+0x10>
    148c:	35 d0       	rcall	.+106    	; 0x14f8 <__divsf3_pse+0x92>
    148e:	0e 2e       	mov	r0, r30
    1490:	3a f0       	brmi	.+14     	; 0x14a0 <__divsf3_pse+0x3a>
    1492:	e0 e8       	ldi	r30, 0x80	; 128
    1494:	32 d0       	rcall	.+100    	; 0x14fa <__divsf3_pse+0x94>
    1496:	91 50       	subi	r25, 0x01	; 1
    1498:	50 40       	sbci	r21, 0x00	; 0
    149a:	e6 95       	lsr	r30
    149c:	00 1c       	adc	r0, r0
    149e:	ca f7       	brpl	.-14     	; 0x1492 <__divsf3_pse+0x2c>
    14a0:	2b d0       	rcall	.+86     	; 0x14f8 <__divsf3_pse+0x92>
    14a2:	fe 2f       	mov	r31, r30
    14a4:	29 d0       	rcall	.+82     	; 0x14f8 <__divsf3_pse+0x92>
    14a6:	66 0f       	add	r22, r22
    14a8:	77 1f       	adc	r23, r23
    14aa:	88 1f       	adc	r24, r24
    14ac:	bb 1f       	adc	r27, r27
    14ae:	26 17       	cp	r18, r22
    14b0:	37 07       	cpc	r19, r23
    14b2:	48 07       	cpc	r20, r24
    14b4:	ab 07       	cpc	r26, r27
    14b6:	b0 e8       	ldi	r27, 0x80	; 128
    14b8:	09 f0       	breq	.+2      	; 0x14bc <__divsf3_pse+0x56>
    14ba:	bb 0b       	sbc	r27, r27
    14bc:	80 2d       	mov	r24, r0
    14be:	bf 01       	movw	r22, r30
    14c0:	ff 27       	eor	r31, r31
    14c2:	93 58       	subi	r25, 0x83	; 131
    14c4:	5f 4f       	sbci	r21, 0xFF	; 255
    14c6:	3a f0       	brmi	.+14     	; 0x14d6 <__divsf3_pse+0x70>
    14c8:	9e 3f       	cpi	r25, 0xFE	; 254
    14ca:	51 05       	cpc	r21, r1
    14cc:	78 f0       	brcs	.+30     	; 0x14ec <__divsf3_pse+0x86>
    14ce:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_inf>
    14d2:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__fp_szero>
    14d6:	5f 3f       	cpi	r21, 0xFF	; 255
    14d8:	e4 f3       	brlt	.-8      	; 0x14d2 <__divsf3_pse+0x6c>
    14da:	98 3e       	cpi	r25, 0xE8	; 232
    14dc:	d4 f3       	brlt	.-12     	; 0x14d2 <__divsf3_pse+0x6c>
    14de:	86 95       	lsr	r24
    14e0:	77 95       	ror	r23
    14e2:	67 95       	ror	r22
    14e4:	b7 95       	ror	r27
    14e6:	f7 95       	ror	r31
    14e8:	9f 5f       	subi	r25, 0xFF	; 255
    14ea:	c9 f7       	brne	.-14     	; 0x14de <__divsf3_pse+0x78>
    14ec:	88 0f       	add	r24, r24
    14ee:	91 1d       	adc	r25, r1
    14f0:	96 95       	lsr	r25
    14f2:	87 95       	ror	r24
    14f4:	97 f9       	bld	r25, 7
    14f6:	08 95       	ret
    14f8:	e1 e0       	ldi	r30, 0x01	; 1
    14fa:	66 0f       	add	r22, r22
    14fc:	77 1f       	adc	r23, r23
    14fe:	88 1f       	adc	r24, r24
    1500:	bb 1f       	adc	r27, r27
    1502:	62 17       	cp	r22, r18
    1504:	73 07       	cpc	r23, r19
    1506:	84 07       	cpc	r24, r20
    1508:	ba 07       	cpc	r27, r26
    150a:	20 f0       	brcs	.+8      	; 0x1514 <__divsf3_pse+0xae>
    150c:	62 1b       	sub	r22, r18
    150e:	73 0b       	sbc	r23, r19
    1510:	84 0b       	sbc	r24, r20
    1512:	ba 0b       	sbc	r27, r26
    1514:	ee 1f       	adc	r30, r30
    1516:	88 f7       	brcc	.-30     	; 0x14fa <__divsf3_pse+0x94>
    1518:	e0 95       	com	r30
    151a:	08 95       	ret

0000151c <__fp_mpack>:
    151c:	9f 3f       	cpi	r25, 0xFF	; 255
    151e:	31 f0       	breq	.+12     	; 0x152c <__fp_mpack_finite+0xc>

00001520 <__fp_mpack_finite>:
    1520:	91 50       	subi	r25, 0x01	; 1
    1522:	20 f4       	brcc	.+8      	; 0x152c <__fp_mpack_finite+0xc>
    1524:	87 95       	ror	r24
    1526:	77 95       	ror	r23
    1528:	67 95       	ror	r22
    152a:	b7 95       	ror	r27
    152c:	88 0f       	add	r24, r24
    152e:	91 1d       	adc	r25, r1
    1530:	96 95       	lsr	r25
    1532:	87 95       	ror	r24
    1534:	97 f9       	bld	r25, 7
    1536:	08 95       	ret

00001538 <__udivmodqi4>:
    1538:	99 1b       	sub	r25, r25
    153a:	79 e0       	ldi	r23, 0x09	; 9
    153c:	04 c0       	rjmp	.+8      	; 0x1546 <__udivmodqi4_ep>

0000153e <__udivmodqi4_loop>:
    153e:	99 1f       	adc	r25, r25
    1540:	96 17       	cp	r25, r22
    1542:	08 f0       	brcs	.+2      	; 0x1546 <__udivmodqi4_ep>
    1544:	96 1b       	sub	r25, r22

00001546 <__udivmodqi4_ep>:
    1546:	88 1f       	adc	r24, r24
    1548:	7a 95       	dec	r23
    154a:	c9 f7       	brne	.-14     	; 0x153e <__udivmodqi4_loop>
    154c:	80 95       	com	r24
    154e:	08 95       	ret

00001550 <__divmodhi4>:
    1550:	97 fb       	bst	r25, 7
    1552:	07 2e       	mov	r0, r23
    1554:	16 f4       	brtc	.+4      	; 0x155a <__divmodhi4+0xa>
    1556:	00 94       	com	r0
    1558:	07 d0       	rcall	.+14     	; 0x1568 <__divmodhi4_neg1>
    155a:	77 fd       	sbrc	r23, 7
    155c:	09 d0       	rcall	.+18     	; 0x1570 <__divmodhi4_neg2>
    155e:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__udivmodhi4>
    1562:	07 fc       	sbrc	r0, 7
    1564:	05 d0       	rcall	.+10     	; 0x1570 <__divmodhi4_neg2>
    1566:	3e f4       	brtc	.+14     	; 0x1576 <__divmodhi4_exit>

00001568 <__divmodhi4_neg1>:
    1568:	90 95       	com	r25
    156a:	81 95       	neg	r24
    156c:	9f 4f       	sbci	r25, 0xFF	; 255
    156e:	08 95       	ret

00001570 <__divmodhi4_neg2>:
    1570:	70 95       	com	r23
    1572:	61 95       	neg	r22
    1574:	7f 4f       	sbci	r23, 0xFF	; 255

00001576 <__divmodhi4_exit>:
    1576:	08 95       	ret

00001578 <__tablejump2__>:
    1578:	ee 0f       	add	r30, r30
    157a:	ff 1f       	adc	r31, r31
    157c:	05 90       	lpm	r0, Z+
    157e:	f4 91       	lpm	r31, Z
    1580:	e0 2d       	mov	r30, r0
    1582:	09 94       	ijmp

00001584 <__udivmodhi4>:
    1584:	aa 1b       	sub	r26, r26
    1586:	bb 1b       	sub	r27, r27
    1588:	51 e1       	ldi	r21, 0x11	; 17
    158a:	07 c0       	rjmp	.+14     	; 0x159a <__udivmodhi4_ep>

0000158c <__udivmodhi4_loop>:
    158c:	aa 1f       	adc	r26, r26
    158e:	bb 1f       	adc	r27, r27
    1590:	a6 17       	cp	r26, r22
    1592:	b7 07       	cpc	r27, r23
    1594:	10 f0       	brcs	.+4      	; 0x159a <__udivmodhi4_ep>
    1596:	a6 1b       	sub	r26, r22
    1598:	b7 0b       	sbc	r27, r23

0000159a <__udivmodhi4_ep>:
    159a:	88 1f       	adc	r24, r24
    159c:	99 1f       	adc	r25, r25
    159e:	5a 95       	dec	r21
    15a0:	a9 f7       	brne	.-22     	; 0x158c <__udivmodhi4_loop>
    15a2:	80 95       	com	r24
    15a4:	90 95       	com	r25
    15a6:	bc 01       	movw	r22, r24
    15a8:	cd 01       	movw	r24, r26
    15aa:	08 95       	ret

000015ac <__itoa_ncheck>:
    15ac:	bb 27       	eor	r27, r27
    15ae:	4a 30       	cpi	r20, 0x0A	; 10
    15b0:	31 f4       	brne	.+12     	; 0x15be <__itoa_ncheck+0x12>
    15b2:	99 23       	and	r25, r25
    15b4:	22 f4       	brpl	.+8      	; 0x15be <__itoa_ncheck+0x12>
    15b6:	bd e2       	ldi	r27, 0x2D	; 45
    15b8:	90 95       	com	r25
    15ba:	81 95       	neg	r24
    15bc:	9f 4f       	sbci	r25, 0xFF	; 255
    15be:	0c 94 e2 0a 	jmp	0x15c4	; 0x15c4 <__utoa_common>

000015c2 <__utoa_ncheck>:
    15c2:	bb 27       	eor	r27, r27

000015c4 <__utoa_common>:
    15c4:	fb 01       	movw	r30, r22
    15c6:	55 27       	eor	r21, r21
    15c8:	aa 27       	eor	r26, r26
    15ca:	88 0f       	add	r24, r24
    15cc:	99 1f       	adc	r25, r25
    15ce:	aa 1f       	adc	r26, r26
    15d0:	a4 17       	cp	r26, r20
    15d2:	10 f0       	brcs	.+4      	; 0x15d8 <__utoa_common+0x14>
    15d4:	a4 1b       	sub	r26, r20
    15d6:	83 95       	inc	r24
    15d8:	50 51       	subi	r21, 0x10	; 16
    15da:	b9 f7       	brne	.-18     	; 0x15ca <__utoa_common+0x6>
    15dc:	a0 5d       	subi	r26, 0xD0	; 208
    15de:	aa 33       	cpi	r26, 0x3A	; 58
    15e0:	08 f0       	brcs	.+2      	; 0x15e4 <__utoa_common+0x20>
    15e2:	a9 5d       	subi	r26, 0xD9	; 217
    15e4:	a1 93       	st	Z+, r26
    15e6:	00 97       	sbiw	r24, 0x00	; 0
    15e8:	79 f7       	brne	.-34     	; 0x15c8 <__utoa_common+0x4>
    15ea:	b1 11       	cpse	r27, r1
    15ec:	b1 93       	st	Z+, r27
    15ee:	11 92       	st	Z+, r1
    15f0:	cb 01       	movw	r24, r22
    15f2:	0c 94 fb 0a 	jmp	0x15f6	; 0x15f6 <strrev>

000015f6 <strrev>:
    15f6:	dc 01       	movw	r26, r24
    15f8:	fc 01       	movw	r30, r24
    15fa:	67 2f       	mov	r22, r23
    15fc:	71 91       	ld	r23, Z+
    15fe:	77 23       	and	r23, r23
    1600:	e1 f7       	brne	.-8      	; 0x15fa <strrev+0x4>
    1602:	32 97       	sbiw	r30, 0x02	; 2
    1604:	04 c0       	rjmp	.+8      	; 0x160e <strrev+0x18>
    1606:	7c 91       	ld	r23, X
    1608:	6d 93       	st	X+, r22
    160a:	70 83       	st	Z, r23
    160c:	62 91       	ld	r22, -Z
    160e:	ae 17       	cp	r26, r30
    1610:	bf 07       	cpc	r27, r31
    1612:	c8 f3       	brcs	.-14     	; 0x1606 <strrev+0x10>
    1614:	08 95       	ret

00001616 <_exit>:
    1616:	f8 94       	cli

00001618 <__stop_program>:
    1618:	ff cf       	rjmp	.-2      	; 0x1618 <__stop_program>
